{
  "api/Ventuz.Extension.BoundingBoxType.html": {
    "href": "api/Ventuz.Extension.BoundingBoxType.html",
    "title": "Enum BoundingBoxType",
    "summary": "Enum BoundingBoxType Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public enum BoundingBoxType Fields Dynamic = 1 Static = 2"
  },
  "api/Ventuz.Extension.CallToJSExt.html": {
    "href": "api/Ventuz.Extension.CallToJSExt.html",
    "title": "Class CallToJSExt",
    "summary": "Class CallToJSExt Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public static class CallToJSExt Inheritance object CallToJSExt Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Invoke(ICallToJS, params object[]) public static void Invoke(this ICallToJS call, params object[] args) Parameters call ICallToJS args object[]"
  },
  "api/Ventuz.Extension.ColorGamma.html": {
    "href": "api/Ventuz.Extension.ColorGamma.html",
    "title": "Enum ColorGamma",
    "summary": "Enum ColorGamma Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public enum ColorGamma Fields Gamma_2_2 = 1 Linear_1_0 = 2 Unspecified = 0 sRGB = 3"
  },
  "api/Ventuz.Extension.Event.html": {
    "href": "api/Ventuz.Extension.Event.html",
    "title": "Delegate Event",
    "summary": "Delegate Event Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public delegate void Event(int arg = 0, int delay = 0) Parameters arg int delay int Constructors Event(object, IntPtr) public Event(object @object, IntPtr method) Parameters object object method IntPtr Methods BeginInvoke(int, int, AsyncCallback, object) public virtual IAsyncResult BeginInvoke(int arg, int delay, AsyncCallback callback, object @object) Parameters arg int delay int callback AsyncCallback object object Returns IAsyncResult EndInvoke(IAsyncResult) public virtual void EndInvoke(IAsyncResult result) Parameters result IAsyncResult Invoke(int, int) public virtual void Invoke(int arg = 0, int delay = 0) Parameters arg int delay int"
  },
  "api/Ventuz.Extension.HorizontalTextAlignment.html": {
    "href": "api/Ventuz.Extension.HorizontalTextAlignment.html",
    "title": "Enum HorizontalTextAlignment",
    "summary": "Enum HorizontalTextAlignment Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public enum HorizontalTextAlignment Fields Center = 1 Character = 4 Far = 2 Justify = 3 Near = 0"
  },
  "api/Ventuz.Extension.ICallToJS.html": {
    "href": "api/Ventuz.Extension.ICallToJS.html",
    "title": "Interface ICallToJS",
    "summary": "Interface ICallToJS Namespace Ventuz.Extension Assembly Ventuz.Extension.dll [Guid(\"00020400-0000-0000-C000-000000000046\")] [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)] public interface ICallToJS Extension Methods CallToJSExt.Invoke(ICallToJS, params object[])"
  },
  "api/Ventuz.Extension.ICustomResource.html": {
    "href": "api/Ventuz.Extension.ICustomResource.html",
    "title": "Interface ICustomResource",
    "summary": "Interface ICustomResource Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface ICustomResource : IResource"
  },
  "api/Ventuz.Extension.ICustomResourceParameter-1.html": {
    "href": "api/Ventuz.Extension.ICustomResourceParameter-1.html",
    "title": "Interface ICustomResourceParameter<D>",
    "summary": "Interface ICustomResourceParameter<D> Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface ICustomResourceParameter<D> : IResourceParameter<D>, IResourceParameter where D : class, ICustomResource Type Parameters D Methods GenerateResource() D GenerateResource() Returns D"
  },
  "api/Ventuz.Extension.IFontMetrics.html": {
    "href": "api/Ventuz.Extension.IFontMetrics.html",
    "title": "Interface IFontMetrics",
    "summary": "Interface IFontMetrics Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IFontMetrics : IResource"
  },
  "api/Ventuz.Extension.IFontMetricsResourceParameter.html": {
    "href": "api/Ventuz.Extension.IFontMetricsResourceParameter.html",
    "title": "Interface IFontMetricsResourceParameter",
    "summary": "Interface IFontMetricsResourceParameter Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IFontMetricsResourceParameter : IResourceParameter<IFontMetrics>, IResourceParameter Properties Font string Font { get; } Property Value string"
  },
  "api/Ventuz.Extension.IIconIndex.html": {
    "href": "api/Ventuz.Extension.IIconIndex.html",
    "title": "Interface IIconIndex",
    "summary": "Interface IIconIndex Namespace Ventuz.Extension Assembly Ventuz.Extension.dll The interface IIconIndex can be implemented by vx-nodes (derived from VxNode) to provide the current icon of the node. Nodes can change their icon appearance depending on their status, for example. The icons to be indexed here must be declared by using the VxIconAttribute with specified index. public interface IIconIndex Properties IconIndex Gets the index of the icon to be used int IconIndex { get; } Property Value int"
  },
  "api/Ventuz.Extension.IIconTag.html": {
    "href": "api/Ventuz.Extension.IIconTag.html",
    "title": "Interface IIconTag",
    "summary": "Interface IIconTag Namespace Ventuz.Extension Assembly Ventuz.Extension.dll The interface IIconTag can be implemented by vx-property-groups (derived from VxPropertyGroup) to provide an additional (short) text message drawn below the icon. public interface IIconTag Properties IconTag Gets the string drawn below the icon of a property group string IconTag { get; } Property Value string"
  },
  "api/Ventuz.Extension.IMaterial.html": {
    "href": "api/Ventuz.Extension.IMaterial.html",
    "title": "Interface IMaterial",
    "summary": "Interface IMaterial Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IMaterial"
  },
  "api/Ventuz.Extension.IMesh.html": {
    "href": "api/Ventuz.Extension.IMesh.html",
    "title": "Interface IMesh",
    "summary": "Interface IMesh Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IMesh : IResource Properties FrameCount int FrameCount { get; } Property Value int SubsetCount int SubsetCount { get; } Property Value int"
  },
  "api/Ventuz.Extension.IMeshFactory.html": {
    "href": "api/Ventuz.Extension.IMeshFactory.html",
    "title": "Interface IMeshFactory",
    "summary": "Interface IMeshFactory Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IMeshFactory Methods CreateTriangleList<V>(V[], ushort[]) IMesh CreateTriangleList<V>(V[] vertices, ushort[] indicies) where V : struct, IVertex Parameters vertices V[] indicies ushort[] Returns IMesh Type Parameters V CreateTriangleList<V>(V[], ushort[], Subset[]) IMesh CreateTriangleList<V>(V[] vertices, ushort[] indicies, Subset[] subsets) where V : struct, IVertex Parameters vertices V[] indicies ushort[] subsets Subset[] Returns IMesh Type Parameters V CreateTriangleList<V>(V[], uint[]) IMesh CreateTriangleList<V>(V[] vertices, uint[] indicies) where V : struct, IVertex Parameters vertices V[] indicies uint[] Returns IMesh Type Parameters V CreateTriangleList<V>(V[], uint[], Subset[]) IMesh CreateTriangleList<V>(V[] vertices, uint[] indicies, Subset[] subsets) where V : struct, IVertex Parameters vertices V[] indicies uint[] subsets Subset[] Returns IMesh Type Parameters V CreateTriangleList<V, I>(int, int, Action<IntPtr, IntPtr>) IMesh CreateTriangleList<V, I>(int vertexCount, int indexCount, Action<IntPtr, IntPtr> fillBuffers) where V : struct, IVertex where I : struct Parameters vertexCount int indexCount int fillBuffers Action<IntPtr, IntPtr> Returns IMesh Type Parameters V I CreateTriangleList<V, I>(int, int, int, Action<IntPtr, IntPtr, IntPtr>) IMesh CreateTriangleList<V, I>(int vertexCount, int indexCount, int subsetCount, Action<IntPtr, IntPtr, IntPtr> fillBuffers) where V : struct, IVertex where I : struct Parameters vertexCount int indexCount int subsetCount int fillBuffers Action<IntPtr, IntPtr, IntPtr> Returns IMesh Type Parameters V I"
  },
  "api/Ventuz.Extension.IMeshResourceParameter.html": {
    "href": "api/Ventuz.Extension.IMeshResourceParameter.html",
    "title": "Interface IMeshResourceParameter",
    "summary": "Interface IMeshResourceParameter Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IMeshResourceParameter : IResourceParameter<IMesh>, IResourceParameter Methods GenerateMesh(IMeshFactory) IMesh GenerateMesh(IMeshFactory meshFactory) Parameters meshFactory IMeshFactory Returns IMesh"
  },
  "api/Ventuz.Extension.IName.html": {
    "href": "api/Ventuz.Extension.IName.html",
    "title": "Interface IName",
    "summary": "Interface IName Namespace Ventuz.Extension Assembly Ventuz.Extension.dll The interface IName can be implemented by vx-nodes (derived from VxNode) to provide a static name to the UI. The user is not able to change the name of the node anymore if this interface is implemented. public interface IName Properties StaticName Gets the static name of a node string StaticName { get; } Property Value string"
  },
  "api/Ventuz.Extension.IPersistence.html": {
    "href": "api/Ventuz.Extension.IPersistence.html",
    "title": "Interface IPersistence",
    "summary": "Interface IPersistence Namespace Ventuz.Extension Assembly Ventuz.Extension.dll The interface IPersistence can be implemented by vx-nodes (derived from VxNode) to handle additional data that are loaded and saved with the node. public interface IPersistence Methods Deserialize(VxPersistentData) Called if the implementing node is loaded. void Deserialize(VxPersistentData data) Parameters data VxPersistentData contains the loaded data Serialize(VxPersistentData) Called if the implementing node is saved. void Serialize(VxPersistentData dataToFill) Parameters dataToFill VxPersistentData The data to be filled with additional data to be saved (serialized)"
  },
  "api/Ventuz.Extension.IProxyResource.html": {
    "href": "api/Ventuz.Extension.IProxyResource.html",
    "title": "Interface IProxyResource",
    "summary": "Interface IProxyResource Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IProxyResource : IResource, IDisposable Inherited Members IDisposable.Dispose()"
  },
  "api/Ventuz.Extension.IResource.html": {
    "href": "api/Ventuz.Extension.IResource.html",
    "title": "Interface IResource",
    "summary": "Interface IResource Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IResource"
  },
  "api/Ventuz.Extension.IResourceParameter-1.html": {
    "href": "api/Ventuz.Extension.IResourceParameter-1.html",
    "title": "Interface IResourceParameter<R>",
    "summary": "Interface IResourceParameter<R> Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IResourceParameter<R> : IResourceParameter where R : IResource Type Parameters R"
  },
  "api/Ventuz.Extension.IResourceParameter.html": {
    "href": "api/Ventuz.Extension.IResourceParameter.html",
    "title": "Interface IResourceParameter",
    "summary": "Interface IResourceParameter Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IResourceParameter"
  },
  "api/Ventuz.Extension.IStatus.html": {
    "href": "api/Ventuz.Extension.IStatus.html",
    "title": "Interface IStatus",
    "summary": "Interface IStatus Namespace Ventuz.Extension Assembly Ventuz.Extension.dll The interface IStatus can be implemented by vx-property-groups (derived from VxPropertyGroup) to provide a text message describing the current status of the property group. public interface IStatus Properties StatusText Gets the status string displayed for a property group string StatusText { get; } Property Value string"
  },
  "api/Ventuz.Extension.IText.html": {
    "href": "api/Ventuz.Extension.IText.html",
    "title": "Interface IText",
    "summary": "Interface IText Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IText : IResource Properties BoundingBox FRect BoundingBox { get; } Property Value FRect ConsumedSourceChars int ConsumedSourceChars { get; } Property Value int FollowUpBaseLine float FollowUpBaseLine { get; } Property Value float"
  },
  "api/Ventuz.Extension.ITextRenderObject.html": {
    "href": "api/Ventuz.Extension.ITextRenderObject.html",
    "title": "Interface ITextRenderObject",
    "summary": "Interface ITextRenderObject Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface ITextRenderObject : IProxyResource, IResource, IDisposable Inherited Members IDisposable.Dispose()"
  },
  "api/Ventuz.Extension.ITextResourceParameter.html": {
    "href": "api/Ventuz.Extension.ITextResourceParameter.html",
    "title": "Interface ITextResourceParameter",
    "summary": "Interface ITextResourceParameter Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface ITextResourceParameter : IResourceParameter<IText>, IResourceParameter"
  },
  "api/Ventuz.Extension.ITexture.html": {
    "href": "api/Ventuz.Extension.ITexture.html",
    "title": "Interface ITexture",
    "summary": "Interface ITexture Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface ITexture : IResource"
  },
  "api/Ventuz.Extension.ITextureFactory.html": {
    "href": "api/Ventuz.Extension.ITextureFactory.html",
    "title": "Interface ITextureFactory",
    "summary": "Interface ITextureFactory Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface ITextureFactory Methods CreateTexture(uint, uint, bool, IntPtr, uint, uint, TextureFormat, ColorGamma) ITexture CreateTexture(uint width, uint height, bool copyData, IntPtr data, uint pitch = 0, uint mipmaps = 0, TextureFormat format = TextureFormat.BGRA_UN8, ColorGamma gamma = ColorGamma.Gamma_2_2) Parameters width uint height uint copyData bool data IntPtr pitch uint mipmaps uint format TextureFormat gamma ColorGamma Returns ITexture GetBytesPerPixel(TextureFormat) uint GetBytesPerPixel(TextureFormat format) Parameters format TextureFormat Returns uint"
  },
  "api/Ventuz.Extension.ITextureResourceParameter.html": {
    "href": "api/Ventuz.Extension.ITextureResourceParameter.html",
    "title": "Interface ITextureResourceParameter",
    "summary": "Interface ITextureResourceParameter Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface ITextureResourceParameter : IResourceParameter<ITexture>, IResourceParameter Methods GenerateTexture(ITextureFactory) ITexture GenerateTexture(ITextureFactory textureFactory) Parameters textureFactory ITextureFactory Returns ITexture"
  },
  "api/Ventuz.Extension.ITooltip.html": {
    "href": "api/Ventuz.Extension.ITooltip.html",
    "title": "Interface ITooltip",
    "summary": "Interface ITooltip Namespace Ventuz.Extension Assembly Ventuz.Extension.dll The interface ITooltip can be implemented by vx-nodes (derived from VxNode) to provide a tooltip text presented to the user. public interface ITooltip Properties Tooltip Gets the tooltip presented to the user for the implementing node. string Tooltip { get; } Property Value string"
  },
  "api/Ventuz.Extension.IUsedUris.html": {
    "href": "api/Ventuz.Extension.IUsedUris.html",
    "title": "Interface IUsedUris",
    "summary": "Interface IUsedUris Namespace Ventuz.Extension Assembly Ventuz.Extension.dll The interface IUsedUris can be implemented by vx-nodes (derived from VxNode) to provide additional Uris (resources) that need to be included into an archive. If a node utilized more Uris than stored in its properties, this interface allows to advise additional ones. public interface IUsedUris Methods GetUsedUris() Gets an array of Uris that should be included in an archive Uri[] GetUsedUris() Returns Uri[] The array of Uris (resources) to include in an exported archive"
  },
  "api/Ventuz.Extension.IVertex.html": {
    "href": "api/Ventuz.Extension.IVertex.html",
    "title": "Interface IVertex",
    "summary": "Interface IVertex Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IVertex Properties Size uint Size { get; } Property Value uint VertexFormat VertexFormat VertexFormat { get; } Property Value VertexFormat"
  },
  "api/Ventuz.Extension.IVxApi.html": {
    "href": "api/Ventuz.Extension.IVxApi.html",
    "title": "Interface IVxApi",
    "summary": "Interface IVxApi Namespace Ventuz.Extension Assembly Ventuz.Extension.dll This interface is the base interface of all API interfaces and doesn't provide any members public interface IVxApi"
  },
  "api/Ventuz.Extension.IVxApiDesigner.html": {
    "href": "api/Ventuz.Extension.IVxApiDesigner.html",
    "title": "Interface IVxApiDesigner",
    "summary": "Interface IVxApiDesigner Namespace Ventuz.Extension Assembly Ventuz.Extension.dll This interface represents the designer api. All provided methods are only available in the context of a running Designer. public interface IVxApiDesigner : IVxApi Methods CloseScene(VxScene, bool) Close a scene in Designer. Optionally query the user to save the scene if it was modified. void CloseScene(VxScene scene, bool queryUser = true) Parameters scene VxScene Scene to close queryUser bool If true, the user is queried to save the scene if the scene was modified CreateAndOpenScene(Action<VxScene>, string, bool) Create a new scene and optionally opens it in Designer. An optional lambda action can be provided to create the initial nodes in this scene. VxScene CreateAndOpenScene(Action<VxScene> buildSceneAction = null, string nameTemplate = null, bool withLayer3D = true) Parameters buildSceneAction Action<VxScene> If specified, this action is called to build the scene nameTemplate string An optional name template, default its \"New\". The template will also create an increasing number if it already exists (\"New1\", \"New2\", ...) withLayer3D bool If set to true, the new scene will contain a default 3D layer. Default is true Returns VxScene The created scene ExportArchive(VxScene, Uri, bool) Exports a scene into a scene archive (vza) void ExportArchive(VxScene scene, Uri uri = null, bool queryUser = true) Parameters scene VxScene Scene to be exported uri Uri File to store the archive. A user dialog is shown to select and output file. queryUser bool If true the user can selected the files and resources to be included in the archive. If false all referenced resources will be included. ExportPresentation(VxScene, Uri, bool) Exports a scene into a presentation (vza) void ExportPresentation(VxScene scene, Uri uri = null, bool queryUser = true) Parameters scene VxScene Scene to be exported uri Uri File to store the archive. A user dialog is shown to select and output file. queryUser bool If true the user can selected the files and resources to be included in the presentation archive. If false all referenced resources will be included. GetCurrentContainer() Gets the currently active container within the currently active scene IVxContainer GetCurrentContainer() Returns IVxContainer The currently active container of the currently active scene GetCurrentScene() Get the currently active scene in Designer. VxScene GetCurrentScene() Returns VxScene The currently active scene in Designer or NULL if Designer has no scene open GetLoadedAndOpenScenes() Get all open scenes. Open scenes are loaded of course. VxScene[] GetLoadedAndOpenScenes() Returns VxScene[] Array of scenes open in Designer GetUiStyle() Get the current UI style VxUiStyle GetUiStyle() Returns VxUiStyle Current UI style ImportArchive(Uri, bool, bool) Imports an archive from file into the project. User gets optionally queried if files need to be overwritten. The imported scene is optionally opened in Designer. VxScene ImportArchive(Uri uri, bool openScene = true, bool queryUser = true) Parameters uri Uri Uri of the archive to import openScene bool Open the scene in Designer after import if set to true queryUser bool Queries the user to overwrite files if set to true Returns VxScene The imported scene IsSceneOpen(VxScene) Test if a given scene is open in Designer bool IsSceneOpen(VxScene scene) Parameters scene VxScene Scene to be tested Returns bool true if scene is open in Designer LoadAndOpenScene(string) Load and open a scene in Designer. If a scene with the same identity is already loaded the Designer will use the existing one. VxScene LoadAndOpenScene(string identity) Parameters identity string The identity of the scene to be loaded, (lower case filename without extension) Returns VxScene The loaded scene or the existing scene with same identity Navigate(VxNode) Navigates the user interface to a node. If required the currently active scene is switched and the property editor select the node. bool Navigate(VxNode node) Parameters node VxNode Node to navigate to Returns bool true if the navigation was successful OpenScene(VxScene) Opens a scene in Designer. The scene must be loaded into memory before. If another scene with the same identity is already opened this call does nothing. void OpenScene(VxScene scene) Parameters scene VxScene The scene to open (activate) in Designer"
  },
  "api/Ventuz.Extension.IVxApiEngine.html": {
    "href": "api/Ventuz.Extension.IVxApiEngine.html",
    "title": "Interface IVxApiEngine",
    "summary": "Interface IVxApiEngine Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IVxApiEngine : IVxApi Properties ClusterClock ulong ClusterClock { get; } Property Value ulong IsMainThread bool IsMainThread { get; } Property Value bool Methods GetTimeBase(out int, out int) void GetTimeBase(out int numerator, out int denominator) Parameters numerator int denominator int"
  },
  "api/Ventuz.Extension.IVxApiIO.html": {
    "href": "api/Ventuz.Extension.IVxApiIO.html",
    "title": "Interface IVxApiIO",
    "summary": "Interface IVxApiIO Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IVxApiIO : IVxApi Methods Exists(Uri) bool Exists(Uri uri) Parameters uri Uri Returns bool GetReadStream(Uri) Stream GetReadStream(Uri uri) Parameters uri Uri Returns Stream GetWriteStream(Uri) Stream GetWriteStream(Uri uri) Parameters uri Uri Returns Stream"
  },
  "api/Ventuz.Extension.IVxApiLog.html": {
    "href": "api/Ventuz.Extension.IVxApiLog.html",
    "title": "Interface IVxApiLog",
    "summary": "Interface IVxApiLog Namespace Ventuz.Extension Assembly Ventuz.Extension.dll The IVxApiLog interface is used to log messages. Log message can provide a sender that helps to navigate to if the use clicks on a message public interface IVxApiLog : IVxApi Methods Debug(object, string) Sends a debug message to the log void Debug(object c, string message) Parameters c object The sender (usually a node) or null message string Text of the message Error(object, string, Exception, bool) Sends a error message to the log void Error(object c, string message, Exception ex = null, bool popupInDesigner = false) Parameters c object The sender (usually a node) or null message string Text of the message ex Exception If not not, the text of the exception will be added to message popupInDesigner bool If true, a popup window is shown if current process is the Designer Info(object, string, bool) Sends an info message to the log void Info(object c, string message, bool popupInDesigner = false) Parameters c object The sender (usually a node) or null message string Text of the message popupInDesigner bool If true, a popup window is shown if current process is the Designer Warning(object, string, Exception, bool) Sends a warning message to the log void Warning(object c, string message, Exception ex = null, bool popupInDesigner = false) Parameters c object The sender (usually a node) or null message string Text of the message ex Exception If not not, the text of the exception will be added to message popupInDesigner bool If true, a popup window is shown if current process is the Designer"
  },
  "api/Ventuz.Extension.IVxApiNodeValidation.html": {
    "href": "api/Ventuz.Extension.IVxApiNodeValidation.html",
    "title": "Interface IVxApiNodeValidation",
    "summary": "Interface IVxApiNodeValidation Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IVxApiNodeValidation : IVxApi Properties PipeIndex int? PipeIndex { get; } Property Value int? Methods EnqueueCall(VxMethod, int, ushort) void EnqueueCall(VxMethod method, int arg = 0, ushort delay = 0) Parameters method VxMethod arg int delay ushort EnqueueFire(VxEvent, int, ushort) void EnqueueFire(VxEvent ev, int arg = 0, ushort delay = 0) Parameters ev VxEvent arg int delay ushort Invalidate() void Invalidate() Invalidate(VxBaseProperty) void Invalidate(VxBaseProperty property) Parameters property VxBaseProperty SetChildOptions(int, bool?, float?, int?) bool SetChildOptions(int index, bool? blocked = null, float? opacity = null, int? order = null) Parameters index int blocked bool? opacity float? order int? Returns bool SetOutputOptions(int, bool?, float?, in Matrix44A?, int?) bool SetOutputOptions(int index, bool? blocked = null, float? alpha = null, in Matrix44A? axis = null, int? order = null) Parameters index int blocked bool? alpha float? axis Matrix44A? order int? Returns bool"
  },
  "api/Ventuz.Extension.IVxApiProject.html": {
    "href": "api/Ventuz.Extension.IVxApiProject.html",
    "title": "Interface IVxApiProject",
    "summary": "Interface IVxApiProject Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IVxApiProject : IVxApi Methods CloseAllScenes() void CloseAllScenes() CloseScene(VxScene, bool) void CloseScene(VxScene scene, bool fullTree = false) Parameters scene VxScene fullTree bool CreateScene(string, bool) VxScene CreateScene(string nameTemplate = null, bool withLayer3D = true) Parameters nameTemplate string withLayer3D bool Returns VxScene GetLoadedScenes() VxScene[] GetLoadedScenes() Returns VxScene[] LoadScene(string) VxScene LoadScene(string identity) Parameters identity string Returns VxScene"
  },
  "api/Ventuz.Extension.IVxApiRenderer.html": {
    "href": "api/Ventuz.Extension.IVxApiRenderer.html",
    "title": "Interface IVxApiRenderer",
    "summary": "Interface IVxApiRenderer Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IVxApiRenderer : IVxApi Methods PopMaterial() void PopMaterial() PushMaterial(IMaterial) void PushMaterial(IMaterial material) Parameters material IMaterial RenderMesh(IMesh, params RenderMeshDetails[]) void RenderMesh(IMesh mesh, params RenderMeshDetails[] details) Parameters mesh IMesh details RenderMeshDetails[] RenderText(ITextRenderObject, in Matrix44A?) void RenderText(ITextRenderObject textRenderObject, in Matrix44A? axis) Parameters textRenderObject ITextRenderObject axis Matrix44A?"
  },
  "api/Ventuz.Extension.IVxApiResources.html": {
    "href": "api/Ventuz.Extension.IVxApiResources.html",
    "title": "Interface IVxApiResources",
    "summary": "Interface IVxApiResources Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IVxApiResources : IVxApi Methods CreateCustomResource<D>(string, ICustomResourceParameter<D>) D CreateCustomResource<D>(string name, ICustomResourceParameter<D> parameter) where D : class, ICustomResource Parameters name string parameter ICustomResourceParameter<D> Returns D Type Parameters D CreateCustomResource<D>(ref D, ICustomResourceParameter<D>) void CreateCustomResource<D>(ref D resource, ICustomResourceParameter<D> parameter) where D : class, ICustomResource Parameters resource D parameter ICustomResourceParameter<D> Type Parameters D CreateMesh<P>(string, P) IMesh CreateMesh<P>(string name, P parameter) where P : struct, IMeshResourceParameter Parameters name string parameter P Returns IMesh Type Parameters P CreateMesh<P>(ref IMesh, P) void CreateMesh<P>(ref IMesh meshResource, P parameter) where P : struct, IMeshResourceParameter Parameters meshResource IMesh parameter P Type Parameters P CreateText(string, string, TextLayoutOptions, string) IText CreateText(string name, string text, TextLayoutOptions layoutOptions = null, string font = null) Parameters name string text string layoutOptions TextLayoutOptions font string Returns IText CreateText(ref IText, string, TextLayoutOptions, string) void CreateText(ref IText textResource, string text, TextLayoutOptions layoutOptions = null, string font = null) Parameters textResource IText text string layoutOptions TextLayoutOptions font string CreateText2D(ref ITextRenderObject, IText, string) void CreateText2D(ref ITextRenderObject textRenderResource, IText text, string style) Parameters textRenderResource ITextRenderObject text IText style string CreateTexture<P>(string, P) ITexture CreateTexture<P>(string name, P parameter) where P : struct, ITextureResourceParameter Parameters name string parameter P Returns ITexture Type Parameters P CreateTexture<P>(ref ITexture, P) void CreateTexture<P>(ref ITexture textureResource, P parameter) where P : struct, ITextureResourceParameter Parameters textureResource ITexture parameter P Type Parameters P ReleaseLocalResource(ref IResource) void ReleaseLocalResource(ref IResource resource) Parameters resource IResource"
  },
  "api/Ventuz.Extension.IVxApiSceneBuilder.html": {
    "href": "api/Ventuz.Extension.IVxApiSceneBuilder.html",
    "title": "Interface IVxApiSceneBuilder",
    "summary": "Interface IVxApiSceneBuilder Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IVxApiSceneBuilder : IVxApi Extension Methods VxApiSceneModifyExt.CreateNode<T>(IVxApiSceneBuilder, IVxContainer, string) Methods AddListProperty<PG>(VxGroupPropertyList<PG>, Type) VxGroupProperty<PG> AddListProperty<PG>(VxGroupPropertyList<PG> p, Type newPG) where PG : VxPropertyGroup Parameters p VxGroupPropertyList<PG> newPG Type Returns VxGroupProperty<PG> Type Parameters PG BindMethod(VxMethod, VxEvent) void BindMethod(VxMethod tgt, VxEvent src) Parameters tgt VxMethod src VxEvent BindProperty(VxProperty, VxProperty) void BindProperty(VxProperty tgt, VxProperty src) Parameters tgt VxProperty src VxProperty CreateNode(Type, IVxContainer, string) VxNode CreateNode(Type type, IVxContainer container, string name = null) Parameters type Type container IVxContainer name string Returns VxNode DeleteOutput(VxOutputList, int) void DeleteOutput(VxOutputList outputs, int index) Parameters outputs VxOutputList index int EnumerateOutput(VxLayerOutput) IEnumerator<VxLayerNode> EnumerateOutput(VxLayerOutput layers) Parameters layers VxLayerOutput Returns IEnumerator<VxLayerNode> EnumerateOutput(VxOutput) IEnumerator<VxHierarchyNode> EnumerateOutput(VxOutput vxOutput) Parameters vxOutput VxOutput Returns IEnumerator<VxHierarchyNode> EnumerateOutputs(VxOutputList) IEnumerator<VxOutput> EnumerateOutputs(VxOutputList outputs) Parameters outputs VxOutputList Returns IEnumerator<VxOutput> GetActive(VxPort) bool GetActive(VxPort port) Parameters port VxPort Returns bool GetBlocked(VxLink) bool GetBlocked(VxLink link) Parameters link VxLink Returns bool GetChild(VxLayerOutput, int) VxLayerNode GetChild(VxLayerOutput layers, int index) Parameters layers VxLayerOutput index int Returns VxLayerNode GetChild(VxOutput, int) VxHierarchyNode GetChild(VxOutput output, int index) Parameters output VxOutput index int Returns VxHierarchyNode GetChildren(VxLayerNode, int) VxLayerOutput GetChildren(VxLayerNode layer, int index = 0) Parameters layer VxLayerNode index int Returns VxLayerOutput GetCollapsed(VxLink) bool GetCollapsed(VxLink link) Parameters link VxLink Returns bool GetContainer(VxNode) IVxContainer GetContainer(VxNode node) Parameters node VxNode Returns IVxContainer GetCount(VxLayerOutput) int GetCount(VxLayerOutput layerList) Parameters layerList VxLayerOutput Returns int GetCount(VxOutput) int GetCount(VxOutput output) Parameters output VxOutput Returns int GetCount(VxOutputList) int GetCount(VxOutputList outputList) Parameters outputList VxOutputList Returns int GetDisplayName(VxScene, bool, bool) string GetDisplayName(VxScene scene, bool withFolder = true, bool withNeedSave = false) Parameters scene VxScene withFolder bool withNeedSave bool Returns string GetEvent(VxMemberOwner, string) VxEvent GetEvent(VxMemberOwner owner, string name) Parameters owner VxMemberOwner name string Returns VxEvent GetFromNode(VxLink) VxHierarchyBaseNode GetFromNode(VxLink link) Parameters link VxLink Returns VxHierarchyBaseNode GetGroupPropertyValue<PG>(VxGroupProperty<PG>) PG GetGroupPropertyValue<PG>(VxGroupProperty<PG> p) where PG : VxPropertyGroup Parameters p VxGroupProperty<PG> Returns PG Type Parameters PG GetID(VxNode) Guid GetID(VxNode node) Parameters node VxNode Returns Guid GetIID(VxScene) string GetIID(VxScene scene) Parameters scene VxScene Returns string GetIdentity(VxScene) string GetIdentity(VxScene scene) Parameters scene VxScene Returns string GetIndex(VxLink) int GetIndex(VxLink link) Parameters link VxLink Returns int GetLayers(VxScene) VxLayerBaseNode[] GetLayers(VxScene scene) Parameters scene VxScene Returns VxLayerBaseNode[] GetLinks(VxHierarchyBaseNode) VxLink[] GetLinks(VxHierarchyBaseNode node) Parameters node VxHierarchyBaseNode Returns VxLink[] GetListCount<PG>(VxGroupPropertyList<PG>) int GetListCount<PG>(VxGroupPropertyList<PG> p) where PG : VxPropertyGroup Parameters p VxGroupPropertyList<PG> Returns int Type Parameters PG GetListProperty<PG>(VxGroupPropertyList<PG>, int) VxGroupProperty<PG> GetListProperty<PG>(VxGroupPropertyList<PG> p, int index) where PG : VxPropertyGroup Parameters p VxGroupPropertyList<PG> index int Returns VxGroupProperty<PG> Type Parameters PG GetMainContainer(VxScene) VxMainContainer GetMainContainer(VxScene vxScene) Parameters vxScene VxScene Returns VxMainContainer GetMemberName(VxMember) string GetMemberName(VxMember vxMember) Parameters vxMember VxMember Returns string GetMemberStatus(VxMember) VxMemberStatus GetMemberStatus(VxMember vxMember) Parameters vxMember VxMember Returns VxMemberStatus GetMethod(VxMemberOwner, string) VxMethod GetMethod(VxMemberOwner owner, string name) Parameters owner VxMemberOwner name string Returns VxMethod GetName(VxNode) string GetName(VxNode node) Parameters node VxNode Returns string GetNeedSave(VxScene) bool GetNeedSave(VxScene scene) Parameters scene VxScene Returns bool GetNodes(VxScene) VxNode[] GetNodes(VxScene scene) Parameters scene VxScene Returns VxNode[] GetOutput(VxLink) VxOutput GetOutput(VxLink link) Parameters link VxLink Returns VxOutput GetOutput(VxOutputList, int) VxOutput GetOutput(VxOutputList outputs, int index) Parameters outputs VxOutputList index int Returns VxOutput GetOutputName(VxOutput) string GetOutputName(VxOutput vxOutput) Parameters vxOutput VxOutput Returns string GetOutputs(VxHierarchyBaseNode) VxOutputList GetOutputs(VxHierarchyBaseNode node) Parameters node VxHierarchyBaseNode Returns VxOutputList GetPort(VxScene) VxPort GetPort(VxScene scene) Parameters scene VxScene Returns VxPort GetPortFlags(VxPort) VxPortFlags GetPortFlags(VxPort port) Parameters port VxPort Returns VxPortFlags GetPortName(VxPort) string GetPortName(VxPort port) Parameters port VxPort Returns string GetPortOrdinal(VxPort) int GetPortOrdinal(VxPort port) Parameters port VxPort Returns int GetPorts(VxScene) VxPort[] GetPorts(VxScene scene) Parameters scene VxScene Returns VxPort[] GetProperty(VxMemberOwner, string) VxBaseProperty GetProperty(VxMemberOwner owner, string name) Parameters owner VxMemberOwner name string Returns VxBaseProperty GetPropertyValue<T>(VxReadOnlyProperty<T>) T GetPropertyValue<T>(VxReadOnlyProperty<T> p) Parameters p VxReadOnlyProperty<T> Returns T Type Parameters T GetRoot(IVxContainer) VxHierarchyContainerRoot GetRoot(IVxContainer container) Parameters container IVxContainer Returns VxHierarchyContainerRoot GetScene(VxPort) VxScene GetScene(VxPort port) Parameters port VxPort Returns VxScene GetSceneOfPort(VxPort) VxScene GetSceneOfPort(VxPort port) Parameters port VxPort Returns VxScene GetToNode(VxLink) VxHierarchyBaseNode GetToNode(VxLink link) Parameters link VxLink Returns VxHierarchyBaseNode GetUri(VxScene) Uri GetUri(VxScene scene) Parameters scene VxScene Returns Uri InsertOutput(VxOutputList, int, string) VxOutput InsertOutput(VxOutputList outputs, int index, string name) Parameters outputs VxOutputList index int name string Returns VxOutput IsValid(VxScene) bool IsValid(VxScene scene) Parameters scene VxScene Returns bool LinkTo(VxHierarchyBaseNode, VxOutput, int) VxLink LinkTo(VxHierarchyBaseNode node, VxOutput output, int index = -1) Parameters node VxHierarchyBaseNode output VxOutput index int Returns VxLink ModifyAsync(VxSceneElement, Action<VxScene>, params VxScene[]) Task ModifyAsync(VxSceneElement sceneElement, Action<VxScene> sceneModificationAction, params VxScene[] scenesToRead) Parameters sceneElement VxSceneElement sceneModificationAction Action<VxScene> scenesToRead VxScene[] Returns Task SetActive(VxPort, bool) void SetActive(VxPort port, bool active) Parameters port VxPort active bool SetBlocked(VxLink, bool) void SetBlocked(VxLink link, bool value) Parameters link VxLink value bool SetCollapsed(VxLink, bool) void SetCollapsed(VxLink link, bool value) Parameters link VxLink value bool SetGroupPropertyValue<PG>(VxGroupProperty<PG>, Type, bool) PG SetGroupPropertyValue<PG>(VxGroupProperty<PG> p, Type newPG, bool migrateData = true) where PG : VxPropertyGroup Parameters p VxGroupProperty<PG> newPG Type migrateData bool Returns PG Type Parameters PG SetName(VxNode, string) void SetName(VxNode node, string name) Parameters node VxNode name string SetNeedSave(VxScene, bool) void SetNeedSave(VxScene scene, bool value) Parameters scene VxScene value bool SetOutputName(VxOutput, string) void SetOutputName(VxOutput vxOutput, string value) Parameters vxOutput VxOutput value string SetPropertyValue<T>(VxProperty<T>, T) void SetPropertyValue<T>(VxProperty<T> p, T value) Parameters p VxProperty<T> value T Type Parameters T SetScene(VxPort, VxScene) void SetScene(VxPort port, VxScene scene) Parameters port VxPort scene VxScene Unlink(VxLink) void Unlink(VxLink link) Parameters link VxLink"
  },
  "api/Ventuz.Extension.IVxApiUiWindows.html": {
    "href": "api/Ventuz.Extension.IVxApiUiWindows.html",
    "title": "Interface IVxApiUiWindows",
    "summary": "Interface IVxApiUiWindows Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IVxApiUiWindows : IVxApi Properties CurrentWindowLayout string CurrentWindowLayout { get; } Property Value string Methods GetWindow(Guid) VxWindowBase GetWindow(Guid id) Parameters id Guid Returns VxWindowBase GetWindowId(Control) Guid GetWindowId(Control control) Parameters control Control Returns Guid GetWindowLayoutDisplayName(string) string GetWindowLayoutDisplayName(string name) Parameters name string Returns string GetWindowLayouts() string[] GetWindowLayouts() Returns string[] GetWindowVisibility(Guid) bool? GetWindowVisibility(Guid id) Parameters id Guid Returns bool? GetWindowVisibility<T>() bool? GetWindowVisibility<T>() where T : VxWindowBase Returns bool? Type Parameters T GetWindow<T>() T GetWindow<T>() where T : VxWindowBase Returns T Type Parameters T SetWindowLayoutDisplayName(string, string) void SetWindowLayoutDisplayName(string name, string displayName) Parameters name string displayName string SetWindowVisibility(Guid, bool) bool? SetWindowVisibility(Guid id, bool visible) Parameters id Guid visible bool Returns bool? SetWindowVisibility<T>(bool) bool? SetWindowVisibility<T>(bool visible) where T : VxWindowBase Parameters visible bool Returns bool? Type Parameters T SwitchWindowLayout(string) bool SwitchWindowLayout(string name) Parameters name string Returns bool ToggleWindowVisibility(Guid) bool? ToggleWindowVisibility(Guid id) Parameters id Guid Returns bool? ToggleWindowVisibility<T>() bool? ToggleWindowVisibility<T>() where T : VxWindowBase Returns bool? Type Parameters T"
  },
  "api/Ventuz.Extension.IVxContainer.html": {
    "href": "api/Ventuz.Extension.IVxContainer.html",
    "title": "Interface IVxContainer",
    "summary": "Interface IVxContainer Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IVxContainer Extension Methods VxContainerExt.CreateNodeAfter<T>(IVxContainer, VxHierarchyBaseNode, string) VxContainerExt.CreateNodeBefore<T>(IVxContainer, VxHierarchyBaseNode, string) VxContainerExt.CreateNodeBehind<T>(IVxContainer, VxHierarchyBaseNode, string) VxContainerExt.CreateNode<T>(IVxContainer, string) VxContainerExt.GetRoot(IVxContainer)"
  },
  "api/Ventuz.Extension.IVxDataObject.html": {
    "href": "api/Ventuz.Extension.IVxDataObject.html",
    "title": "Interface IVxDataObject",
    "summary": "Interface IVxDataObject Namespace Ventuz.Extension Assembly Ventuz.Extension.dll The interface IVxDataObject is a simple bridge to IDataObject extended by some Vx related properties. An implementation of this interface is passed to the Probe and Create methods of a VxDataObjectHandler. The members of this interface can only be accessed from the main thread! public interface IVxDataObject Properties AnyProgressReceived Returns true if any progress message was received bool AnyProgressReceived { get; } Property Value bool Container Gets the container this operation is probed or executed. Container is NULL if the operation is on scene level. IVxContainer Container { get; } Property Value IVxContainer IsDragDrop Returns true if the operation is a drag'n'drop operation. False if it is a copy/paste operation. bool IsDragDrop { get; } Property Value bool Result Gets the combination requested results. For example Hierarchy node. VxDataObjectResult Result { get; } Property Value VxDataObjectResult Methods GetData(string, bool) Retrieves the data associated with the specified data format object GetData(string format, bool autoConvert = false) Parameters format string The format of the data to retrieve. See DataFormatsfor predefined formats autoConvert bool true to convert the data to the specified format; otherwise, false. Returns object The data associated with the specified format, or null. GetDataPresent(string, bool) Determines whether data stored in this instance is associated with the specified format, using a Boolean value to determine whether to convert the data to the format bool GetDataPresent(string format, bool autoConvert = false) Parameters format string The format for which to check. See DataFormatsfor predefined formats autoConvert bool true to determine whether data stored in this instance can be converted to the specified format; false to check whether the data is in the specified format. Returns bool true if the data is in, or can be converted to, the specified format; otherwise, false. GetDataPresent<T>() Determines whether data stored in this instance is associated with the specified type T, using a Boolean value to determine whether to convert the data to the format bool GetDataPresent<T>() Returns bool true if the data is in, or can be converted to, the specified format; otherwise, false. Type Parameters T The type for which to check GetData<T>() Retrieves the data associated with the specified data type T T GetData<T>() Returns T The data associated with the specified type, or default of T Type Parameters T The format of the data to retrieve GetFormats(bool) Gets available OLE formats in the data object. See DataFormatsfor predefined formats. string[] GetFormats(bool autoConvert = false) Parameters autoConvert bool true to retrieve all formats that data stored in this instance is associated with or can be converted to; false to retrieve only native data formats. Returns string[] An array of the names that represents a list of all formats that are supported by the data stored in this object Progress(string, int) Call this method to report any progress on async processing of the operation. void Progress(string message, int progress) Parameters message string Text message progress int Progress value between 0 and 100"
  },
  "api/Ventuz.Extension.IVxGroupProperty.html": {
    "href": "api/Ventuz.Extension.IVxGroupProperty.html",
    "title": "Interface IVxGroupProperty",
    "summary": "Interface IVxGroupProperty Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IVxGroupProperty Properties Value VxPropertyGroup Value { get; } Property Value VxPropertyGroup Methods Clear() void Clear() Set(Type, bool) VxPropertyGroup Set(Type newPG, bool migrateData = true) Parameters newPG Type migrateData bool Returns VxPropertyGroup"
  },
  "api/Ventuz.Extension.IVxGroupPropertyList.html": {
    "href": "api/Ventuz.Extension.IVxGroupPropertyList.html",
    "title": "Interface IVxGroupPropertyList",
    "summary": "Interface IVxGroupPropertyList Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IVxGroupPropertyList Properties Count int Count { get; } Property Value int Methods Add(Type) VxPropertyGroup Add(Type newPG) Parameters newPG Type Returns VxPropertyGroup GetItemAt(int) IVxGroupProperty GetItemAt(int index) Parameters index int Returns IVxGroupProperty"
  },
  "api/Ventuz.Extension.IVxManagement.html": {
    "href": "api/Ventuz.Extension.IVxManagement.html",
    "title": "Interface IVxManagement",
    "summary": "Interface IVxManagement Namespace Ventuz.Extension Assembly Ventuz.Extension.dll The IVxManagement interface provides general functions of the VX API public interface IVxManagement : IVxApi Extension Methods VxManagementExt.GetService<T>(IVxManagement) Properties IsDesigner Return true if the current process is Designer bool IsDesigner { get; } Property Value bool IsRuntime Return true if the current process is Runtime bool IsRuntime { get; } Property Value bool IsRuntimeVPR Return true if the current process is Runtime and started with Presentation Archive (vpr) bool IsRuntimeVPR { get; } Property Value bool Methods GetService(Type) Find the service instance by type. VxServiceBase GetService(Type t) Parameters t Type type of service to find Returns VxServiceBase The instance of the service or null if not found TryGetAliasFromType(Type, out string) Gets the actual type alias for a type bool TryGetAliasFromType(Type type, out string typeAlias) Parameters type Type the type to find typeAlias string returns the type alias Returns bool true if found TryGetTypeFromAlias(string, out Type) Gets the actual type by its type alias bool TryGetTypeFromAlias(string typeAlias, out Type type) Parameters typeAlias string the type alias to find type Type returns the type Returns bool true if found"
  },
  "api/Ventuz.Extension.IVxMenuEntry.html": {
    "href": "api/Ventuz.Extension.IVxMenuEntry.html",
    "title": "Interface IVxMenuEntry",
    "summary": "Interface IVxMenuEntry Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public interface IVxMenuEntry Methods OnClick() void OnClick() OnClosed() void OnClosed() OnEntryClicked(VxMenuEntry) void OnEntryClicked(VxMenuEntry vxEntry) Parameters vxEntry VxMenuEntry OnOpening() IEnumerable<VxMenuEntry> OnOpening() Returns IEnumerable<VxMenuEntry>"
  },
  "api/Ventuz.Extension.IVxTaskProgress.html": {
    "href": "api/Ventuz.Extension.IVxTaskProgress.html",
    "title": "Interface IVxTaskProgress",
    "summary": "Interface IVxTaskProgress Namespace Ventuz.Extension Assembly Ventuz.Extension.dll The async methods of VxDataObjectHandler receives an instance of this interface to handle the async operation. public interface IVxTaskProgress Properties CancellationToken Gets the CancellationToken to cancel a running operation. CancellationToken CancellationToken { get; } Property Value CancellationToken Methods SetMessage(string, int, int) Send any progress to the UI void SetMessage(string message, int count = 0, int max = 0) Parameters message string Message of the progress count int Current position in progress. Must be lower than max max int The max position in the progress."
  },
  "api/Ventuz.Extension.Misc.html": {
    "href": "api/Ventuz.Extension.Misc.html",
    "title": "Class Misc",
    "summary": "Class Misc Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public static class Misc Inheritance object Misc Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods MultiHashCode(params object[]) public static int MultiHashCode(params object[] v) Parameters v object[] Returns int"
  },
  "api/Ventuz.Extension.MonospaceType.html": {
    "href": "api/Ventuz.Extension.MonospaceType.html",
    "title": "Enum MonospaceType",
    "summary": "Enum MonospaceType Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public enum MonospaceType Fields AllCharacters = 2 Default = 0 DigitsOnly = 1"
  },
  "api/Ventuz.Extension.RenderMeshAxisMode.html": {
    "href": "api/Ventuz.Extension.RenderMeshAxisMode.html",
    "title": "Enum RenderMeshAxisMode",
    "summary": "Enum RenderMeshAxisMode Namespace Ventuz.Extension Assembly Ventuz.Extension.dll Describes how the use the Axis in RenderMeshDetails if a mesh is rendered. public enum RenderMeshAxisMode Fields Absolute = 2 The matrix in the Axis field will be directly applied as world matrix DoNotRender = 3 The mesh is not rendered at all Identity = 0 The Axis field is ignored and the an identity matrix is used. Relative = 1 The matrix in the Axis field will be multiplied to the current axis in the tree"
  },
  "api/Ventuz.Extension.RenderMeshDetails.html": {
    "href": "api/Ventuz.Extension.RenderMeshDetails.html",
    "title": "Struct RenderMeshDetails",
    "summary": "Struct RenderMeshDetails Namespace Ventuz.Extension Assembly Ventuz.Extension.dll This structure describes how and where a mesh shall be rendered. public struct RenderMeshDetails Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields Axis Defines axis matrix to be applied public Matrix44A Axis Field Value Matrix44A AxisMode Defines the mode how the \"F:Axis\" field is used. See RenderMeshAxisMode for details. public RenderMeshAxisMode AxisMode Field Value RenderMeshAxisMode Frame If the mesh contains frame to be rendered. Default 0.0 public float Frame Field Value float Subset If not null, the index of the subset within the mesh. Default is NULL public int? Subset Field Value int?"
  },
  "api/Ventuz.Extension.Subset.html": {
    "href": "api/Ventuz.Extension.Subset.html",
    "title": "Struct Subset",
    "summary": "Struct Subset Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public struct Subset Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields IndexCount public uint IndexCount Field Value uint IndexFirst public uint IndexFirst Field Value uint VertexCount public uint VertexCount Field Value uint VertexFirst public uint VertexFirst Field Value uint"
  },
  "api/Ventuz.Extension.TextLayoutOptions.html": {
    "href": "api/Ventuz.Extension.TextLayoutOptions.html",
    "title": "Class TextLayoutOptions",
    "summary": "Class TextLayoutOptions Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class TextLayoutOptions Inheritance object TextLayoutOptions Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors TextLayoutOptions() public TextLayoutOptions() Properties AlignCharacter public char AlignCharacter { get; set; } Property Value char BoundingBox public BoundingBoxType BoundingBox { get; set; } Property Value BoundingBoxType CharSpacing public float CharSpacing { get; set; } Property Value float EmojisEnabled public bool EmojisEnabled { get; set; } Property Value bool EmojisSideBearing public float EmojisSideBearing { get; set; } Property Value float EmojisSize public float EmojisSize { get; set; } Property Value float EmojisYOffset public float EmojisYOffset { get; set; } Property Value float Height public float Height { get; set; } Property Value float HorizontalAlignment public HorizontalTextAlignment HorizontalAlignment { get; set; } Property Value HorizontalTextAlignment Kerning public bool Kerning { get; set; } Property Value bool LineSpacing public float LineSpacing { get; set; } Property Value float MonospaceWidth public float MonospaceWidth { get; set; } Property Value float Monospacing public MonospaceType Monospacing { get; set; } Property Value MonospaceType RightToLeft public bool RightToLeft { get; set; } Property Value bool VerticalAlignment public VerticalTextAlignment VerticalAlignment { get; set; } Property Value VerticalTextAlignment Width public float Width { get; set; } Property Value float Wrapping public TextWrapping Wrapping { get; set; } Property Value TextWrapping"
  },
  "api/Ventuz.Extension.TextWrapping.html": {
    "href": "api/Ventuz.Extension.TextWrapping.html",
    "title": "Enum TextWrapping",
    "summary": "Enum TextWrapping Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public enum TextWrapping Fields Character = 2 Word = 1"
  },
  "api/Ventuz.Extension.TextureFormat.html": {
    "href": "api/Ventuz.Extension.TextureFormat.html",
    "title": "Enum TextureFormat",
    "summary": "Enum TextureFormat Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public enum TextureFormat Fields BGRA_UN8 = 1 None = 0 RGBA_F16 = 4 RGBA_F32 = 5 RGBA_UN16 = 3 RGBA_UN8 = 2"
  },
  "api/Ventuz.Extension.VX.html": {
    "href": "api/Ventuz.Extension.VX.html",
    "title": "Class VX",
    "summary": "Class VX Namespace Ventuz.Extension Assembly Ventuz.Extension.dll The VX class stores all raw API interfaces. Vx developers can call/use these interfaces directly. public static class VX Inheritance object VX Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Designer Get the Designer-API. This API is only present if Designer is running. (not available in Runtime) public static IVxApiDesigner Designer { get; } Property Value IVxApiDesigner Engine Gets the Engine-API. This API is only present if a project is loaded and the renderer is running. public static IVxApiEngine Engine { get; } Property Value IVxApiEngine General Get the General-API. This API is always present public static IVxManagement General { get; } Property Value IVxManagement IO Gets the IO-API. This API is only present if a project is loaded. public static IVxApiIO IO { get; } Property Value IVxApiIO Log Get the Log-API. This API is always present public static IVxApiLog Log { get; } Property Value IVxApiLog Project Gets the Project-API. This API is only present if a project is loaded. public static IVxApiProject Project { get; } Property Value IVxApiProject Renderer Get the Renderer-API. This API is only present in Rendering context. public static IVxApiRenderer Renderer { get; } Property Value IVxApiRenderer Resources Get the Resources-API. This API is only present in Validation context. public static IVxApiResources Resources { get; } Property Value IVxApiResources SceneBuilder Get the SceneBuilder-API. public static IVxApiSceneBuilder SceneBuilder { get; } Property Value IVxApiSceneBuilder UI Get the UI-API. This API is only present if Designer is running. (not available in Runtime) public static IVxApiUiWindows UI { get; } Property Value IVxApiUiWindows Validation Get the Validation-API. This API is only present in Validation context. public static IVxApiNodeValidation Validation { get; } Property Value IVxApiNodeValidation Version Gets the current version of the VX-API public static Version Version { get; } Property Value Version"
  },
  "api/Ventuz.Extension.VerbState.html": {
    "href": "api/Ventuz.Extension.VerbState.html",
    "title": "Enum VerbState",
    "summary": "Enum VerbState Namespace Ventuz.Extension Assembly Ventuz.Extension.dll If a verb of a vx node is probed, the verb method must return the state of this verb. public enum VerbState Fields Disabled = 0 The Verb is visible but grayed out and disabled Invisible = -1 The Verb is invisible, means not shown in the UI Visible = 1 The Verb is visible and selectable VisibleChecked = 2 The Verb is visible, selectable and show with a check mark."
  },
  "api/Ventuz.Extension.VertexFormat.html": {
    "href": "api/Ventuz.Extension.VertexFormat.html",
    "title": "Enum VertexFormat",
    "summary": "Enum VertexFormat Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public enum VertexFormat Fields All = 78097 Color = 256 Normal = 16 Position = 1 Tangent = 65536 Uv1 = 4096 Uv2 = 12288"
  },
  "api/Ventuz.Extension.VertexP.html": {
    "href": "api/Ventuz.Extension.VertexP.html",
    "title": "Struct VertexP",
    "summary": "Struct VertexP Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public struct VertexP : IVertex Implements IVertex Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields px public float px Field Value float py public float py Field Value float pz public float pz Field Value float"
  },
  "api/Ventuz.Extension.VertexPC.html": {
    "href": "api/Ventuz.Extension.VertexPC.html",
    "title": "Struct VertexPC",
    "summary": "Struct VertexPC Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public struct VertexPC : IVertex Implements IVertex Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields c0 public uint c0 Field Value uint px public float px Field Value float py public float py Field Value float pz public float pz Field Value float"
  },
  "api/Ventuz.Extension.VertexPN.html": {
    "href": "api/Ventuz.Extension.VertexPN.html",
    "title": "Struct VertexPN",
    "summary": "Struct VertexPN Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public struct VertexPN : IVertex Implements IVertex Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields nx public float nx Field Value float ny public float ny Field Value float nz public float nz Field Value float px public float px Field Value float py public float py Field Value float pz public float pz Field Value float"
  },
  "api/Ventuz.Extension.VertexPNBCT.html": {
    "href": "api/Ventuz.Extension.VertexPNBCT.html",
    "title": "Struct VertexPNBCT",
    "summary": "Struct VertexPNBCT Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public struct VertexPNBCT : IVertex Implements IVertex Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields bs public float bs Field Value float c0 public uint c0 Field Value uint nx public float nx Field Value float ny public float ny Field Value float nz public float nz Field Value float px public float px Field Value float py public float py Field Value float pz public float pz Field Value float tx public float tx Field Value float ty public float ty Field Value float tz public float tz Field Value float u0 public float u0 Field Value float v0 public float v0 Field Value float"
  },
  "api/Ventuz.Extension.VertexPNBT.html": {
    "href": "api/Ventuz.Extension.VertexPNBT.html",
    "title": "Struct VertexPNBT",
    "summary": "Struct VertexPNBT Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public struct VertexPNBT : IVertex Implements IVertex Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields bs public float bs Field Value float nx public float nx Field Value float ny public float ny Field Value float nz public float nz Field Value float px public float px Field Value float py public float py Field Value float pz public float pz Field Value float tx public float tx Field Value float ty public float ty Field Value float tz public float tz Field Value float u0 public float u0 Field Value float v0 public float v0 Field Value float"
  },
  "api/Ventuz.Extension.VertexPNT.html": {
    "href": "api/Ventuz.Extension.VertexPNT.html",
    "title": "Struct VertexPNT",
    "summary": "Struct VertexPNT Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public struct VertexPNT : IVertex Implements IVertex Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields nx public float nx Field Value float ny public float ny Field Value float nz public float nz Field Value float px public float px Field Value float py public float py Field Value float pz public float pz Field Value float u0 public float u0 Field Value float v0 public float v0 Field Value float"
  },
  "api/Ventuz.Extension.VertexPT.html": {
    "href": "api/Ventuz.Extension.VertexPT.html",
    "title": "Struct VertexPT",
    "summary": "Struct VertexPT Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public struct VertexPT : IVertex Implements IVertex Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields px public float px Field Value float py public float py Field Value float pz public float pz Field Value float u0 public float u0 Field Value float v0 public float v0 Field Value float"
  },
  "api/Ventuz.Extension.VerticalTextAlignment.html": {
    "href": "api/Ventuz.Extension.VerticalTextAlignment.html",
    "title": "Enum VerticalTextAlignment",
    "summary": "Enum VerticalTextAlignment Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public enum VerticalTextAlignment Fields Bottom = 4 Center = 3 FirstLine = 0 LastLine = 1 Top = 2"
  },
  "api/Ventuz.Extension.VxApiSceneModifyExt.html": {
    "href": "api/Ventuz.Extension.VxApiSceneModifyExt.html",
    "title": "Class VxApiSceneModifyExt",
    "summary": "Class VxApiSceneModifyExt Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public static class VxApiSceneModifyExt Inheritance object VxApiSceneModifyExt Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods CreateNode<T>(IVxApiSceneBuilder, IVxContainer, string) public static T CreateNode<T>(this IVxApiSceneBuilder api, IVxContainer container, string name = null) where T : VxNode Parameters api IVxApiSceneBuilder container IVxContainer name string Returns T Type Parameters T"
  },
  "api/Ventuz.Extension.VxAssemblyAliasAttribute.html": {
    "href": "api/Ventuz.Extension.VxAssemblyAliasAttribute.html",
    "title": "Class VxAssemblyAliasAttribute",
    "summary": "Class VxAssemblyAliasAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll [AttributeUsage(AttributeTargets.Assembly, AllowMultiple = false)] public class VxAssemblyAliasAttribute : Attribute, _Attribute Inheritance object Attribute VxAssemblyAliasAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxAssemblyAliasAttribute(string, params string[]) public VxAssemblyAliasAttribute(string assemblyAlias, params string[] legacyAssemblyAliases) Parameters assemblyAlias string legacyAssemblyAliases string[] Properties AssemblyAlias public string AssemblyAlias { get; } Property Value string LegacyAssemblyAlias public string[] LegacyAssemblyAlias { get; } Property Value string[]"
  },
  "api/Ventuz.Extension.VxBase.html": {
    "href": "api/Ventuz.Extension.VxBase.html",
    "title": "Class VxBase",
    "summary": "Class VxBase Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxBase Inheritance object VxBase Derived VxManagedObject VxMenuEntry Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VxBase() public VxBase()"
  },
  "api/Ventuz.Extension.VxBaseProperty.html": {
    "href": "api/Ventuz.Extension.VxBaseProperty.html",
    "title": "Class VxBaseProperty",
    "summary": "Class VxBaseProperty Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public abstract class VxBaseProperty : VxMember Inheritance object VxBase VxManagedObject VxSceneElement VxMember VxBaseProperty Derived VxGroupPropertyList<PG> VxGroupProperty<PG> VxProperty Inherited Members VxMember.Name VxMember.Status object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VxBaseProperty() protected VxBaseProperty()"
  },
  "api/Ventuz.Extension.VxCategoriesAttribute.html": {
    "href": "api/Ventuz.Extension.VxCategoriesAttribute.html",
    "title": "Class VxCategoriesAttribute",
    "summary": "Class VxCategoriesAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class VxCategoriesAttribute : VxMetaDataClassAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMetaDataClassAttribute VxCategoriesAttribute Implements _Attribute Inherited Members VxMetaDataAttribute._ReplaceOnItem(VxMetaDataAttribute) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxCategoriesAttribute(params string[]) public VxCategoriesAttribute(params string[] categories) Parameters categories string[] Properties Categories public string[] Categories { get; } Property Value string[] MdCode public override string MdCode { get; } Property Value string"
  },
  "api/Ventuz.Extension.VxCategoryAttribute.html": {
    "href": "api/Ventuz.Extension.VxCategoryAttribute.html",
    "title": "Class VxCategoryAttribute",
    "summary": "Class VxCategoryAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxCategoryAttribute : VxMembersAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMembersAttribute VxCategoryAttribute Implements _Attribute Inherited Members VxMembersAttribute.Members VxMetaDataAttribute._ReplaceOnItem(VxMetaDataAttribute) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxCategoryAttribute(string, params string[]) public VxCategoryAttribute(string category, params string[] members) Parameters category string members string[] Properties Category public string Category { get; } Property Value string MdCode public override string MdCode { get; } Property Value string"
  },
  "api/Ventuz.Extension.VxContainerExt.html": {
    "href": "api/Ventuz.Extension.VxContainerExt.html",
    "title": "Class VxContainerExt",
    "summary": "Class VxContainerExt Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public static class VxContainerExt Inheritance object VxContainerExt Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods CreateNodeAfter<T>(IVxContainer, VxHierarchyBaseNode, string) public static T CreateNodeAfter<T>(this IVxContainer container, VxHierarchyBaseNode node, string name = null) where T : VxHierarchyBaseNode Parameters container IVxContainer node VxHierarchyBaseNode name string Returns T Type Parameters T CreateNodeBefore<T>(IVxContainer, VxHierarchyBaseNode, string) public static T CreateNodeBefore<T>(this IVxContainer container, VxHierarchyBaseNode node, string name = null) where T : VxHierarchyBaseNode Parameters container IVxContainer node VxHierarchyBaseNode name string Returns T Type Parameters T CreateNodeBehind<T>(IVxContainer, VxHierarchyBaseNode, string) public static T CreateNodeBehind<T>(this IVxContainer container, VxHierarchyBaseNode node, string name = null) where T : VxHierarchyBaseNode Parameters container IVxContainer node VxHierarchyBaseNode name string Returns T Type Parameters T CreateNode<T>(IVxContainer, string) public static T CreateNode<T>(this IVxContainer container, string name = null) where T : VxNode Parameters container IVxContainer name string Returns T Type Parameters T GetRoot(IVxContainer) public static VxHierarchyContainerRoot GetRoot(this IVxContainer container) Parameters container IVxContainer Returns VxHierarchyContainerRoot"
  },
  "api/Ventuz.Extension.VxContentBaseNode.html": {
    "href": "api/Ventuz.Extension.VxContentBaseNode.html",
    "title": "Class VxContentBaseNode",
    "summary": "Class VxContentBaseNode Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxContentBaseNode : VxNode Inheritance object VxBase VxManagedObject VxSceneElement VxMemberOwner VxNode VxContentBaseNode Derived VxContentContainer VxContentNode Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods VxNodeExt.GetEvent(VxMemberOwner, string) VxNodeExt.GetMethod(VxMemberOwner, string) VxNodeExt.GetProperty(VxMemberOwner, string) VxNodeExt.GetPropertyGroupList<PG>(VxMemberOwner, string) VxNodeExt.GetPropertyGroup<PG>(VxMemberOwner, string) VxNodeExt.GetContainer(VxNode) VxNodeExt.GetID(VxNode) VxNodeExt.GetName(VxNode) VxNodeExt.Navigate(VxNode, string) VxNodeExt.SetName(VxNode, string) Constructors VxContentBaseNode() public VxContentBaseNode()"
  },
  "api/Ventuz.Extension.VxContentContainer.html": {
    "href": "api/Ventuz.Extension.VxContentContainer.html",
    "title": "Class VxContentContainer",
    "summary": "Class VxContentContainer Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxContentContainer : VxContentBaseNode, IVxContainer Inheritance object VxBase VxManagedObject VxSceneElement VxMemberOwner VxNode VxContentBaseNode VxContentContainer Implements IVxContainer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods VxContainerExt.CreateNodeAfter<T>(IVxContainer, VxHierarchyBaseNode, string) VxContainerExt.CreateNodeBefore<T>(IVxContainer, VxHierarchyBaseNode, string) VxContainerExt.CreateNodeBehind<T>(IVxContainer, VxHierarchyBaseNode, string) VxContainerExt.CreateNode<T>(IVxContainer, string) VxContainerExt.GetRoot(IVxContainer) VxNodeExt.GetEvent(VxMemberOwner, string) VxNodeExt.GetMethod(VxMemberOwner, string) VxNodeExt.GetProperty(VxMemberOwner, string) VxNodeExt.GetPropertyGroupList<PG>(VxMemberOwner, string) VxNodeExt.GetPropertyGroup<PG>(VxMemberOwner, string) VxNodeExt.GetContainer(VxNode) VxNodeExt.GetID(VxNode) VxNodeExt.GetName(VxNode) VxNodeExt.Navigate(VxNode, string) VxNodeExt.SetName(VxNode, string) Constructors VxContentContainer() public VxContentContainer()"
  },
  "api/Ventuz.Extension.VxContentNode.html": {
    "href": "api/Ventuz.Extension.VxContentNode.html",
    "title": "Class VxContentNode",
    "summary": "Class VxContentNode Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxContentNode : VxContentBaseNode Inheritance object VxBase VxManagedObject VxSceneElement VxMemberOwner VxNode VxContentBaseNode VxContentNode Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods VxNodeExt.GetEvent(VxMemberOwner, string) VxNodeExt.GetMethod(VxMemberOwner, string) VxNodeExt.GetProperty(VxMemberOwner, string) VxNodeExt.GetPropertyGroupList<PG>(VxMemberOwner, string) VxNodeExt.GetPropertyGroup<PG>(VxMemberOwner, string) VxNodeExt.GetContainer(VxNode) VxNodeExt.GetID(VxNode) VxNodeExt.GetName(VxNode) VxNodeExt.Navigate(VxNode, string) VxNodeExt.SetName(VxNode, string) Constructors VxContentNode() public VxContentNode()"
  },
  "api/Ventuz.Extension.VxDataObjectHandler.html": {
    "href": "api/Ventuz.Extension.VxDataObjectHandler.html",
    "title": "Class VxDataObjectHandler",
    "summary": "Class VxDataObjectHandler Namespace Ventuz.Extension Assembly Ventuz.Extension.dll The VxDataObjectHandler represents the VX-API to handle clipboard data for drag'n'drop and copy/paste operations in Designer. Implementation must override the Probe(IVxDataObject) method to test if the data in the dataObject can be processed. Synchronous and Asynchronous method must implement the import or conversion of the data in the required result specified by VxDataObjectResult public abstract class VxDataObjectHandler : VxUiExtension Inheritance object VxBase VxManagedObject VxUiExtension VxDataObjectHandler Inherited Members VxUiExtension.OnSceneEvent(VxScene, VxSceneEvent) VxUiExtension.OnUIStyleChanged() VxUiExtension.OnSelectionChanged(IEnumerable<VxBase>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Examples // This example implements a simple import/conversion from text (string) into a BlockText Content Node. [VxLabel(\"My Data Handler\")] [VxDescription(\"My Data Handler Description\")] public class MyDataHandler : VxDataObjectHandler { public override VxDataObjectResult Probe(IVxDataObject dataObject) { // test if there is a string available if ( dataObject.GetDataPresent<string>() ) // yes, we can create a content node from it return VxDataObjectResult.ContentNode; return VxDataObjectResult.None; } protected override VxContentBaseNode CreateContentNode(IVxDataObject dataObject, IVxTaskProgress progress) { if ( dataObject.GetDataPresent<string>() && dataObject.GetData<string>() is string str ) { var blockText = dataObject.Container.CreateNode<Intrinsic.Text.BlockText>(); blockText.Text = str; blockText.LineAlignment = StringAlignment.Center; return blockText; } return null; } } Remarks WARNING: If the sync Create method return null the async methods are called. If the async methods are implemented you have to make sure not accessing the dataObject anymore after any await. The dataObject can only be accessed by the calling thread! After awaiting any other async operation the thread may change! Therefore make sure to collect all required data from the dataObject before awaiting tasks and switching threads! Also make sure to implement a proper cancellation by using the CancellationToken provided by IVxTaskProgress. Constructors VxDataObjectHandler() protected VxDataObjectHandler() Methods CreateContentNode(IVxDataObject, IVxTaskProgress) Called if a Content Node should be created based on the dataObject protected virtual VxContentBaseNode CreateContentNode(IVxDataObject dataObject, IVxTaskProgress progress) Parameters dataObject IVxDataObject The dataObject describing the data progress IVxTaskProgress API to report progress Returns VxContentBaseNode The created node or null if import was not possible CreateContentNodeAsync(IVxDataObject, IVxTaskProgress) Called if CreateContentNode(IVxDataObject, IVxTaskProgress) returned null. An async implementation of importing/converting data can be implemented here. Please read the remarks in VxDataObjectHandler public virtual Task<VxContentBaseNode> CreateContentNodeAsync(IVxDataObject dataObject, IVxTaskProgress progress) Parameters dataObject IVxDataObject The dataObject describing the data progress IVxTaskProgress API to report progress Returns Task<VxContentBaseNode> Task that performs the operation CreateHierarchyNode(IVxDataObject, IVxTaskProgress) Called if a Hierarchy Node should be created based on the dataObject protected virtual VxHierarchyBaseNode CreateHierarchyNode(IVxDataObject dataObject, IVxTaskProgress progress) Parameters dataObject IVxDataObject The dataObject describing the data progress IVxTaskProgress API to report progress Returns VxHierarchyBaseNode The created node or null if import was not possible CreateHierarchyNodeAsync(IVxDataObject, IVxTaskProgress) Called if CreateHierarchyNode(IVxDataObject, IVxTaskProgress) returned null. An async implementation of importing/converting data can be implemented here. Please read the remarks in VxDataObjectHandler public virtual Task<VxHierarchyBaseNode> CreateHierarchyNodeAsync(IVxDataObject dataObject, IVxTaskProgress progress) Parameters dataObject IVxDataObject The dataObject describing the data progress IVxTaskProgress API to report progress Returns Task<VxHierarchyBaseNode> Task that performs the operation CreateLayer(IVxDataObject, IVxTaskProgress) Called if a Layer should be created based on the dataObject protected virtual VxLayerBaseNode CreateLayer(IVxDataObject dataObject, IVxTaskProgress progress) Parameters dataObject IVxDataObject The dataObject describing the data progress IVxTaskProgress API to report progress Returns VxLayerBaseNode The created layer or null if import was not possible CreateLayerAsync(IVxDataObject, IVxTaskProgress) Called if CreateLayer(IVxDataObject, IVxTaskProgress) returned null. An async implementation of importing/converting data can be implemented here. Please read the remarks in VxDataObjectHandler public virtual Task<VxLayerBaseNode> CreateLayerAsync(IVxDataObject dataObject, IVxTaskProgress progress) Parameters dataObject IVxDataObject The dataObject describing the data progress IVxTaskProgress API to report progress Returns Task<VxLayerBaseNode> Task that performs the operation CreateScene(IVxDataObject, IVxTaskProgress) Called if a Scene should be created based on the dataObject protected virtual VxScene CreateScene(IVxDataObject dataObject, IVxTaskProgress progress) Parameters dataObject IVxDataObject The dataObject describing the data progress IVxTaskProgress API to report progress Returns VxScene The created layer or null if import was not possible CreateSceneAsync(IVxDataObject, IVxTaskProgress) Called if CreateScene(IVxDataObject, IVxTaskProgress) returned null. An async implementation of importing/converting data can be implemented here. Please read the remarks in VxDataObjectHandler public virtual Task<VxScene> CreateSceneAsync(IVxDataObject dataObject, IVxTaskProgress progress) Parameters dataObject IVxDataObject The dataObject describing the data progress IVxTaskProgress API to report progress Returns Task<VxScene> Task that performs the operation Probe(IVxDataObject) The UI calls this method to probe if the dataObject contains data to be imported or converted into the required result. Implementors examine the dataObject and return a combination of VxDataObjectResult flags for the result ist can handle. public abstract VxDataObjectResult Probe(IVxDataObject dataObject) Parameters dataObject IVxDataObject The data object for the drag'n'drop or copy/paste operation Returns VxDataObjectResult A combination of results this implementation can handle"
  },
  "api/Ventuz.Extension.VxDataObjectResult.html": {
    "href": "api/Ventuz.Extension.VxDataObjectResult.html",
    "title": "Enum VxDataObjectResult",
    "summary": "Enum VxDataObjectResult Namespace Ventuz.Extension Assembly Ventuz.Extension.dll Represents all different result type a VxDataObjectHandler can handle. [Flags] public enum VxDataObjectResult Fields ContentNode = 1 Content Node HierarchyNode = 2 Hierarchy Node Layer = 4 Layer None = 0 None Scene = 8 Scene"
  },
  "api/Ventuz.Extension.VxDataPool.html": {
    "href": "api/Ventuz.Extension.VxDataPool.html",
    "title": "Enum VxDataPool",
    "summary": "Enum VxDataPool Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public enum VxDataPool Fields Archives = 14 Audio = 6 AutoImport = 17 Data = 8 Documentation = 19 Fonts = 12 Geometries = 9 Images = 4 Misc = 0 Modules = 3 Movies = 7 Pages = 21 Presentations = 15 Project = 1 Repository = 13 Scenes = 2 Scripts = 11 Sounds = 18 Textures = 5"
  },
  "api/Ventuz.Extension.VxDefaultValueAttribute.html": {
    "href": "api/Ventuz.Extension.VxDefaultValueAttribute.html",
    "title": "Class VxDefaultValueAttribute",
    "summary": "Class VxDefaultValueAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxDefaultValueAttribute : VxMembersAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMembersAttribute VxDefaultValueAttribute Implements _Attribute Inherited Members VxMembersAttribute.Members VxMetaDataAttribute._ReplaceOnItem(VxMetaDataAttribute) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxDefaultValueAttribute(object, params string[]) public VxDefaultValueAttribute(object value, params string[] members) Parameters value object members string[] VxDefaultValueAttribute(Type, string, params string[]) public VxDefaultValueAttribute(Type type, string value, params string[] members) Parameters type Type value string members string[] Properties MdCode public override string MdCode { get; } Property Value string Value public object Value { get; } Property Value object"
  },
  "api/Ventuz.Extension.VxDeferrablePropertyGroup.html": {
    "href": "api/Ventuz.Extension.VxDeferrablePropertyGroup.html",
    "title": "Class VxDeferrablePropertyGroup",
    "summary": "Class VxDeferrablePropertyGroup Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxDeferrablePropertyGroup : VxPropertyGroup Inheritance object VxBase VxManagedObject VxSceneElement VxMemberOwner VxPropertyGroup VxDeferrablePropertyGroup Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods VxNodeExt.GetEvent(VxMemberOwner, string) VxNodeExt.GetMethod(VxMemberOwner, string) VxNodeExt.GetProperty(VxMemberOwner, string) VxNodeExt.GetPropertyGroupList<PG>(VxMemberOwner, string) VxNodeExt.GetPropertyGroup<PG>(VxMemberOwner, string) Constructors VxDeferrablePropertyGroup() public VxDeferrablePropertyGroup()"
  },
  "api/Ventuz.Extension.VxDescriptionAttribute.html": {
    "href": "api/Ventuz.Extension.VxDescriptionAttribute.html",
    "title": "Class VxDescriptionAttribute",
    "summary": "Class VxDescriptionAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxDescriptionAttribute : VxMembersAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMembersAttribute VxDescriptionAttribute Implements _Attribute Inherited Members VxMembersAttribute.Members VxMetaDataAttribute._ReplaceOnItem(VxMetaDataAttribute) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxDescriptionAttribute(string, params string[]) public VxDescriptionAttribute(string description, params string[] members) Parameters description string members string[] Properties Description public string Description { get; } Property Value string MdCode public override string MdCode { get; } Property Value string"
  },
  "api/Ventuz.Extension.VxDesignerWindow.html": {
    "href": "api/Ventuz.Extension.VxDesignerWindow.html",
    "title": "Class VxDesignerWindow",
    "summary": "Class VxDesignerWindow Namespace Ventuz.Extension Assembly Ventuz.Extension.dll This class contain static fields with the IDs of all knows windows in Designer public static class VxDesignerWindow Inheritance object VxDesignerWindow Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties AnimationEditor Animation Editor public static Guid AnimationEditor { get; } Property Value Guid ContainerOutline Container Outline public static Guid ContainerOutline { get; } Property Value Guid ContentEditor Content Editor public static Guid ContentEditor { get; } Property Value Guid HierarchyEditor Hierarchy Editor public static Guid HierarchyEditor { get; } Property Value Guid LayerEditor Layer Editor public static Guid LayerEditor { get; } Property Value Guid LiveOptions Live Options public static Guid LiveOptions { get; } Property Value Guid Messages Messages public static Guid Messages { get; } Property Value Guid ProjectDataEditor Project Data Editor public static Guid ProjectDataEditor { get; } Property Value Guid ProjectDocumentation Project Documentation public static Guid ProjectDocumentation { get; } Property Value Guid PropertyEditor Property Editor public static Guid PropertyEditor { get; } Property Value Guid SceneDataEditor Scene Data Editor public static Guid SceneDataEditor { get; } Property Value Guid SceneTree Scene Tree public static Guid SceneTree { get; } Property Value Guid StageEditor Stage Editor public static Guid StageEditor { get; } Property Value Guid TextEditor Text Editor public static Guid TextEditor { get; } Property Value Guid ToolBox ToolBox public static Guid ToolBox { get; } Property Value Guid Watches Watches Window public static Guid Watches { get; } Property Value Guid"
  },
  "api/Ventuz.Extension.VxDockSituation.html": {
    "href": "api/Ventuz.Extension.VxDockSituation.html",
    "title": "Enum VxDockSituation",
    "summary": "Enum VxDockSituation Namespace Ventuz.Extension Assembly Ventuz.Extension.dll Describe the way a dockable window currently appears on screen public enum VxDockSituation Fields Docked = 1 The window is docked Document = 2 The window is docked as a document (centered) Floating = 3 The window is floating (not docked) None = 0 The window is not docked"
  },
  "api/Ventuz.Extension.VxDockableWebView.html": {
    "href": "api/Ventuz.Extension.VxDockableWebView.html",
    "title": "Class VxDockableWebView",
    "summary": "Class VxDockableWebView Namespace Ventuz.Extension Assembly Ventuz.Extension.dll This is the base class used for custom dockable a web view. It hosts a WebView2 control. public class VxDockableWebView : VxDockableWindow Inheritance object VxBase VxManagedObject VxUiExtension VxWindowBase VxDockableWindow VxDockableWebView Inherited Members VxDockableWindow.OnDockSituationChanged(VxDockSituation, bool) VxWindowBase.OnControlCreated(Control) VxWindowBase.Control VxUiExtension.OnSceneEvent(VxScene, VxSceneEvent) VxUiExtension.OnUIStyleChanged() VxUiExtension.OnSelectionChanged(IEnumerable<VxBase>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Examples [VxWindow(\"B5009177-636C-4698-A803-66A63444E830\", \"Label of MyWebView\", Description = \"Description of MyWebView\")] [VxWebView(\"https://www.google.com\")] public class MyWebView : VxDockableWebView { } Remarks Deriving from this class required the VxWindowAttribute to assign a unique ID to the window. This window is decorated by simple navigation controls. Use the VxWebViewAttribute to configure these controls and its home page address. Constructors VxDockableWebView() public VxDockableWebView() Properties ControlType Gets the type of the hosted control public override Type ControlType { get; } Property Value Type Methods CoreWebView2InitializationCompleted(object) Called if the actual WebView2 core component was created and initialized. public virtual void CoreWebView2InitializationCompleted(object CoreWebView2) Parameters CoreWebView2 object The instance of type Microsoft.Web.WebView2.CoreWebView"
  },
  "api/Ventuz.Extension.VxDockableWindow-1.html": {
    "href": "api/Ventuz.Extension.VxDockableWindow-1.html",
    "title": "Class VxDockableWindow<T>",
    "summary": "Class VxDockableWindow<T> Namespace Ventuz.Extension Assembly Ventuz.Extension.dll This is the base class used for custom dockable windows. The generic parameter T defines the class type of the form this window hosts. Deriving from this class required the VxWindowAttribute to assign a unique ID to the window. public class VxDockableWindow<T> : VxDockableWindow where T : Form Type Parameters T Type of the Form which is hosted by this dockable window. T must be of type Form Inheritance object VxBase VxManagedObject VxUiExtension VxWindowBase VxDockableWindow VxDockableWindow<T> Inherited Members VxDockableWindow.OnDockSituationChanged(VxDockSituation, bool) VxWindowBase.OnControlCreated(Control) VxUiExtension.OnSceneEvent(VxScene, VxSceneEvent) VxUiExtension.OnUIStyleChanged() VxUiExtension.OnSelectionChanged(IEnumerable<VxBase>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Examples [VxWindow(\"B5009177-636C-4698-A803-66A63444E830\", \"Label of MyDockableForm1\", Description = \"Description of MyDockableForm1\")] public class MyDockableForm1 : VxDockableWindow<Form1> { } Constructors VxDockableWindow() public VxDockableWindow() Properties Control Get the control (Form) of type T public T Control { get; } Property Value T ControlType Gets the type of the hosted control public override Type ControlType { get; } Property Value Type"
  },
  "api/Ventuz.Extension.VxDockableWindow.html": {
    "href": "api/Ventuz.Extension.VxDockableWindow.html",
    "title": "Class VxDockableWindow",
    "summary": "Class VxDockableWindow Namespace Ventuz.Extension Assembly Ventuz.Extension.dll This is the base class for all dockable window classes of the VX-API public abstract class VxDockableWindow : VxWindowBase Inheritance object VxBase VxManagedObject VxUiExtension VxWindowBase VxDockableWindow Derived VxDockableWebView VxDockableWindow<T> Inherited Members VxWindowBase.OnControlCreated(Control) VxWindowBase.ControlType VxWindowBase.Control VxUiExtension.OnSceneEvent(VxScene, VxSceneEvent) VxUiExtension.OnUIStyleChanged() VxUiExtension.OnSelectionChanged(IEnumerable<VxBase>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VxDockableWindow() protected VxDockableWindow() Methods OnDockSituationChanged(VxDockSituation, bool) This method is called whenever the dock situation of this dockable window changes public virtual void OnDockSituationChanged(VxDockSituation dockSituation, bool isOpen) Parameters dockSituation VxDockSituation New dock situation isOpen bool True if the window is open"
  },
  "api/Ventuz.Extension.VxDynamicIconAttribute.html": {
    "href": "api/Ventuz.Extension.VxDynamicIconAttribute.html",
    "title": "Class VxDynamicIconAttribute",
    "summary": "Class VxDynamicIconAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method, AllowMultiple = false, Inherited = false)] public class VxDynamicIconAttribute : VxMetaDataClassAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMetaDataClassAttribute VxDynamicIconAttribute Implements _Attribute Inherited Members VxMetaDataAttribute._ReplaceOnItem(VxMetaDataAttribute) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxDynamicIconAttribute(string) public VxDynamicIconAttribute(string member) Parameters member string Properties MdCode public override string MdCode { get; } Property Value string Member public string Member { get; } Property Value string"
  },
  "api/Ventuz.Extension.VxEngineException.html": {
    "href": "api/Ventuz.Extension.VxEngineException.html",
    "title": "Class VxEngineException",
    "summary": "Class VxEngineException Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxEngineException : VxException, ISerializable, _Exception Inheritance object Exception VxException VxEngineException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.MemberwiseClone() Constructors VxEngineException(string) public VxEngineException(string message) Parameters message string VxEngineException(string, Exception) public VxEngineException(string message, Exception innerException) Parameters message string innerException Exception"
  },
  "api/Ventuz.Extension.VxEvent.html": {
    "href": "api/Ventuz.Extension.VxEvent.html",
    "title": "Class VxEvent",
    "summary": "Class VxEvent Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public sealed class VxEvent : VxMember Inheritance object VxBase VxManagedObject VxSceneElement VxMember VxEvent Inherited Members VxMember.Name VxMember.Status object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors VxEvent() public VxEvent() Methods Fire(int, ushort) public void Fire(int arg = 0, ushort delay = 0) Parameters arg int delay ushort"
  },
  "api/Ventuz.Extension.VxException.html": {
    "href": "api/Ventuz.Extension.VxException.html",
    "title": "Class VxException",
    "summary": "Class VxException Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxException : Exception, ISerializable, _Exception Inheritance object Exception VxException Implements ISerializable _Exception Derived VxEngineException VxInvalidContextException VxInvalidTypeAliasException VxInvalidTypeException Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.MemberwiseClone() Constructors VxException() public VxException() VxException(string) public VxException(string message) Parameters message string VxException(string, Exception) public VxException(string message, Exception innerException) Parameters message string innerException Exception"
  },
  "api/Ventuz.Extension.VxFavoredAttribute.html": {
    "href": "api/Ventuz.Extension.VxFavoredAttribute.html",
    "title": "Class VxFavoredAttribute",
    "summary": "Class VxFavoredAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxFavoredAttribute : VxMembersAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMembersAttribute VxFavoredAttribute Implements _Attribute Inherited Members VxMembersAttribute.Members VxMetaDataAttribute._ReplaceOnItem(VxMetaDataAttribute) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxFavoredAttribute(params string[]) public VxFavoredAttribute(params string[] members) Parameters members string[] Properties MdCode public override string MdCode { get; } Property Value string"
  },
  "api/Ventuz.Extension.VxFlagGroupItemAttribute.html": {
    "href": "api/Ventuz.Extension.VxFlagGroupItemAttribute.html",
    "title": "Class VxFlagGroupItemAttribute",
    "summary": "Class VxFlagGroupItemAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll [AttributeUsage(AttributeTargets.Field)] public class VxFlagGroupItemAttribute : Attribute, _Attribute Inheritance object Attribute VxFlagGroupItemAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxFlagGroupItemAttribute(int, bool) public VxFlagGroupItemAttribute(int mask, bool isEnum = false) Parameters mask int isEnum bool Properties DisplayName public string DisplayName { get; set; } Property Value string IsEnum public bool IsEnum { get; } Property Value bool Mask public int Mask { get; } Property Value int"
  },
  "api/Ventuz.Extension.VxFlagGroupNameAttribute.html": {
    "href": "api/Ventuz.Extension.VxFlagGroupNameAttribute.html",
    "title": "Class VxFlagGroupNameAttribute",
    "summary": "Class VxFlagGroupNameAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll [AttributeUsage(AttributeTargets.Enum, AllowMultiple = true)] public class VxFlagGroupNameAttribute : Attribute, _Attribute Inheritance object Attribute VxFlagGroupNameAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxFlagGroupNameAttribute(int, string) public VxFlagGroupNameAttribute(int mask, string displayname) Parameters mask int displayname string Properties DisplayName Group name. If it starts with a ! you'll get a submenu instead of a header public string DisplayName { get; set; } Property Value string Mask public int Mask { get; } Property Value int"
  },
  "api/Ventuz.Extension.VxFloatingWindow-1.html": {
    "href": "api/Ventuz.Extension.VxFloatingWindow-1.html",
    "title": "Class VxFloatingWindow<T>",
    "summary": "Class VxFloatingWindow<T> Namespace Ventuz.Extension Assembly Ventuz.Extension.dll This is the base class used for custom floating forms. public abstract class VxFloatingWindow<T> : VxFloatingWindow where T : Control Type Parameters T The type of the Control to be hosted as a floating window. Must be of type Control Inheritance object VxBase VxManagedObject VxUiExtension VxWindowBase VxFloatingWindow VxFloatingWindow<T> Inherited Members VxFloatingWindow.OnVisibilityChanged(bool) VxWindowBase.OnControlCreated(Control) VxUiExtension.OnSceneEvent(VxScene, VxSceneEvent) VxUiExtension.OnUIStyleChanged() VxUiExtension.OnSelectionChanged(IEnumerable<VxBase>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Examples [VxWindow(\"1917BC62-1D0F-45FB-ADE8-1917BC62EDD6\", \"Label of MyFloatingForm1\", Description = \"Description of MyFloatingForm1\")] public class MyFloatingForm1 : VxFloatingWindow<Form1>; { } Remarks Floating form are not dockable, but are also managed in the window layout and workspaces of the Designer. They are handled as a direct child window but displayed in the correct UI style. Constructors VxFloatingWindow() protected VxFloatingWindow() Properties Control Get the control of type T public T Control { get; } Property Value T ControlType Gets the type of the hosted control public override Type ControlType { get; } Property Value Type"
  },
  "api/Ventuz.Extension.VxFloatingWindow.html": {
    "href": "api/Ventuz.Extension.VxFloatingWindow.html",
    "title": "Class VxFloatingWindow",
    "summary": "Class VxFloatingWindow Namespace Ventuz.Extension Assembly Ventuz.Extension.dll This is the base class used for custom floating forms. public abstract class VxFloatingWindow : VxWindowBase Inheritance object VxBase VxManagedObject VxUiExtension VxWindowBase VxFloatingWindow Derived VxFloatingWindow<T> Inherited Members VxWindowBase.OnControlCreated(Control) VxWindowBase.ControlType VxWindowBase.Control VxUiExtension.OnSceneEvent(VxScene, VxSceneEvent) VxUiExtension.OnUIStyleChanged() VxUiExtension.OnSelectionChanged(IEnumerable<VxBase>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks Floating form are not dockable, but are also managed in the window layout and workspaces of the Designer. They are handled as a direct child window but displayed in the correct UI style. Methods OnVisibilityChanged(bool) Called whenever the visibility of the window changed public virtual void OnVisibilityChanged(bool visible) Parameters visible bool true if visible"
  },
  "api/Ventuz.Extension.VxGroupProperty-1.html": {
    "href": "api/Ventuz.Extension.VxGroupProperty-1.html",
    "title": "Class VxGroupProperty<PG>",
    "summary": "Class VxGroupProperty<PG> Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxGroupProperty<PG> : VxBaseProperty, IVxGroupProperty where PG : VxPropertyGroup Type Parameters PG Inheritance object VxBase VxManagedObject VxSceneElement VxMember VxBaseProperty VxGroupProperty<PG> Implements IVxGroupProperty Inherited Members VxMember.Name VxMember.Status object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VxGroupProperty() public VxGroupProperty() Properties Value public PG Value { get; } Property Value PG Methods Clear() public void Clear() Set(Type, bool) public PG Set(Type newPG, bool migrateData = true) Parameters newPG Type migrateData bool Returns PG Set<NewPG>(bool) public NewPG Set<NewPG>(bool migrateData = true) where NewPG : PG Parameters migrateData bool Returns NewPG Type Parameters NewPG"
  },
  "api/Ventuz.Extension.VxGroupPropertyList-1.html": {
    "href": "api/Ventuz.Extension.VxGroupPropertyList-1.html",
    "title": "Class VxGroupPropertyList<PG>",
    "summary": "Class VxGroupPropertyList<PG> Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxGroupPropertyList<PG> : VxBaseProperty, IVxGroupPropertyList where PG : VxPropertyGroup Type Parameters PG Inheritance object VxBase VxManagedObject VxSceneElement VxMember VxBaseProperty VxGroupPropertyList<PG> Implements IVxGroupPropertyList Inherited Members VxMember.Name VxMember.Status object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VxGroupPropertyList() public VxGroupPropertyList() Properties Count public int Count { get; } Property Value int this[int] public VxGroupProperty<PG> this[int index] { get; } Parameters index int Property Value VxGroupProperty<PG> Methods Add(Type) public PG Add(Type newPG) Parameters newPG Type Returns PG Add<NewPG>() public NewPG Add<NewPG>() where NewPG : PG Returns NewPG Type Parameters NewPG GetItemAt(int) public VxGroupProperty<PG> GetItemAt(int index) Parameters index int Returns VxGroupProperty<PG>"
  },
  "api/Ventuz.Extension.VxHelpUrlAttribute.html": {
    "href": "api/Ventuz.Extension.VxHelpUrlAttribute.html",
    "title": "Class VxHelpUrlAttribute",
    "summary": "Class VxHelpUrlAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll [AttributeUsage(AttributeTargets.Class, AllowMultiple = true, Inherited = true)] public class VxHelpUrlAttribute : VxMetaDataClassAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMetaDataClassAttribute VxHelpUrlAttribute Implements _Attribute Inherited Members VxMetaDataAttribute._ReplaceOnItem(VxMetaDataAttribute) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxHelpUrlAttribute(string, string) public VxHelpUrlAttribute(string url, string description) Parameters url string description string Properties Description public string Description { get; } Property Value string MdCode public override string MdCode { get; } Property Value string SystemExecution public bool SystemExecution { get; set; } Property Value bool Url public string Url { get; } Property Value string"
  },
  "api/Ventuz.Extension.VxHierarchyBaseNode.html": {
    "href": "api/Ventuz.Extension.VxHierarchyBaseNode.html",
    "title": "Class VxHierarchyBaseNode",
    "summary": "Class VxHierarchyBaseNode Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxHierarchyBaseNode : VxNode Inheritance object VxBase VxManagedObject VxSceneElement VxMemberOwner VxNode VxHierarchyBaseNode Derived VxHierarchyContainer VxHierarchyContainerRoot VxHierarchyNode VxLayerBaseNode Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods VxNodeExt.GetLinks(VxHierarchyBaseNode) VxNodeExt.GetOutputs(VxHierarchyBaseNode) VxNodeExt.LinkAfter(VxHierarchyBaseNode, VxHierarchyBaseNode) VxNodeExt.LinkBefore(VxHierarchyBaseNode, VxHierarchyBaseNode) VxNodeExt.LinkBehind(VxHierarchyBaseNode, VxHierarchyBaseNode, int) VxNodeExt.GetEvent(VxMemberOwner, string) VxNodeExt.GetMethod(VxMemberOwner, string) VxNodeExt.GetProperty(VxMemberOwner, string) VxNodeExt.GetPropertyGroupList<PG>(VxMemberOwner, string) VxNodeExt.GetPropertyGroup<PG>(VxMemberOwner, string) VxNodeExt.GetContainer(VxNode) VxNodeExt.GetID(VxNode) VxNodeExt.GetName(VxNode) VxNodeExt.Navigate(VxNode, string) VxNodeExt.SetName(VxNode, string) Constructors VxHierarchyBaseNode() public VxHierarchyBaseNode()"
  },
  "api/Ventuz.Extension.VxHierarchyContainer.html": {
    "href": "api/Ventuz.Extension.VxHierarchyContainer.html",
    "title": "Class VxHierarchyContainer",
    "summary": "Class VxHierarchyContainer Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxHierarchyContainer : VxHierarchyBaseNode, IVxContainer Inheritance object VxBase VxManagedObject VxSceneElement VxMemberOwner VxNode VxHierarchyBaseNode VxHierarchyContainer Implements IVxContainer Derived VxMainContainer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods VxContainerExt.CreateNodeAfter<T>(IVxContainer, VxHierarchyBaseNode, string) VxContainerExt.CreateNodeBefore<T>(IVxContainer, VxHierarchyBaseNode, string) VxContainerExt.CreateNodeBehind<T>(IVxContainer, VxHierarchyBaseNode, string) VxContainerExt.CreateNode<T>(IVxContainer, string) VxContainerExt.GetRoot(IVxContainer) VxNodeExt.GetLinks(VxHierarchyBaseNode) VxNodeExt.GetOutputs(VxHierarchyBaseNode) VxNodeExt.LinkAfter(VxHierarchyBaseNode, VxHierarchyBaseNode) VxNodeExt.LinkBefore(VxHierarchyBaseNode, VxHierarchyBaseNode) VxNodeExt.LinkBehind(VxHierarchyBaseNode, VxHierarchyBaseNode, int) VxNodeExt.GetEvent(VxMemberOwner, string) VxNodeExt.GetMethod(VxMemberOwner, string) VxNodeExt.GetProperty(VxMemberOwner, string) VxNodeExt.GetPropertyGroupList<PG>(VxMemberOwner, string) VxNodeExt.GetPropertyGroup<PG>(VxMemberOwner, string) VxNodeExt.GetContainer(VxNode) VxNodeExt.GetID(VxNode) VxNodeExt.GetName(VxNode) VxNodeExt.Navigate(VxNode, string) VxNodeExt.SetName(VxNode, string) Constructors VxHierarchyContainer() public VxHierarchyContainer()"
  },
  "api/Ventuz.Extension.VxHierarchyContainerRoot.html": {
    "href": "api/Ventuz.Extension.VxHierarchyContainerRoot.html",
    "title": "Class VxHierarchyContainerRoot",
    "summary": "Class VxHierarchyContainerRoot Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxHierarchyContainerRoot : VxHierarchyBaseNode Inheritance object VxBase VxManagedObject VxSceneElement VxMemberOwner VxNode VxHierarchyBaseNode VxHierarchyContainerRoot Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods VxNodeExt.GetLinks(VxHierarchyBaseNode) VxNodeExt.GetOutputs(VxHierarchyBaseNode) VxNodeExt.LinkAfter(VxHierarchyBaseNode, VxHierarchyBaseNode) VxNodeExt.LinkBefore(VxHierarchyBaseNode, VxHierarchyBaseNode) VxNodeExt.LinkBehind(VxHierarchyBaseNode, VxHierarchyBaseNode, int) VxNodeExt.GetEvent(VxMemberOwner, string) VxNodeExt.GetMethod(VxMemberOwner, string) VxNodeExt.GetProperty(VxMemberOwner, string) VxNodeExt.GetPropertyGroupList<PG>(VxMemberOwner, string) VxNodeExt.GetPropertyGroup<PG>(VxMemberOwner, string) VxNodeExt.GetContainer(VxNode) VxNodeExt.GetID(VxNode) VxNodeExt.GetName(VxNode) VxNodeExt.Navigate(VxNode, string) VxNodeExt.SetName(VxNode, string) Constructors VxHierarchyContainerRoot() public VxHierarchyContainerRoot()"
  },
  "api/Ventuz.Extension.VxHierarchyNode.html": {
    "href": "api/Ventuz.Extension.VxHierarchyNode.html",
    "title": "Class VxHierarchyNode",
    "summary": "Class VxHierarchyNode Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxHierarchyNode : VxHierarchyBaseNode Inheritance object VxBase VxManagedObject VxSceneElement VxMemberOwner VxNode VxHierarchyBaseNode VxHierarchyNode Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods VxNodeExt.GetLinks(VxHierarchyBaseNode) VxNodeExt.GetOutputs(VxHierarchyBaseNode) VxNodeExt.LinkAfter(VxHierarchyBaseNode, VxHierarchyBaseNode) VxNodeExt.LinkBefore(VxHierarchyBaseNode, VxHierarchyBaseNode) VxNodeExt.LinkBehind(VxHierarchyBaseNode, VxHierarchyBaseNode, int) VxNodeExt.GetEvent(VxMemberOwner, string) VxNodeExt.GetMethod(VxMemberOwner, string) VxNodeExt.GetProperty(VxMemberOwner, string) VxNodeExt.GetPropertyGroupList<PG>(VxMemberOwner, string) VxNodeExt.GetPropertyGroup<PG>(VxMemberOwner, string) VxNodeExt.GetContainer(VxNode) VxNodeExt.GetID(VxNode) VxNodeExt.GetName(VxNode) VxNodeExt.Navigate(VxNode, string) VxNodeExt.SetName(VxNode, string) Constructors VxHierarchyNode() public VxHierarchyNode()"
  },
  "api/Ventuz.Extension.VxIconAttribute.html": {
    "href": "api/Ventuz.Extension.VxIconAttribute.html",
    "title": "Class VxIconAttribute",
    "summary": "Class VxIconAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Field, AllowMultiple = true, Inherited = true)] public class VxIconAttribute : VxMetaDataClassAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMetaDataClassAttribute VxIconAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxIconAttribute(string, int) public VxIconAttribute(string image, int index = 0) Parameters image string index int Properties Image public string Image { get; } Property Value string Index public int Index { get; } Property Value int MdCode public override string MdCode { get; } Property Value string Methods _ReplaceOnItem(VxMetaDataAttribute) public override bool _ReplaceOnItem(VxMetaDataAttribute other) Parameters other VxMetaDataAttribute Returns bool"
  },
  "api/Ventuz.Extension.VxInitialOutputsAttribute.html": {
    "href": "api/Ventuz.Extension.VxInitialOutputsAttribute.html",
    "title": "Class VxInitialOutputsAttribute",
    "summary": "Class VxInitialOutputsAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class VxInitialOutputsAttribute : VxMetaDataClassAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMetaDataClassAttribute VxInitialOutputsAttribute Implements _Attribute Inherited Members VxMetaDataAttribute._ReplaceOnItem(VxMetaDataAttribute) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxInitialOutputsAttribute(params string[]) public VxInitialOutputsAttribute(params string[] names) Parameters names string[] Properties InitialOutputNames public string[] InitialOutputNames { get; } Property Value string[] MdCode public override string MdCode { get; } Property Value string"
  },
  "api/Ventuz.Extension.VxInvalidContextException.html": {
    "href": "api/Ventuz.Extension.VxInvalidContextException.html",
    "title": "Class VxInvalidContextException",
    "summary": "Class VxInvalidContextException Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxInvalidContextException : VxException, ISerializable, _Exception Inheritance object Exception VxException VxInvalidContextException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.MemberwiseClone() Constructors VxInvalidContextException(string) public VxInvalidContextException(string message) Parameters message string"
  },
  "api/Ventuz.Extension.VxInvalidTypeAliasException.html": {
    "href": "api/Ventuz.Extension.VxInvalidTypeAliasException.html",
    "title": "Class VxInvalidTypeAliasException",
    "summary": "Class VxInvalidTypeAliasException Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxInvalidTypeAliasException : VxException, ISerializable, _Exception Inheritance object Exception VxException VxInvalidTypeAliasException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.MemberwiseClone() Constructors VxInvalidTypeAliasException(string) public VxInvalidTypeAliasException(string alias) Parameters alias string"
  },
  "api/Ventuz.Extension.VxInvalidTypeException.html": {
    "href": "api/Ventuz.Extension.VxInvalidTypeException.html",
    "title": "Class VxInvalidTypeException",
    "summary": "Class VxInvalidTypeException Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxInvalidTypeException : VxException, ISerializable, _Exception Inheritance object Exception VxException VxInvalidTypeException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.MemberwiseClone() Constructors VxInvalidTypeException(Type) public VxInvalidTypeException(Type type) Parameters type Type"
  },
  "api/Ventuz.Extension.VxLabelAttribute.html": {
    "href": "api/Ventuz.Extension.VxLabelAttribute.html",
    "title": "Class VxLabelAttribute",
    "summary": "Class VxLabelAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxLabelAttribute : VxMemberAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMemberAttribute VxLabelAttribute Implements _Attribute Inherited Members VxMemberAttribute._ReplaceOnItem(VxMetaDataAttribute) VxMemberAttribute.Member Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxLabelAttribute(string, string) public VxLabelAttribute(string label, string member = null) Parameters label string member string Properties Label public string Label { get; } Property Value string MdCode public override string MdCode { get; } Property Value string"
  },
  "api/Ventuz.Extension.VxLayerBaseNode.html": {
    "href": "api/Ventuz.Extension.VxLayerBaseNode.html",
    "title": "Class VxLayerBaseNode",
    "summary": "Class VxLayerBaseNode Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxLayerBaseNode : VxHierarchyBaseNode Inheritance object VxBase VxManagedObject VxSceneElement VxMemberOwner VxNode VxHierarchyBaseNode VxLayerBaseNode Derived VxLayerContainer VxLayerNode Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods VxNodeExt.GetLinks(VxHierarchyBaseNode) VxNodeExt.GetOutputs(VxHierarchyBaseNode) VxNodeExt.LinkAfter(VxHierarchyBaseNode, VxHierarchyBaseNode) VxNodeExt.LinkBefore(VxHierarchyBaseNode, VxHierarchyBaseNode) VxNodeExt.LinkBehind(VxHierarchyBaseNode, VxHierarchyBaseNode, int) VxNodeExt.GetEvent(VxMemberOwner, string) VxNodeExt.GetMethod(VxMemberOwner, string) VxNodeExt.GetProperty(VxMemberOwner, string) VxNodeExt.GetPropertyGroupList<PG>(VxMemberOwner, string) VxNodeExt.GetPropertyGroup<PG>(VxMemberOwner, string) VxNodeExt.GetContainer(VxNode) VxNodeExt.GetID(VxNode) VxNodeExt.GetName(VxNode) VxNodeExt.Navigate(VxNode, string) VxNodeExt.SetName(VxNode, string) Constructors VxLayerBaseNode() public VxLayerBaseNode()"
  },
  "api/Ventuz.Extension.VxLayerContainer.html": {
    "href": "api/Ventuz.Extension.VxLayerContainer.html",
    "title": "Class VxLayerContainer",
    "summary": "Class VxLayerContainer Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxLayerContainer : VxLayerBaseNode, IVxContainer Inheritance object VxBase VxManagedObject VxSceneElement VxMemberOwner VxNode VxHierarchyBaseNode VxLayerBaseNode VxLayerContainer Implements IVxContainer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods VxContainerExt.CreateNodeAfter<T>(IVxContainer, VxHierarchyBaseNode, string) VxContainerExt.CreateNodeBefore<T>(IVxContainer, VxHierarchyBaseNode, string) VxContainerExt.CreateNodeBehind<T>(IVxContainer, VxHierarchyBaseNode, string) VxContainerExt.CreateNode<T>(IVxContainer, string) VxContainerExt.GetRoot(IVxContainer) VxNodeExt.GetLinks(VxHierarchyBaseNode) VxNodeExt.GetOutputs(VxHierarchyBaseNode) VxNodeExt.LinkAfter(VxHierarchyBaseNode, VxHierarchyBaseNode) VxNodeExt.LinkBefore(VxHierarchyBaseNode, VxHierarchyBaseNode) VxNodeExt.LinkBehind(VxHierarchyBaseNode, VxHierarchyBaseNode, int) VxNodeExt.GetEvent(VxMemberOwner, string) VxNodeExt.GetMethod(VxMemberOwner, string) VxNodeExt.GetProperty(VxMemberOwner, string) VxNodeExt.GetPropertyGroupList<PG>(VxMemberOwner, string) VxNodeExt.GetPropertyGroup<PG>(VxMemberOwner, string) VxNodeExt.GetContainer(VxNode) VxNodeExt.GetID(VxNode) VxNodeExt.GetName(VxNode) VxNodeExt.Navigate(VxNode, string) VxNodeExt.SetName(VxNode, string) Constructors VxLayerContainer() public VxLayerContainer()"
  },
  "api/Ventuz.Extension.VxLayerNode.html": {
    "href": "api/Ventuz.Extension.VxLayerNode.html",
    "title": "Class VxLayerNode",
    "summary": "Class VxLayerNode Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxLayerNode : VxLayerBaseNode Inheritance object VxBase VxManagedObject VxSceneElement VxMemberOwner VxNode VxHierarchyBaseNode VxLayerBaseNode VxLayerNode Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods VxNodeExt.GetLinks(VxHierarchyBaseNode) VxNodeExt.GetOutputs(VxHierarchyBaseNode) VxNodeExt.LinkAfter(VxHierarchyBaseNode, VxHierarchyBaseNode) VxNodeExt.LinkBefore(VxHierarchyBaseNode, VxHierarchyBaseNode) VxNodeExt.LinkBehind(VxHierarchyBaseNode, VxHierarchyBaseNode, int) VxNodeExt.GetChildren(VxLayerNode, int) VxNodeExt.GetEvent(VxMemberOwner, string) VxNodeExt.GetMethod(VxMemberOwner, string) VxNodeExt.GetProperty(VxMemberOwner, string) VxNodeExt.GetPropertyGroupList<PG>(VxMemberOwner, string) VxNodeExt.GetPropertyGroup<PG>(VxMemberOwner, string) VxNodeExt.GetContainer(VxNode) VxNodeExt.GetID(VxNode) VxNodeExt.GetName(VxNode) VxNodeExt.Navigate(VxNode, string) VxNodeExt.SetName(VxNode, string) Constructors VxLayerNode() public VxLayerNode()"
  },
  "api/Ventuz.Extension.VxLayerOutput.html": {
    "href": "api/Ventuz.Extension.VxLayerOutput.html",
    "title": "Class VxLayerOutput",
    "summary": "Class VxLayerOutput Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public sealed class VxLayerOutput : VxSceneElement, IEnumerable<VxLayerNode>, IEnumerable Inheritance object VxBase VxManagedObject VxSceneElement VxLayerOutput Implements IEnumerable<VxLayerNode> IEnumerable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors VxLayerOutput() public VxLayerOutput() Properties Count public int Count { get; } Property Value int this[int] public VxLayerNode this[int index] { get; } Parameters index int Property Value VxLayerNode Methods GetEnumerator() public IEnumerator<VxLayerNode> GetEnumerator() Returns IEnumerator<VxLayerNode>"
  },
  "api/Ventuz.Extension.VxLegacyNamesAttribute.html": {
    "href": "api/Ventuz.Extension.VxLegacyNamesAttribute.html",
    "title": "Class VxLegacyNamesAttribute",
    "summary": "Class VxLegacyNamesAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxLegacyNamesAttribute : VxMemberAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMemberAttribute VxLegacyNamesAttribute Implements _Attribute Inherited Members VxMemberAttribute._ReplaceOnItem(VxMetaDataAttribute) VxMemberAttribute.Member Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxLegacyNamesAttribute(string, params string[]) public VxLegacyNamesAttribute(string member, params string[] legacyNames) Parameters member string legacyNames string[] Properties LegacyNames public string[] LegacyNames { get; } Property Value string[] MdCode public override string MdCode { get; } Property Value string"
  },
  "api/Ventuz.Extension.VxLink.html": {
    "href": "api/Ventuz.Extension.VxLink.html",
    "title": "Class VxLink",
    "summary": "Class VxLink Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public sealed class VxLink : VxSceneElement Inheritance object VxBase VxManagedObject VxSceneElement VxLink Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors VxLink() public VxLink() Properties Blocked public bool Blocked { get; set; } Property Value bool Collapsed public bool Collapsed { get; set; } Property Value bool FromNode public VxHierarchyBaseNode FromNode { get; } Property Value VxHierarchyBaseNode FromOutput public VxOutput FromOutput { get; } Property Value VxOutput FromOutputIndex public int FromOutputIndex { get; } Property Value int ToNode public VxHierarchyBaseNode ToNode { get; } Property Value VxHierarchyBaseNode Methods Unlink() public void Unlink()"
  },
  "api/Ventuz.Extension.VxMainContainer.html": {
    "href": "api/Ventuz.Extension.VxMainContainer.html",
    "title": "Class VxMainContainer",
    "summary": "Class VxMainContainer Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public sealed class VxMainContainer : VxHierarchyContainer, IVxContainer Inheritance object VxBase VxManagedObject VxSceneElement VxMemberOwner VxNode VxHierarchyBaseNode VxHierarchyContainer VxMainContainer Implements IVxContainer Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods VxContainerExt.CreateNodeAfter<T>(IVxContainer, VxHierarchyBaseNode, string) VxContainerExt.CreateNodeBefore<T>(IVxContainer, VxHierarchyBaseNode, string) VxContainerExt.CreateNodeBehind<T>(IVxContainer, VxHierarchyBaseNode, string) VxContainerExt.CreateNode<T>(IVxContainer, string) VxContainerExt.GetRoot(IVxContainer) VxNodeExt.GetLinks(VxHierarchyBaseNode) VxNodeExt.GetOutputs(VxHierarchyBaseNode) VxNodeExt.LinkAfter(VxHierarchyBaseNode, VxHierarchyBaseNode) VxNodeExt.LinkBefore(VxHierarchyBaseNode, VxHierarchyBaseNode) VxNodeExt.LinkBehind(VxHierarchyBaseNode, VxHierarchyBaseNode, int) VxNodeExt.GetEvent(VxMemberOwner, string) VxNodeExt.GetMethod(VxMemberOwner, string) VxNodeExt.GetProperty(VxMemberOwner, string) VxNodeExt.GetPropertyGroupList<PG>(VxMemberOwner, string) VxNodeExt.GetPropertyGroup<PG>(VxMemberOwner, string) VxNodeExt.GetContainer(VxNode) VxNodeExt.GetID(VxNode) VxNodeExt.GetName(VxNode) VxNodeExt.Navigate(VxNode, string) VxNodeExt.SetName(VxNode, string) Constructors VxMainContainer() public VxMainContainer()"
  },
  "api/Ventuz.Extension.VxMainMenu.html": {
    "href": "api/Ventuz.Extension.VxMainMenu.html",
    "title": "Class VxMainMenu",
    "summary": "Class VxMainMenu Namespace Ventuz.Extension Assembly Ventuz.Extension.dll This class represents the VX-API for main menus in Designer. The class should be decorated with VxMenuAttribute and/or VxIconAttribute public abstract class VxMainMenu : VxUiExtension, IVxMenuEntry Inheritance object VxBase VxManagedObject VxUiExtension VxMainMenu Implements IVxMenuEntry Inherited Members VxUiExtension.OnSceneEvent(VxScene, VxSceneEvent) VxUiExtension.OnUIStyleChanged() VxUiExtension.OnSelectionChanged(IEnumerable<VxBase>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Examples // This example returns a dynamically created list a entries everytime OnOpening is called: [VxMenu(\"MyMainMenu\", \"Description of MyMainMenu\")] [VxIcon(\"VxDocPrj.MainIcon.svg\")] public class MyMainMenu : VxMainMenu { public override IEnumerable<VxMenuEntry> OnOpening() { // return a dynamic list of entries yield return new VxMenuEntry(\"Item 1\") { Tag = \"A\"}; yield return new VxMenuEntry(\"Item 2\") { Tag = \"B\"}; yield return new VxMenuEntry(\"Item 3\") { Tag = \"C\"}; } public override void OnAnyEntryClicked(VxMenuEntry vxEntry) { switch( vxEntry.Tag as string ) { case \"A\": // do something break; case \"B\": // do something break; case \"C\": // do something else break; } } } // This example creates the sub entries only once, stores them in local fields and updates them when OnOpening is called: [VxMenu(\"MyMainMenu\", \"Description of MyMainMenu\")] [VxIcon(\"VxDocPrj.MainIcon.svg\")] public class MyMainMenu : VxMainMenu { VxMenuEntry[] entries; VxMenuEntry entry1; VxMenuEntry entry2; public override IEnumerable<VxMenuEntry> OnOpening() { if( entries == null ) { entry1 = new VxMenuEntry(\"Item 1\"); entry2 = new VxMenuEntry(\"Item 1\"); entries = new VxMenuEntry[]} { entry1, entry2 }; } // update items on current state entry1.Enabled = false; entry2.Enabled = true; return entries; } public override void OnAnyEntryClicked(VxMenuEntry vxEntry) { if( vxEntry == entry1 ) { // do something } else if( vxEntry == entry2 ) { // do something else } } } Constructors VxMainMenu() protected VxMainMenu() Methods OnAnyEntryClicked(VxMenuEntry) public virtual void OnAnyEntryClicked(VxMenuEntry vxEntry) Parameters vxEntry VxMenuEntry OnClick() public virtual void OnClick() OnClosed() public virtual void OnClosed() OnEntryClicked(VxMenuEntry) public virtual void OnEntryClicked(VxMenuEntry vxEntry) Parameters vxEntry VxMenuEntry OnOpening() public abstract IEnumerable<VxMenuEntry> OnOpening() Returns IEnumerable<VxMenuEntry>"
  },
  "api/Ventuz.Extension.VxManagedObject.html": {
    "href": "api/Ventuz.Extension.VxManagedObject.html",
    "title": "Class VxManagedObject",
    "summary": "Class VxManagedObject Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxManagedObject : VxBase Inheritance object VxBase VxManagedObject Derived VxSceneElement VxServiceBase VxUiExtension Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VxManagedObject() protected VxManagedObject()"
  },
  "api/Ventuz.Extension.VxManagementExt.html": {
    "href": "api/Ventuz.Extension.VxManagementExt.html",
    "title": "Class VxManagementExt",
    "summary": "Class VxManagementExt Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public static class VxManagementExt Inheritance object VxManagementExt Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods GetService<T>(IVxManagement) public static T GetService<T>(this IVxManagement scene) where T : VxServiceBase Parameters scene IVxManagement Returns T Type Parameters T"
  },
  "api/Ventuz.Extension.VxMember.html": {
    "href": "api/Ventuz.Extension.VxMember.html",
    "title": "Class VxMember",
    "summary": "Class VxMember Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxMember : VxSceneElement Inheritance object VxBase VxManagedObject VxSceneElement VxMember Derived VxBaseProperty VxEvent VxMethod Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties Name public string Name { get; } Property Value string Status public VxMemberStatus Status { get; } Property Value VxMemberStatus"
  },
  "api/Ventuz.Extension.VxMemberAttribute.html": {
    "href": "api/Ventuz.Extension.VxMemberAttribute.html",
    "title": "Class VxMemberAttribute",
    "summary": "Class VxMemberAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Field, AllowMultiple = true, Inherited = true)] public abstract class VxMemberAttribute : VxMetaDataAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMemberAttribute Implements _Attribute Derived VxLabelAttribute VxLegacyNamesAttribute Inherited Members VxMetaDataAttribute.MdCode Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxMemberAttribute(string) protected VxMemberAttribute(string member) Parameters member string Properties Member public string Member { get; } Property Value string Methods _ReplaceOnItem(VxMetaDataAttribute) public override bool _ReplaceOnItem(VxMetaDataAttribute other) Parameters other VxMetaDataAttribute Returns bool"
  },
  "api/Ventuz.Extension.VxMemberOwner.html": {
    "href": "api/Ventuz.Extension.VxMemberOwner.html",
    "title": "Class VxMemberOwner",
    "summary": "Class VxMemberOwner Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxMemberOwner : VxSceneElement Inheritance object VxBase VxManagedObject VxSceneElement VxMemberOwner Derived VxNode VxPropertyGroup VxScene Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods VxNodeExt.GetEvent(VxMemberOwner, string) VxNodeExt.GetMethod(VxMemberOwner, string) VxNodeExt.GetProperty(VxMemberOwner, string) VxNodeExt.GetPropertyGroupList<PG>(VxMemberOwner, string) VxNodeExt.GetPropertyGroup<PG>(VxMemberOwner, string) Constructors VxMemberOwner() public VxMemberOwner()"
  },
  "api/Ventuz.Extension.VxMemberStatus.html": {
    "href": "api/Ventuz.Extension.VxMemberStatus.html",
    "title": "Enum VxMemberStatus",
    "summary": "Enum VxMemberStatus Namespace Ventuz.Extension Assembly Ventuz.Extension.dll The VxMemberStatus gives technical information about a member. Members are found at nodes and property groups. [Flags] public enum VxMemberStatus Fields Bound = 256 The member is bound to a source. The value comes from another property or the method is triggered by a bound event. Dynamic = 16 The member is dynamic, means it is part of the custom model Event = 8 The member is an event Exposed = 512 The member is exposed to its container Favored = 65536 The member is favored. Hidden = 131072 The member is hidden and not displayed in UI Interface = 1024 The member is part of the container interface. Always combined with 'Exposed' Method = 4 The member is a method Property = 1 The member is a Property ReadOnly = 2 The member is read-only, it is an output property Watched = 2048 The member is currently watch in the renderer"
  },
  "api/Ventuz.Extension.VxMembersAttribute.html": {
    "href": "api/Ventuz.Extension.VxMembersAttribute.html",
    "title": "Class VxMembersAttribute",
    "summary": "Class VxMembersAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Field, AllowMultiple = true)] public abstract class VxMembersAttribute : VxMetaDataAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMembersAttribute Implements _Attribute Derived VxCategoryAttribute VxDefaultValueAttribute VxDescriptionAttribute VxFavoredAttribute VxNumericAttribute VxStringAttribute VxTabAttribute VxUriAttribute VxWithAlphaAttribute Inherited Members VxMetaDataAttribute._ReplaceOnItem(VxMetaDataAttribute) VxMetaDataAttribute.MdCode Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxMembersAttribute(string[]) protected VxMembersAttribute(string[] members) Parameters members string[] Properties Members public string[] Members { get; } Property Value string[]"
  },
  "api/Ventuz.Extension.VxMenuAttribute.html": {
    "href": "api/Ventuz.Extension.VxMenuAttribute.html",
    "title": "Class VxMenuAttribute",
    "summary": "Class VxMenuAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll [AttributeUsage(AttributeTargets.Class, Inherited = false)] public sealed class VxMenuAttribute : VxMetaDataClassAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMetaDataClassAttribute VxMenuAttribute Implements _Attribute Inherited Members VxMetaDataAttribute._ReplaceOnItem(VxMetaDataAttribute) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors VxMenuAttribute(string, string) public VxMenuAttribute(string label, string description = null) Parameters label string description string Properties Description public string Description { get; set; } Property Value string Label public string Label { get; } Property Value string MdCode public override string MdCode { get; } Property Value string"
  },
  "api/Ventuz.Extension.VxMenuEntry.html": {
    "href": "api/Ventuz.Extension.VxMenuEntry.html",
    "title": "Class VxMenuEntry",
    "summary": "Class VxMenuEntry Namespace Ventuz.Extension Assembly Ventuz.Extension.dll The class represents a menu entry used in Designer. For example a VxMainMenu provides a list of such menu entries to describe the main menu. public class VxMenuEntry : VxBase, IVxMenuEntry Inheritance object VxBase VxMenuEntry Implements IVxMenuEntry Inherited Members object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks A VxMenuEntry has several properties to describe the appearance of the entry. This properties a only read once, while building the menu. Updating or changing the values may not affect the appearance in the UI! Constructors VxMenuEntry(string, string, string) Creates a VxMenuEntry public VxMenuEntry(string text, string tooltip = null, string icon = null) Parameters text string The text of the entry. tooltip string The tooltip of the entry. Default NULL. icon string The icon of the entry. Default NULL. See VxIconAttribute for icon names. Fields Click This (lambda) function is called if the menu was clicked public Action Click Field Value Action Closed This (lambda) function is called if the menu was closed public Action Closed Field Value Action EntryClicked This (lambda) function is called if any menu entry in the local entry tree was clicked public Action<VxMenuEntry> EntryClicked Field Value Action<VxMenuEntry> Opening This (lambda) function is called if the menu is opening. If a function is assigned, the entry assumes that there are sub-entries and an arrow is displayed - even if the function doesn't return any entries. public Func<IEnumerable<VxMenuEntry>> Opening Field Value Func<IEnumerable<VxMenuEntry>> Properties Checked True to check the entry. False to uncheck. public bool Checked { get; set; } Property Value bool Enabled True to enable the entry. False to disable. public bool Enabled { get; set; } Property Value bool Icon The Icon of the entry. Can be NULL. See VxIconAttribute for icon names public string Icon { get; set; } Property Value string Tag Any additional user data public object Tag { get; set; } Property Value object Text The Text of the entry public string Text { get; set; } Property Value string Tooltip The Tooltip of the entry. Can be NULL public string Tooltip { get; set; } Property Value string Visible True to show the entry. False to hide. public bool Visible { get; set; } Property Value bool Methods OnClick() Called if the menu entry is clicked public virtual void OnClick() OnClosed() Called if the menu was closed. public virtual void OnClosed() OnEntryClicked(VxMenuEntry) Called if any menu entry in the local entry tree was clicked public virtual void OnEntryClicked(VxMenuEntry vxEntry) Parameters vxEntry VxMenuEntry The clicked entry OnOpening() Called if the menu is opening. Implementors must return a list of sub-entries of this menu. public virtual IEnumerable<VxMenuEntry> OnOpening() Returns IEnumerable<VxMenuEntry> List of sub-entries ToString() Gets the text of this entry public override string ToString() Returns string Text of this entry"
  },
  "api/Ventuz.Extension.VxMetaDataAttribute.html": {
    "href": "api/Ventuz.Extension.VxMetaDataAttribute.html",
    "title": "Class VxMetaDataAttribute",
    "summary": "Class VxMetaDataAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll [AttributeUsage(AttributeTargets.Class, AllowMultiple = false)] public abstract class VxMetaDataAttribute : Attribute, _Attribute Inheritance object Attribute VxMetaDataAttribute Implements _Attribute Derived VxMemberAttribute VxMembersAttribute VxMetaDataClassAttribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxMetaDataAttribute() protected VxMetaDataAttribute() Properties MdCode public abstract string MdCode { get; } Property Value string Methods _ReplaceOnItem(VxMetaDataAttribute) public virtual bool _ReplaceOnItem(VxMetaDataAttribute other) Parameters other VxMetaDataAttribute Returns bool"
  },
  "api/Ventuz.Extension.VxMetaDataClassAttribute.html": {
    "href": "api/Ventuz.Extension.VxMetaDataClassAttribute.html",
    "title": "Class VxMetaDataClassAttribute",
    "summary": "Class VxMetaDataClassAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public abstract class VxMetaDataClassAttribute : VxMetaDataAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMetaDataClassAttribute Implements _Attribute Derived VxCategoriesAttribute VxDynamicIconAttribute VxHelpUrlAttribute VxIconAttribute VxInitialOutputsAttribute VxMenuAttribute VxToolBoxAttribute VxWebViewAttribute VxWindowAttribute Inherited Members VxMetaDataAttribute._ReplaceOnItem(VxMetaDataAttribute) VxMetaDataAttribute.MdCode Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxMetaDataClassAttribute() protected VxMetaDataClassAttribute()"
  },
  "api/Ventuz.Extension.VxMethod.html": {
    "href": "api/Ventuz.Extension.VxMethod.html",
    "title": "Class VxMethod",
    "summary": "Class VxMethod Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public sealed class VxMethod : VxMember Inheritance object VxBase VxManagedObject VxSceneElement VxMember VxMethod Inherited Members VxMember.Name VxMember.Status object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors VxMethod() public VxMethod() Methods BindToEvent(VxEvent) public void BindToEvent(VxEvent source) Parameters source VxEvent Call(int, ushort) public void Call(int arg = 0, ushort delay = 0) Parameters arg int delay ushort"
  },
  "api/Ventuz.Extension.VxNode.html": {
    "href": "api/Ventuz.Extension.VxNode.html",
    "title": "Class VxNode",
    "summary": "Class VxNode Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxNode : VxMemberOwner Inheritance object VxBase VxManagedObject VxSceneElement VxMemberOwner VxNode Derived VxContentBaseNode VxHierarchyBaseNode Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods VxNodeExt.GetEvent(VxMemberOwner, string) VxNodeExt.GetMethod(VxMemberOwner, string) VxNodeExt.GetProperty(VxMemberOwner, string) VxNodeExt.GetPropertyGroupList<PG>(VxMemberOwner, string) VxNodeExt.GetPropertyGroup<PG>(VxMemberOwner, string) VxNodeExt.GetContainer(VxNode) VxNodeExt.GetID(VxNode) VxNodeExt.GetName(VxNode) VxNodeExt.Navigate(VxNode, string) VxNodeExt.SetName(VxNode, string) Constructors VxNode() public VxNode()"
  },
  "api/Ventuz.Extension.VxNodeExt.html": {
    "href": "api/Ventuz.Extension.VxNodeExt.html",
    "title": "Class VxNodeExt",
    "summary": "Class VxNodeExt Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public static class VxNodeExt Inheritance object VxNodeExt Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods Add(VxOutputList, string) public static VxOutput Add(this VxOutputList outputList, string name = null) Parameters outputList VxOutputList name string Returns VxOutput GetChildren(VxLayerNode, int) public static VxLayerOutput GetChildren(this VxLayerNode layer, int index = 0) Parameters layer VxLayerNode index int Returns VxLayerOutput GetContainer(VxNode) public static IVxContainer GetContainer(this VxNode node) Parameters node VxNode Returns IVxContainer GetCount(VxOutputList) public static int GetCount(this VxOutputList outputList) Parameters outputList VxOutputList Returns int GetEnumerator(VxOutputList) public static IEnumerator<VxOutput> GetEnumerator(this VxOutputList outputList) Parameters outputList VxOutputList Returns IEnumerator<VxOutput> GetEvent(VxMemberOwner, string) public static VxEvent GetEvent(this VxMemberOwner owner, string name) Parameters owner VxMemberOwner name string Returns VxEvent GetID(VxNode) public static Guid GetID(this VxNode node) Parameters node VxNode Returns Guid GetLinks(VxHierarchyBaseNode) public static VxLink[] GetLinks(this VxHierarchyBaseNode node) Parameters node VxHierarchyBaseNode Returns VxLink[] GetMethod(VxMemberOwner, string) public static VxMethod GetMethod(this VxMemberOwner owner, string name) Parameters owner VxMemberOwner name string Returns VxMethod GetName(VxNode) public static string GetName(this VxNode node) Parameters node VxNode Returns string GetOutput(VxOutputList, int) public static VxOutput GetOutput(this VxOutputList outputList, int index) Parameters outputList VxOutputList index int Returns VxOutput GetOutputs(VxHierarchyBaseNode) public static VxOutputList GetOutputs(this VxHierarchyBaseNode node) Parameters node VxHierarchyBaseNode Returns VxOutputList GetProperty(VxMemberOwner, string) public static VxBaseProperty GetProperty(this VxMemberOwner owner, string name) Parameters owner VxMemberOwner name string Returns VxBaseProperty GetPropertyGroupList<PG>(VxMemberOwner, string) public static VxGroupPropertyList<PG> GetPropertyGroupList<PG>(this VxMemberOwner owner, string name) where PG : VxPropertyGroup Parameters owner VxMemberOwner name string Returns VxGroupPropertyList<PG> Type Parameters PG GetPropertyGroup<PG>(VxMemberOwner, string) public static VxGroupProperty<PG> GetPropertyGroup<PG>(this VxMemberOwner owner, string name) where PG : VxPropertyGroup Parameters owner VxMemberOwner name string Returns VxGroupProperty<PG> Type Parameters PG Insert(VxOutputList, int, string) public static VxOutput Insert(this VxOutputList outputList, int index, string name = null) Parameters outputList VxOutputList index int name string Returns VxOutput LinkAfter(VxHierarchyBaseNode, VxHierarchyBaseNode) public static VxLink LinkAfter(this VxHierarchyBaseNode node, VxHierarchyBaseNode toNode) Parameters node VxHierarchyBaseNode toNode VxHierarchyBaseNode Returns VxLink LinkBefore(VxHierarchyBaseNode, VxHierarchyBaseNode) public static VxLink LinkBefore(this VxHierarchyBaseNode node, VxHierarchyBaseNode toNode) Parameters node VxHierarchyBaseNode toNode VxHierarchyBaseNode Returns VxLink LinkBehind(VxHierarchyBaseNode, VxHierarchyBaseNode, int) public static VxLink LinkBehind(this VxHierarchyBaseNode node, VxHierarchyBaseNode toNode, int index = -1) Parameters node VxHierarchyBaseNode toNode VxHierarchyBaseNode index int Returns VxLink Navigate(VxNode, string) public static void Navigate(this VxNode node, string name) Parameters node VxNode name string RemoveAt(VxOutputList, int) public static void RemoveAt(this VxOutputList outputList, int index) Parameters outputList VxOutputList index int SetName(VxNode, string) public static void SetName(this VxNode node, string name) Parameters node VxNode name string"
  },
  "api/Ventuz.Extension.VxNumericAttribute.html": {
    "href": "api/Ventuz.Extension.VxNumericAttribute.html",
    "title": "Class VxNumericAttribute",
    "summary": "Class VxNumericAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxNumericAttribute : VxMembersAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMembersAttribute VxNumericAttribute Implements _Attribute Inherited Members VxMembersAttribute.Members VxMetaDataAttribute._ReplaceOnItem(VxMetaDataAttribute) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxNumericAttribute(double, double, double, params string[]) public VxNumericAttribute(double minValue, double maxValue, double stepValue, params string[] members) Parameters minValue double maxValue double stepValue double members string[] VxNumericAttribute(int, int, int, params string[]) public VxNumericAttribute(int minValue, int maxValue, int stepValue, params string[] members) Parameters minValue int maxValue int stepValue int members string[] VxNumericAttribute(float, float, float, params string[]) public VxNumericAttribute(float minValue, float maxValue, float stepValue, params string[] members) Parameters minValue float maxValue float stepValue float members string[] Properties MaxValue public object MaxValue { get; } Property Value object MdCode public override string MdCode { get; } Property Value string MinValue public object MinValue { get; } Property Value object Mode public VxNumericMode Mode { get; set; } Property Value VxNumericMode StepValue public object StepValue { get; } Property Value object Unit public string Unit { get; set; } Property Value string"
  },
  "api/Ventuz.Extension.VxNumericMode.html": {
    "href": "api/Ventuz.Extension.VxNumericMode.html",
    "title": "Enum VxNumericMode",
    "summary": "Enum VxNumericMode Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public enum VxNumericMode Fields Bar = 1 Default = 0 Line = 2"
  },
  "api/Ventuz.Extension.VxOutput.html": {
    "href": "api/Ventuz.Extension.VxOutput.html",
    "title": "Class VxOutput",
    "summary": "Class VxOutput Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public sealed class VxOutput : VxSceneElement, IEnumerable<VxHierarchyNode>, IEnumerable Inheritance object VxBase VxManagedObject VxSceneElement VxOutput Implements IEnumerable<VxHierarchyNode> IEnumerable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors VxOutput() public VxOutput() Properties Count public int Count { get; } Property Value int Name public string Name { get; set; } Property Value string Methods GetChild(int) public VxHierarchyNode GetChild(int index) Parameters index int Returns VxHierarchyNode GetEnumerator() public IEnumerator<VxHierarchyNode> GetEnumerator() Returns IEnumerator<VxHierarchyNode> LinkTo(VxHierarchyNode, int) public void LinkTo(VxHierarchyNode node, int index = -1) Parameters node VxHierarchyNode index int"
  },
  "api/Ventuz.Extension.VxOutputList.html": {
    "href": "api/Ventuz.Extension.VxOutputList.html",
    "title": "Class VxOutputList",
    "summary": "Class VxOutputList Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public sealed class VxOutputList : VxSceneElement, IEnumerable<VxOutput>, IEnumerable Inheritance object VxBase VxManagedObject VxSceneElement VxOutputList Implements IEnumerable<VxOutput> IEnumerable Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods VxNodeExt.Add(VxOutputList, string) VxNodeExt.GetCount(VxOutputList) VxNodeExt.GetEnumerator(VxOutputList) VxNodeExt.GetOutput(VxOutputList, int) VxNodeExt.Insert(VxOutputList, int, string) VxNodeExt.RemoveAt(VxOutputList, int) Constructors VxOutputList() public VxOutputList() Properties Count public int Count { get; } Property Value int this[int] public VxOutput this[int index] { get; } Parameters index int Property Value VxOutput Methods Add(string) public VxOutput Add(string name = null) Parameters name string Returns VxOutput GetEnumerator() public IEnumerator<VxOutput> GetEnumerator() Returns IEnumerator<VxOutput> Insert(int, string) public VxOutput Insert(int index, string name = null) Parameters index int name string Returns VxOutput RemoveAt(int) public void RemoveAt(int index) Parameters index int"
  },
  "api/Ventuz.Extension.VxPersistentData.html": {
    "href": "api/Ventuz.Extension.VxPersistentData.html",
    "title": "Class VxPersistentData",
    "summary": "Class VxPersistentData Namespace Ventuz.Extension Assembly Ventuz.Extension.dll This class us used to load and save additional data with a node. (See IPersistence). Data is managed as a simple key-value-pair dictionary. Supported types are: bool, byte, sbyte, short, ushort, int, uint, long, ulong, float, double, decimal and string public abstract class VxPersistentData Inheritance object VxPersistentData Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VxPersistentData() protected VxPersistentData() Properties Version Get or set the version of the contained data. public abstract int Version { get; set; } Property Value int Methods Add<T>(string, T) Add (save) additional data to be stored. public abstract void Add<T>(string key, T value) Parameters key string The name (key) of the data value T The value of the data of type T Type Parameters T The type of the data to be stored GetOrDefault<T>(string, T) Get (load) additional data. public abstract T GetOrDefault<T>(string key, T defaultValue) Parameters key string The name (key) of the data defaultValue T The default value to be return if the key is not present or is of wrong type Returns T The value of the data if present Type Parameters T The type of the data to be loaded Get<T>(string) Get (load) additional data. public abstract T Get<T>(string key) Parameters key string The name (key) of the data Returns T The value of the data if present Type Parameters T The type of the data to be loaded Exceptions KeyNotFoundException If the given key is not present InvalidCastException If the given key is present but of different type"
  },
  "api/Ventuz.Extension.VxPort.html": {
    "href": "api/Ventuz.Extension.VxPort.html",
    "title": "Class VxPort",
    "summary": "Class VxPort Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public sealed class VxPort : VxSceneElement Inheritance object VxBase VxManagedObject VxSceneElement VxPort Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors VxPort() public VxPort() Properties Active public bool Active { get; set; } Property Value bool Flags public VxPortFlags Flags { get; } Property Value VxPortFlags Name public string Name { get; } Property Value string Ordinal public int Ordinal { get; } Property Value int Scene public VxScene Scene { get; set; } Property Value VxScene"
  },
  "api/Ventuz.Extension.VxPortFlags.html": {
    "href": "api/Ventuz.Extension.VxPortFlags.html",
    "title": "Enum VxPortFlags",
    "summary": "Enum VxPortFlags Namespace Ventuz.Extension Assembly Ventuz.Extension.dll [Flags] public enum VxPortFlags Fields Layer = 4 Locked = 1 ManualTemplate = 2 None = 0"
  },
  "api/Ventuz.Extension.VxProperty-1.html": {
    "href": "api/Ventuz.Extension.VxProperty-1.html",
    "title": "Class VxProperty<T>",
    "summary": "Class VxProperty<T> Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxProperty<T> : VxReadOnlyProperty<T> Type Parameters T Inheritance object VxBase VxManagedObject VxSceneElement VxMember VxBaseProperty VxProperty VxReadOnlyProperty<T> VxProperty<T> Inherited Members VxProperty.BindToSource(VxProperty) VxProperty.Invalidate() VxMember.Name VxMember.Status object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VxProperty() public VxProperty() Properties Value public T Value { get; set; } Property Value T"
  },
  "api/Ventuz.Extension.VxProperty.html": {
    "href": "api/Ventuz.Extension.VxProperty.html",
    "title": "Class VxProperty",
    "summary": "Class VxProperty Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxProperty : VxBaseProperty Inheritance object VxBase VxManagedObject VxSceneElement VxMember VxBaseProperty VxProperty Derived VxReadOnlyProperty<T> Inherited Members VxMember.Name VxMember.Status object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VxProperty() public VxProperty() Methods BindToSource(VxProperty) public void BindToSource(VxProperty source) Parameters source VxProperty Invalidate() public void Invalidate()"
  },
  "api/Ventuz.Extension.VxPropertyGroup.VxPreset.html": {
    "href": "api/Ventuz.Extension.VxPropertyGroup.VxPreset.html",
    "title": "Class VxPropertyGroup.VxPreset",
    "summary": "Class VxPropertyGroup.VxPreset Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public sealed class VxPropertyGroup.VxPreset : Dictionary<string, object>, IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IDictionary, ICollection, IReadOnlyDictionary<string, object>, IReadOnlyCollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IEnumerable, ISerializable, IDeserializationCallback Inheritance object Dictionary<string, object> VxPropertyGroup.VxPreset Implements IDictionary<string, object> ICollection<KeyValuePair<string, object>> IDictionary ICollection IReadOnlyDictionary<string, object> IReadOnlyCollection<KeyValuePair<string, object>> IEnumerable<KeyValuePair<string, object>> IEnumerable ISerializable IDeserializationCallback Inherited Members Dictionary<string, object>.Add(string, object) Dictionary<string, object>.Clear() Dictionary<string, object>.ContainsKey(string) Dictionary<string, object>.ContainsValue(object) Dictionary<string, object>.GetEnumerator() Dictionary<string, object>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<string, object>.OnDeserialization(object) Dictionary<string, object>.Remove(string) Dictionary<string, object>.TryGetValue(string, out object) Dictionary<string, object>.Comparer Dictionary<string, object>.Count Dictionary<string, object>.Keys Dictionary<string, object>.Values Dictionary<string, object>.this[string] object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Constructors VxPreset(string, string, string) public VxPreset(string label = null, string description = null, string icon = null) Parameters label string description string icon string Properties Description public string Description { get; } Property Value string Icon public string Icon { get; } Property Value string Label public string Label { get; } Property Value string"
  },
  "api/Ventuz.Extension.VxPropertyGroup.html": {
    "href": "api/Ventuz.Extension.VxPropertyGroup.html",
    "title": "Class VxPropertyGroup",
    "summary": "Class VxPropertyGroup Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxPropertyGroup : VxMemberOwner Inheritance object VxBase VxManagedObject VxSceneElement VxMemberOwner VxPropertyGroup Derived VxDeferrablePropertyGroup Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Extension Methods VxNodeExt.GetEvent(VxMemberOwner, string) VxNodeExt.GetMethod(VxMemberOwner, string) VxNodeExt.GetProperty(VxMemberOwner, string) VxNodeExt.GetPropertyGroupList<PG>(VxMemberOwner, string) VxNodeExt.GetPropertyGroup<PG>(VxMemberOwner, string) Constructors VxPropertyGroup() public VxPropertyGroup()"
  },
  "api/Ventuz.Extension.VxReadOnlyProperty-1.html": {
    "href": "api/Ventuz.Extension.VxReadOnlyProperty-1.html",
    "title": "Class VxReadOnlyProperty<T>",
    "summary": "Class VxReadOnlyProperty<T> Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxReadOnlyProperty<T> : VxProperty Type Parameters T Inheritance object VxBase VxManagedObject VxSceneElement VxMember VxBaseProperty VxProperty VxReadOnlyProperty<T> Derived VxProperty<T> Inherited Members VxProperty.BindToSource(VxProperty) VxProperty.Invalidate() VxMember.Name VxMember.Status object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VxReadOnlyProperty() public VxReadOnlyProperty() Properties Value public T Value { get; } Property Value T"
  },
  "api/Ventuz.Extension.VxScene.html": {
    "href": "api/Ventuz.Extension.VxScene.html",
    "title": "Class VxScene",
    "summary": "Class VxScene Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public sealed class VxScene : VxMemberOwner Inheritance object VxBase VxManagedObject VxSceneElement VxMemberOwner VxScene Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() Extension Methods VxNodeExt.GetEvent(VxMemberOwner, string) VxNodeExt.GetMethod(VxMemberOwner, string) VxNodeExt.GetProperty(VxMemberOwner, string) VxNodeExt.GetPropertyGroupList<PG>(VxMemberOwner, string) VxNodeExt.GetPropertyGroup<PG>(VxMemberOwner, string) Constructors VxScene() public VxScene() Properties DisplayName public string DisplayName { get; } Property Value string IID public string IID { get; } Property Value string Identity public string Identity { get; } Property Value string IsValid public bool IsValid { get; } Property Value bool MainContainer public VxMainContainer MainContainer { get; } Property Value VxMainContainer NeedSave public bool NeedSave { get; set; } Property Value bool Port public VxPort Port { get; } Property Value VxPort Uri public Uri Uri { get; } Property Value Uri Methods CloseInDesigner(bool) public void CloseInDesigner(bool queryUser = true) Parameters queryUser bool CloseScene(bool) public void CloseScene(bool fullTree = false) Parameters fullTree bool ExportArchive(Uri, bool) public void ExportArchive(Uri uri = null, bool queryUser = true) Parameters uri Uri queryUser bool ExportPresentation(Uri, bool) public void ExportPresentation(Uri uri = null, bool queryUser = true) Parameters uri Uri queryUser bool GetDisplayName(bool, bool) public string GetDisplayName(bool withFolder, bool withNeedSave) Parameters withFolder bool withNeedSave bool Returns string GetLayers() public VxLayerBaseNode[] GetLayers() Returns VxLayerBaseNode[] GetNodes() public VxNode[] GetNodes() Returns VxNode[] GetPorts() public VxPort[] GetPorts() Returns VxPort[] IsOpenInDesigner() public bool IsOpenInDesigner() Returns bool Modify(Action<VxScene>, params VxScene[]) public Task Modify(Action<VxScene> sceneModificationAction, params VxScene[] scenesToRead) Parameters sceneModificationAction Action<VxScene> scenesToRead VxScene[] Returns Task OpenSceneInDesigner() public void OpenSceneInDesigner()"
  },
  "api/Ventuz.Extension.VxSceneElement.html": {
    "href": "api/Ventuz.Extension.VxSceneElement.html",
    "title": "Class VxSceneElement",
    "summary": "Class VxSceneElement Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxSceneElement : VxManagedObject Inheritance object VxBase VxManagedObject VxSceneElement Derived VxLayerOutput VxLink VxMember VxMemberOwner VxOutput VxOutputList VxPort Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VxSceneElement() public VxSceneElement()"
  },
  "api/Ventuz.Extension.VxSceneEvent.html": {
    "href": "api/Ventuz.Extension.VxSceneEvent.html",
    "title": "Enum VxSceneEvent",
    "summary": "Enum VxSceneEvent Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public enum VxSceneEvent Fields ActivateSceneInDesigner = 5 Modified = 6 None = 0 PipeIndicesChanged = 7 SceneAdded = 1 SceneModelUpdated = 4 SceneRemoved = 2 SceneRenamed = 3"
  },
  "api/Ventuz.Extension.VxSceneExt.html": {
    "href": "api/Ventuz.Extension.VxSceneExt.html",
    "title": "Class VxSceneExt",
    "summary": "Class VxSceneExt Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public static class VxSceneExt Inheritance object VxSceneExt Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/Ventuz.Extension.VxServiceBase.html": {
    "href": "api/Ventuz.Extension.VxServiceBase.html",
    "title": "Class VxServiceBase",
    "summary": "Class VxServiceBase Namespace Ventuz.Extension Assembly Ventuz.Extension.dll This is the base class for all Vx-Services. Do not use! public class VxServiceBase : VxManagedObject Inheritance object VxBase VxManagedObject VxServiceBase Derived VxSimpleService Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone()"
  },
  "api/Ventuz.Extension.VxSimpleService.html": {
    "href": "api/Ventuz.Extension.VxSimpleService.html",
    "title": "Class VxSimpleService",
    "summary": "Class VxSimpleService Namespace Ventuz.Extension Assembly Ventuz.Extension.dll A VxSimpleService represent the VX-API for simple Services. A service is a class that is created once the Vx code is initialized and stopped if it is uninitialized. Vx doe only create a single instance of simple services and starts/stops them accordingly. public abstract class VxSimpleService : VxServiceBase Inheritance object VxBase VxManagedObject VxServiceBase VxSimpleService Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Remarks Services are ver1y useful to manage centralized data within a single Vx module. A service could for example maintain a connection to a database and provide data to custom nodes. It is very important that a service stops correctly and releases and disposed all required resources like file handled, threads or hardware devices. Constructors VxSimpleService() protected VxSimpleService() Methods StartService() Called if the service should start. It is very important that a service stops correctly and releases and disposed all required resources like file handled, threads or hardware devices. public abstract void StartService() StopService() Called if the service should stop. public abstract void StopService()"
  },
  "api/Ventuz.Extension.VxStringAttribute.html": {
    "href": "api/Ventuz.Extension.VxStringAttribute.html",
    "title": "Class VxStringAttribute",
    "summary": "Class VxStringAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxStringAttribute : VxMembersAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMembersAttribute VxStringAttribute Implements _Attribute Inherited Members VxMembersAttribute.Members VxMetaDataAttribute._ReplaceOnItem(VxMetaDataAttribute) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxStringAttribute(VxStringType, bool, params string[]) public VxStringAttribute(VxStringType type, bool liveUpdate, params string[] members) Parameters type VxStringType liveUpdate bool members string[] Properties LiveUpdate public bool LiveUpdate { get; } Property Value bool MdCode public override string MdCode { get; } Property Value string Type public VxStringType Type { get; } Property Value VxStringType"
  },
  "api/Ventuz.Extension.VxStringType.html": {
    "href": "api/Ventuz.Extension.VxStringType.html",
    "title": "Enum VxStringType",
    "summary": "Enum VxStringType Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public enum VxStringType Fields CSharp = 3 MultiLine = 2 Singleline = 1 XML = 4"
  },
  "api/Ventuz.Extension.VxTabAttribute.html": {
    "href": "api/Ventuz.Extension.VxTabAttribute.html",
    "title": "Class VxTabAttribute",
    "summary": "Class VxTabAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxTabAttribute : VxMembersAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMembersAttribute VxTabAttribute Implements _Attribute Inherited Members VxMembersAttribute.Members VxMetaDataAttribute._ReplaceOnItem(VxMetaDataAttribute) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxTabAttribute(string, params string[]) public VxTabAttribute(string tab, params string[] members) Parameters tab string members string[] Properties MdCode public override string MdCode { get; } Property Value string Tab public string Tab { get; } Property Value string"
  },
  "api/Ventuz.Extension.VxToolBoxAttribute.html": {
    "href": "api/Ventuz.Extension.VxToolBoxAttribute.html",
    "title": "Class VxToolBoxAttribute",
    "summary": "Class VxToolBoxAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class VxToolBoxAttribute : VxMetaDataClassAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMetaDataClassAttribute VxToolBoxAttribute Implements _Attribute Inherited Members VxMetaDataAttribute._ReplaceOnItem(VxMetaDataAttribute) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxToolBoxAttribute(string, string, string, string, int, bool, bool) public VxToolBoxAttribute(string name, string category, string defaultName, string description = null, int sort = 0, bool small = false, bool breakAfter = false) Parameters name string category string defaultName string description string sort int small bool breakAfter bool Properties BreakAfter public bool BreakAfter { get; } Property Value bool Category public string Category { get; } Property Value string DefaultName public string DefaultName { get; } Property Value string Description public string Description { get; } Property Value string MdCode public override string MdCode { get; } Property Value string Name public string Name { get; } Property Value string Small public bool Small { get; } Property Value bool Sort public int Sort { get; } Property Value int"
  },
  "api/Ventuz.Extension.VxTypeAliasAttribute.html": {
    "href": "api/Ventuz.Extension.VxTypeAliasAttribute.html",
    "title": "Class VxTypeAliasAttribute",
    "summary": "Class VxTypeAliasAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll [AttributeUsage(AttributeTargets.Class|AttributeTargets.Enum, AllowMultiple = false, Inherited = false)] public class VxTypeAliasAttribute : Attribute, _Attribute Inheritance object Attribute VxTypeAliasAttribute Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxTypeAliasAttribute(string, params string[]) public VxTypeAliasAttribute(string typeAlias, params string[] legacyTypeAliases) Parameters typeAlias string legacyTypeAliases string[] Properties LegacyTypeAlias public string[] LegacyTypeAlias { get; } Property Value string[] TypeAlias public string TypeAlias { get; } Property Value string _VzType public string _VzType { get; } Property Value string"
  },
  "api/Ventuz.Extension.VxUiExtension.html": {
    "href": "api/Ventuz.Extension.VxUiExtension.html",
    "title": "Class VxUiExtension",
    "summary": "Class VxUiExtension Namespace Ventuz.Extension Assembly Ventuz.Extension.dll Base class of all UI Extension classes provided by the VX-API public class VxUiExtension : VxManagedObject Inheritance object VxBase VxManagedObject VxUiExtension Derived VxDataObjectHandler VxMainMenu VxWindowBase Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods OnSceneEvent(VxScene, VxSceneEvent) When overwritten this method is called whenever a scene received a scene event. See VxSceneEvent for more information about available events. public virtual void OnSceneEvent(VxScene scene, VxSceneEvent e) Parameters scene VxScene The scene this event belongs to e VxSceneEvent The event that occurred for the scene OnSelectionChanged(IEnumerable<VxBase>) When overwritten this method is called if the user selects any item in the UI. This can be nodes and other items. A good practice is to iterate throw the elements of selection and filter by the types of interest. public virtual void OnSelectionChanged(IEnumerable<VxBase> selection) Parameters selection IEnumerable<VxBase> null if no items are selected or a list of selected items (nodes) OnUIStyleChanged() When overwritten this method is called if the UI style changed. For example, if the user switch from light to dark style. public virtual void OnUIStyleChanged()"
  },
  "api/Ventuz.Extension.VxUiStyle.html": {
    "href": "api/Ventuz.Extension.VxUiStyle.html",
    "title": "Struct VxUiStyle",
    "summary": "Struct VxUiStyle Namespace Ventuz.Extension Assembly Ventuz.Extension.dll This structure contain helpful information about the current UI style like name of the color scheme and its colors. public struct VxUiStyle Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Properties Error Error public Color Error { get; set; } Property Value Color Foreground Foreground public Color Foreground { get; set; } Property Value Color ForegroundIntensive ForegroundIntensive public Color ForegroundIntensive { get; set; } Property Value Color ForegroundReduced ForegroundReduced public Color ForegroundReduced { get; set; } Property Value Color MainWindowBackground MainWindowBackground public Color MainWindowBackground { get; set; } Property Value Color Scheme Name of the color scheme (Light/Dark) public string Scheme { get; set; } Property Value string Selection Selection public Color Selection { get; set; } Property Value Color SelectionIndirect SelectionIndirect public Color SelectionIndirect { get; set; } Property Value Color SignalColor SignalColor public Color SignalColor { get; set; } Property Value Color WindowBackground WindowBackground public Color WindowBackground { get; set; } Property Value Color WindowBackground1 WindowBackground1 public Color WindowBackground1 { get; set; } Property Value Color WindowBackground2 WindowBackground2 public Color WindowBackground2 { get; set; } Property Value Color WindowBackground3 WindowBackground3 public Color WindowBackground3 { get; set; } Property Value Color"
  },
  "api/Ventuz.Extension.VxUriAttribute.html": {
    "href": "api/Ventuz.Extension.VxUriAttribute.html",
    "title": "Class VxUriAttribute",
    "summary": "Class VxUriAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxUriAttribute : VxMembersAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMembersAttribute VxUriAttribute Implements _Attribute Inherited Members VxMembersAttribute.Members VxMetaDataAttribute._ReplaceOnItem(VxMetaDataAttribute) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxUriAttribute(VxDataPool, params string[]) public VxUriAttribute(VxDataPool dataPool, params string[] members) Parameters dataPool VxDataPool members string[] VxUriAttribute(VxDataPool[], string[], params string[]) public VxUriAttribute(VxDataPool[] dataPools, string[] extensions, params string[] members) Parameters dataPools VxDataPool[] extensions string[] members string[] Properties DataPools public VxDataPool[] DataPools { get; } Property Value VxDataPool[] Extensions public string[] Extensions { get; } Property Value string[] MdCode public override string MdCode { get; } Property Value string"
  },
  "api/Ventuz.Extension.VxWebViewAttribute.html": {
    "href": "api/Ventuz.Extension.VxWebViewAttribute.html",
    "title": "Class VxWebViewAttribute",
    "summary": "Class VxWebViewAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll [AttributeUsage(AttributeTargets.Class, Inherited = false)] public sealed class VxWebViewAttribute : VxMetaDataClassAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMetaDataClassAttribute VxWebViewAttribute Implements _Attribute Inherited Members VxMetaDataAttribute._ReplaceOnItem(VxMetaDataAttribute) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors VxWebViewAttribute(string) public VxWebViewAttribute(string home) Parameters home string Fields Default public static readonly VxWebViewAttribute Default Field Value VxWebViewAttribute Properties AcceleratorKeys public bool AcceleratorKeys { get; set; } Property Value bool AddressDocumentTitle public bool AddressDocumentTitle { get; set; } Property Value bool AddressReadOnly public bool AddressReadOnly { get; set; } Property Value bool DarkMode public bool? DarkMode { get; set; } Property Value bool? DefaultContextMenus public bool DefaultContextMenus { get; set; } Property Value bool DevTools public bool DevTools { get; set; } Property Value bool GeneralAutoFill public bool GeneralAutoFill { get; set; } Property Value bool Home public string Home { get; set; } Property Value string MdCode public override string MdCode { get; } Property Value string NavigationBar public bool NavigationBar { get; set; } Property Value bool StatusBar public bool StatusBar { get; set; } Property Value bool"
  },
  "api/Ventuz.Extension.VxWindowAttribute.html": {
    "href": "api/Ventuz.Extension.VxWindowAttribute.html",
    "title": "Class VxWindowAttribute",
    "summary": "Class VxWindowAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll [AttributeUsage(AttributeTargets.Class, Inherited = false)] public sealed class VxWindowAttribute : VxMetaDataClassAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMetaDataClassAttribute VxWindowAttribute Implements _Attribute Inherited Members VxMetaDataAttribute._ReplaceOnItem(VxMetaDataAttribute) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors VxWindowAttribute(string, string) public VxWindowAttribute(string guid, string title) Parameters guid string title string Properties AllowClose public bool AllowClose { get; set; } Property Value bool Description public string Description { get; set; } Property Value string FloatingOnly public bool FloatingOnly { get; set; } Property Value bool Guid public Guid Guid { get; } Property Value Guid MdCode public override string MdCode { get; } Property Value string ShowInViewMenu public bool ShowInViewMenu { get; set; } Property Value bool Sizable public bool Sizable { get; set; } Property Value bool Title public string Title { get; } Property Value string Value public string Value { get; } Property Value string Methods GetTitleOrDefault(Type) public string GetTitleOrDefault(Type t) Parameters t Type Returns string"
  },
  "api/Ventuz.Extension.VxWindowBase.html": {
    "href": "api/Ventuz.Extension.VxWindowBase.html",
    "title": "Class VxWindowBase",
    "summary": "Class VxWindowBase Namespace Ventuz.Extension Assembly Ventuz.Extension.dll This base class is used for all custom window classes of the VX-API. It contains a reference to the control it hosts (window) public abstract class VxWindowBase : VxUiExtension Inheritance object VxBase VxManagedObject VxUiExtension VxWindowBase Derived VxDockableWindow VxFloatingWindow Inherited Members VxUiExtension.OnSceneEvent(VxScene, VxSceneEvent) VxUiExtension.OnUIStyleChanged() VxUiExtension.OnSelectionChanged(IEnumerable<VxBase>) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors VxWindowBase() Do not create instances of this class manually protected VxWindowBase() Properties Control Gets the control this windows hosts public Control Control { get; } Property Value Control ControlType Gets the type of the hosted control public abstract Type ControlType { get; } Property Value Type Methods OnControlCreated(Control) When overwritten this window is notified if the actual hosted control was created protected virtual void OnControlCreated(Control control) Parameters control Control"
  },
  "api/Ventuz.Extension.VxWithAlphaAttribute.html": {
    "href": "api/Ventuz.Extension.VxWithAlphaAttribute.html",
    "title": "Class VxWithAlphaAttribute",
    "summary": "Class VxWithAlphaAttribute Namespace Ventuz.Extension Assembly Ventuz.Extension.dll public class VxWithAlphaAttribute : VxMembersAttribute, _Attribute Inheritance object Attribute VxMetaDataAttribute VxMembersAttribute VxWithAlphaAttribute Implements _Attribute Inherited Members VxMembersAttribute.Members VxMetaDataAttribute._ReplaceOnItem(VxMetaDataAttribute) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() object.MemberwiseClone() Constructors VxWithAlphaAttribute(params string[]) public VxWithAlphaAttribute(params string[] members) Parameters members string[] Properties MdCode public override string MdCode { get; } Property Value string"
  },
  "api/Ventuz.Extension.html": {
    "href": "api/Ventuz.Extension.html",
    "title": "Namespace Ventuz.Extension",
    "summary": "Namespace Ventuz.Extension Classes CallToJSExt Misc TextLayoutOptions VX The VX class stores all raw API interfaces. Vx developers can call/use these interfaces directly. VxApiSceneModifyExt VxAssemblyAliasAttribute VxBase VxBaseProperty VxCategoriesAttribute VxCategoryAttribute VxContainerExt VxContentBaseNode VxContentContainer VxContentNode VxDataObjectHandler The VxDataObjectHandler represents the VX-API to handle clipboard data for drag'n'drop and copy/paste operations in Designer. Implementation must override the Probe(IVxDataObject) method to test if the data in the dataObject can be processed. Synchronous and Asynchronous method must implement the import or conversion of the data in the required result specified by VxDataObjectResult VxDefaultValueAttribute VxDeferrablePropertyGroup VxDescriptionAttribute VxDesignerWindow This class contain static fields with the IDs of all knows windows in Designer VxDockableWebView This is the base class used for custom dockable a web view. It hosts a WebView2 control. VxDockableWindow This is the base class for all dockable window classes of the VX-API VxDockableWindow<T> This is the base class used for custom dockable windows. The generic parameter T defines the class type of the form this window hosts. Deriving from this class required the VxWindowAttribute to assign a unique ID to the window. VxDynamicIconAttribute VxEngineException VxEvent VxException VxFavoredAttribute VxFlagGroupItemAttribute VxFlagGroupNameAttribute VxFloatingWindow This is the base class used for custom floating forms. VxFloatingWindow<T> This is the base class used for custom floating forms. VxGroupPropertyList<PG> VxGroupProperty<PG> VxHelpUrlAttribute VxHierarchyBaseNode VxHierarchyContainer VxHierarchyContainerRoot VxHierarchyNode VxIconAttribute VxInitialOutputsAttribute VxInvalidContextException VxInvalidTypeAliasException VxInvalidTypeException VxLabelAttribute VxLayerBaseNode VxLayerContainer VxLayerNode VxLayerOutput VxLegacyNamesAttribute VxLink VxMainContainer VxMainMenu This class represents the VX-API for main menus in Designer. The class should be decorated with VxMenuAttribute and/or VxIconAttribute VxManagedObject VxManagementExt VxMember VxMemberAttribute VxMemberOwner VxMembersAttribute VxMenuAttribute VxMenuEntry The class represents a menu entry used in Designer. For example a VxMainMenu provides a list of such menu entries to describe the main menu. VxMetaDataAttribute VxMetaDataClassAttribute VxMethod VxNode VxNodeExt VxNumericAttribute VxOutput VxOutputList VxPersistentData This class us used to load and save additional data with a node. (See IPersistence). Data is managed as a simple key-value-pair dictionary. Supported types are: bool, byte, sbyte, short, ushort, int, uint, long, ulong, float, double, decimal and string VxPort VxProperty VxPropertyGroup VxPropertyGroup.VxPreset VxProperty<T> VxReadOnlyProperty<T> VxScene VxSceneElement VxSceneExt VxServiceBase This is the base class for all Vx-Services. Do not use! VxSimpleService A VxSimpleService represent the VX-API for simple Services. A service is a class that is created once the Vx code is initialized and stopped if it is uninitialized. Vx doe only create a single instance of simple services and starts/stops them accordingly. VxStringAttribute VxTabAttribute VxToolBoxAttribute VxTypeAliasAttribute VxUiExtension Base class of all UI Extension classes provided by the VX-API VxUriAttribute VxWebViewAttribute VxWindowAttribute VxWindowBase This base class is used for all custom window classes of the VX-API. It contains a reference to the control it hosts (window) VxWithAlphaAttribute Structs RenderMeshDetails This structure describes how and where a mesh shall be rendered. Subset VertexP VertexPC VertexPN VertexPNBCT VertexPNBT VertexPNT VertexPT VxUiStyle This structure contain helpful information about the current UI style like name of the color scheme and its colors. Interfaces ICallToJS ICustomResource ICustomResourceParameter<D> IFontMetrics IFontMetricsResourceParameter IIconIndex The interface IIconIndex can be implemented by vx-nodes (derived from VxNode) to provide the current icon of the node. Nodes can change their icon appearance depending on their status, for example. The icons to be indexed here must be declared by using the VxIconAttribute with specified index. IIconTag The interface IIconTag can be implemented by vx-property-groups (derived from VxPropertyGroup) to provide an additional (short) text message drawn below the icon. IMaterial IMesh IMeshFactory IMeshResourceParameter IName The interface IName can be implemented by vx-nodes (derived from VxNode) to provide a static name to the UI. The user is not able to change the name of the node anymore if this interface is implemented. IPersistence The interface IPersistence can be implemented by vx-nodes (derived from VxNode) to handle additional data that are loaded and saved with the node. IProxyResource IResource IResourceParameter IResourceParameter<R> IStatus The interface IStatus can be implemented by vx-property-groups (derived from VxPropertyGroup) to provide a text message describing the current status of the property group. IText ITextRenderObject ITextResourceParameter ITexture ITextureFactory ITextureResourceParameter ITooltip The interface ITooltip can be implemented by vx-nodes (derived from VxNode) to provide a tooltip text presented to the user. IUsedUris The interface IUsedUris can be implemented by vx-nodes (derived from VxNode) to provide additional Uris (resources) that need to be included into an archive. If a node utilized more Uris than stored in its properties, this interface allows to advise additional ones. IVertex IVxApi This interface is the base interface of all API interfaces and doesn't provide any members IVxApiDesigner This interface represents the designer api. All provided methods are only available in the context of a running Designer. IVxApiEngine IVxApiIO IVxApiLog The IVxApiLog interface is used to log messages. Log message can provide a sender that helps to navigate to if the use clicks on a message IVxApiNodeValidation IVxApiProject IVxApiRenderer IVxApiResources IVxApiSceneBuilder IVxApiUiWindows IVxContainer IVxDataObject The interface IVxDataObject is a simple bridge to IDataObject extended by some Vx related properties. An implementation of this interface is passed to the Probe and Create methods of a VxDataObjectHandler. The members of this interface can only be accessed from the main thread! IVxGroupProperty IVxGroupPropertyList IVxManagement The IVxManagement interface provides general functions of the VX API IVxMenuEntry IVxTaskProgress The async methods of VxDataObjectHandler receives an instance of this interface to handle the async operation. Enums BoundingBoxType ColorGamma HorizontalTextAlignment MonospaceType RenderMeshAxisMode Describes how the use the Axis in RenderMeshDetails if a mesh is rendered. TextWrapping TextureFormat VerbState If a verb of a vx node is probed, the verb method must return the state of this verb. VertexFormat VerticalTextAlignment VxDataObjectResult Represents all different result type a VxDataObjectHandler can handle. VxDataPool VxDockSituation Describe the way a dockable window currently appears on screen VxMemberStatus The VxMemberStatus gives technical information about a member. Members are found at nodes and property groups. VxNumericMode VxPortFlags VxSceneEvent VxStringType Delegates Event"
  },
  "api/Ventuz.Vx.Color4b.html": {
    "href": "api/Ventuz.Vx.Color4b.html",
    "title": "Struct Color4b",
    "summary": "Struct Color4b Namespace Ventuz.Vx Assembly Ventuz.Extension.dll [TypeConverter(typeof(ColorConverter))] public struct Color4b Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors Color4b(int) public Color4b(int value) Parameters value int Properties Value public int Value { get; } Property Value int a public byte a { get; } Property Value byte b public byte b { get; } Property Value byte g public byte g { get; } Property Value byte r public byte r { get; } Property Value byte Methods Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool FromArgb(int, int, int) public static Color4b FromArgb(int r, int g, int b) Parameters r int g int b int Returns Color4b FromArgb(int, int, int, int) public static Color4b FromArgb(int a, int r, int g, int b) Parameters a int r int g int b int Returns Color4b GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string"
  },
  "api/Ventuz.Vx.ColorConverter.html": {
    "href": "api/Ventuz.Vx.ColorConverter.html",
    "title": "Class ColorConverter",
    "summary": "Class ColorConverter Namespace Ventuz.Vx Assembly Ventuz.Extension.dll public class ColorConverter : TypeConverter Inheritance object TypeConverter ColorConverter Inherited Members TypeConverter.CanConvertFrom(Type) TypeConverter.CanConvertTo(Type) TypeConverter.ConvertFrom(object) TypeConverter.ConvertFromInvariantString(string) TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, string) TypeConverter.ConvertFromString(string) TypeConverter.ConvertFromString(ITypeDescriptorContext, string) TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, string) TypeConverter.ConvertTo(object, Type) TypeConverter.ConvertToInvariantString(object) TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, object) TypeConverter.ConvertToString(object) TypeConverter.ConvertToString(ITypeDescriptorContext, object) TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, object) TypeConverter.CreateInstance(IDictionary) TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary) TypeConverter.GetConvertFromException(object) TypeConverter.GetConvertToException(object, Type) TypeConverter.GetCreateInstanceSupported() TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext) TypeConverter.GetProperties(object) TypeConverter.GetProperties(ITypeDescriptorContext, object) TypeConverter.GetProperties(ITypeDescriptorContext, object, Attribute[]) TypeConverter.GetPropertiesSupported() TypeConverter.GetPropertiesSupported(ITypeDescriptorContext) TypeConverter.GetStandardValues() TypeConverter.GetStandardValues(ITypeDescriptorContext) TypeConverter.GetStandardValuesExclusive() TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext) TypeConverter.GetStandardValuesSupported() TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext) TypeConverter.IsValid(object) TypeConverter.IsValid(ITypeDescriptorContext, object) TypeConverter.SortProperties(PropertyDescriptorCollection, string[]) object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Constructors ColorConverter() public ColorConverter() Fields Singleton public static ColorConverter Singleton Field Value ColorConverter Methods CanConvertFrom(ITypeDescriptorContext, Type) public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) Parameters context ITypeDescriptorContext sourceType Type Returns bool CanConvertTo(ITypeDescriptorContext, Type) public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType) Parameters context ITypeDescriptorContext destinationType Type Returns bool ConvertFrom(ITypeDescriptorContext, CultureInfo, object) public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters context ITypeDescriptorContext culture CultureInfo value object Returns object ConvertTo(ITypeDescriptorContext, CultureInfo, object, Type) public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) Parameters context ITypeDescriptorContext culture CultureInfo value object destinationType Type Returns object"
  },
  "api/Ventuz.Vx.ColorPrimaries.html": {
    "href": "api/Ventuz.Vx.ColorPrimaries.html",
    "title": "Struct ColorPrimaries",
    "summary": "Struct ColorPrimaries Namespace Ventuz.Vx Assembly Ventuz.Extension.dll Defines color primaries (red, green blue, white point) in CIE 1931 xy space public struct ColorPrimaries Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields ACES2065_1 Primaries for the ACES 2065-1 color space public static readonly ColorPrimaries ACES2065_1 Field Value ColorPrimaries ACEScg Primaries for the ACEScg color space public static readonly ColorPrimaries ACEScg Field Value ColorPrimaries BT470 Primaries for the ITU Recommendation BT.470-6 color space public static readonly ColorPrimaries BT470 Field Value ColorPrimaries BT601_525 Primaries for the ITU Recommendation BT.601-7 color space for NTSC public static readonly ColorPrimaries BT601_525 Field Value ColorPrimaries BT601_625 Primaries for the ITU Recommendation BT.601-7 color space for PAL public static readonly ColorPrimaries BT601_625 Field Value ColorPrimaries DCI_P3_D65 Primaries for the DCI-P3 D65 (\"Display P3\", SMPTE ST 432-1) color space public static readonly ColorPrimaries DCI_P3_D65 Field Value ColorPrimaries DCI_P3_DCI Primaries for the DCI-P3 (SMPTE ST 431-2) color space public static readonly ColorPrimaries DCI_P3_DCI Field Value ColorPrimaries Rec2020 Primaries for the ITU Recommendation BT.2020 and BT.2100-2 color space public static readonly ColorPrimaries Rec2020 Field Value ColorPrimaries Rec709 Primaries for the ITU Recommendation BT.709-6 color space (also used for sRGB) public static readonly ColorPrimaries Rec709 Field Value ColorPrimaries b public Vector2 b Field Value Vector2 g public Vector2 g Field Value Vector2 r public Vector2 r Field Value Vector2 w public Vector2 w Field Value Vector2 Methods GetConversion(in ColorPrimaries) Get a matrix for conversion to another color space public Matrix33 GetConversion(in ColorPrimaries to) Parameters to ColorPrimaries Returns Matrix33 GetK() Get the K vector (luma coefficients) public Vector3 GetK() Returns Vector3 GetRGBToXYZ() Get a matrix for RGB to CIE XYZ conversion public Matrix33 GetRGBToXYZ() Returns Matrix33 GetRGBToYUV(float, float, float, float) Get a 4x3 matrix for RGB to YUV conversion public Matrix44A GetRGBToYUV(float minY, float maxY, float minUV, float maxUV) Parameters minY float maxY float minUV float maxUV float Returns Matrix44A GetXYZToRGB() Get a matrix for CIE XYZ to RGB conversion public Matrix33 GetXYZToRGB() Returns Matrix33 GetYUVtoRGB(float, float, float, float) Get sort of a 4x3 matrix for YUV to RGB conversion. public (Matrix33 mtx, Vector3 offset) GetYUVtoRGB(float minY, float maxY, float minUV, float maxUV) Parameters minY float maxY float minUV float maxUV float Returns (Matrix33 mtx, Vector3 offset) A 3x3 matrix and an offset. Subtract the offset from the YUV value first, then apply the matrix."
  },
  "api/Ventuz.Vx.FRect.html": {
    "href": "api/Ventuz.Vx.FRect.html",
    "title": "Struct FRect",
    "summary": "Struct FRect Namespace Ventuz.Vx Assembly Ventuz.Extension.dll Floating point rectangle public struct FRect Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors FRect(float, float, float, float) public FRect(float X0, float Y0, float X1, float Y1) Parameters X0 float Y0 float X1 float Y1 float FRect(in Rect) public FRect(in Rect r) Parameters r Rect Fields x0 Left edge public float x0 Field Value float x1 Right edge public float x1 Field Value float y0 Top edge public float y0 Field Value float y1 Bottom edge public float y1 Field Value float Properties Area public float Area { get; } Property Value float Center public Vector2 Center { get; } Property Value Vector2 CenterX public float CenterX { get; } Property Value float CenterY public float CenterY { get; } Property Value float InvertEmpty public static FRect InvertEmpty { get; } Property Value FRect SizeX public float SizeX { get; } Property Value float SizeY public float SizeY { get; } Property Value float Methods And(FRect, in FRect) public static FRect And(FRect a, in FRect b) Parameters a FRect b FRect Returns FRect And(in FRect) public void And(in FRect a) Parameters a FRect And(in Rect) public void And(in Rect a) Parameters a Rect CalcTransform(in FRect, in FRect) public static FRect CalcTransform(in FRect s, in FRect d) Parameters s FRect d FRect Returns FRect Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool Equals(in FRect) public bool Equals(in FRect a) Parameters a FRect Returns bool Extend(float, float) public FRect Extend(float x, float y) Parameters x float y float Returns FRect FitAspect(float, float, float, float) public static FRect FitAspect(float imagex, float imagey, float framex, float framey) Parameters imagex float imagey float framex float framey float Returns FRect FromSize(int, int) public static FRect FromSize(int XS, int YS) Parameters XS int YS int Returns FRect FromSize(float, float) public static FRect FromSize(float XS, float YS) Parameters XS float YS float Returns FRect FromSize(float, float, float, float) public static FRect FromSize(float X0, float Y0, float XS, float YS) Parameters X0 float Y0 float XS float YS float Returns FRect FullAspect(float, float, float, float) public static FRect FullAspect(float imagex, float imagey, float framex, float framey) Parameters imagex float imagey float framex float framey float Returns FRect GetHashCode() public override int GetHashCode() Returns int Hit(float, float) public bool Hit(float x, float y) Parameters x float y float Returns bool Hit(in Vector2) public bool Hit(in Vector2 p) Parameters p Vector2 Returns bool HitInclusive(in Vector2) public bool HitInclusive(in Vector2 p) Parameters p Vector2 Returns bool IsCompletelyInside(in FRect) public bool IsCompletelyInside(in FRect r) Parameters r FRect Returns bool IsEmpty() public bool IsEmpty() Returns bool IsPartiallyInside(in FRect) public bool IsPartiallyInside(in FRect r) Parameters r FRect Returns bool Lerp(float, float) public Vector2 Lerp(float fx, float fy) Parameters fx float fy float Returns Vector2 Lerp(in Vector2) public Vector2 Lerp(in Vector2 p) Parameters p Vector2 Returns Vector2 Map(float, float) public Vector2 Map(float x, float y) Parameters x float y float Returns Vector2 Map(Vector2) public Vector2 Map(Vector2 a) Parameters a Vector2 Returns Vector2 Move(float, float) public FRect Move(float mx, float my) Parameters mx float my float Returns FRect Or(FRect, in FRect) public static FRect Or(FRect a, in FRect b) Parameters a FRect b FRect Returns FRect Or(in FRect) public void Or(in FRect a) Parameters a FRect Scale(float, float) public FRect Scale(float sx, float sy) Parameters sx float sy float Returns FRect Set(float, float, float, float) public void Set(float X0, float Y0, float X1, float Y1) Parameters X0 float Y0 float X1 float Y1 float ToString() public override string ToString() Returns string Unmap(FRect) public FRect Unmap(FRect a) Parameters a FRect Returns FRect Unmap(Vector2) public Vector2 Unmap(Vector2 a) Parameters a Vector2 Returns Vector2 Operators operator ==(in FRect, in FRect) public static bool operator ==(in FRect a, in FRect b) Parameters a FRect b FRect Returns bool operator !=(in FRect, in FRect) public static bool operator !=(in FRect a, in FRect b) Parameters a FRect b FRect Returns bool"
  },
  "api/Ventuz.Vx.MathStatic.html": {
    "href": "api/Ventuz.Vx.MathStatic.html",
    "title": "Class MathStatic",
    "summary": "Class MathStatic Namespace Ventuz.Vx Assembly Ventuz.Extension.dll public static class MathStatic Inheritance object MathStatic Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Methods And(in Rect, in Rect) public static Rect And(in Rect a, in Rect b) Parameters a Rect b Rect Returns Rect Clamp(int, int, int) public static int Clamp(int x, int min, int max) Parameters x int min int max int Returns int Clamp(float, float, float) public static float Clamp(float x, float min, float max) Parameters x float min float max float Returns float Clamp(uint, uint, uint) public static uint Clamp(uint x, uint min, uint max) Parameters x uint min uint max uint Returns uint CosDegrees(float) public static float CosDegrees(float a) Parameters a float Returns float Cross(in Vector3, in Vector3) public static Vector3 Cross(in Vector3 a, in Vector3 b) Parameters a Vector3 b Vector3 Returns Vector3 Cross(in Vector40, in Vector40) public static Vector40 Cross(in Vector40 a, in Vector40 b) Parameters a Vector40 b Vector40 Returns Vector40 Dot(in Vector2, in Vector2) public static float Dot(in Vector2 a, in Vector2 b) Parameters a Vector2 b Vector2 Returns float Dot(in Vector3, in Vector3) public static float Dot(in Vector3 a, in Vector3 b) Parameters a Vector3 b Vector3 Returns float Dot(in Vector40, in Vector40) public static float Dot(in Vector40 a, in Vector40 b) Parameters a Vector40 b Vector40 Returns float Dot(in Vector40, in Vector41) public static float Dot(in Vector40 a, in Vector41 b) Parameters a Vector40 b Vector41 Returns float Dot(in Vector40, in Vector4) public static float Dot(in Vector40 a, in Vector4 b) Parameters a Vector40 b Vector4 Returns float Dot(in Vector41, in Vector40) public static float Dot(in Vector41 a, in Vector40 b) Parameters a Vector41 b Vector40 Returns float Dot(in Vector41, in Vector41) public static float Dot(in Vector41 a, in Vector41 b) Parameters a Vector41 b Vector41 Returns float Dot(in Vector41, in Vector4) public static float Dot(in Vector41 a, in Vector4 b) Parameters a Vector41 b Vector4 Returns float Dot(in Vector4, in Vector40) public static float Dot(in Vector4 a, in Vector40 b) Parameters a Vector4 b Vector40 Returns float Dot(in Vector4, in Vector41) public static float Dot(in Vector4 a, in Vector41 b) Parameters a Vector4 b Vector41 Returns float Dot(in Vector4, in Vector4) public static float Dot(in Vector4 a, in Vector4 b) Parameters a Vector4 b Vector4 Returns float GetColor(in Vector3) public static uint GetColor(in Vector3 v) Parameters v Vector3 Returns uint GetColor(in Vector4) public static uint GetColor(in Vector4 v) Parameters v Vector4 Returns uint Invert(in Matrix33A) public static Matrix33A Invert(in Matrix33A m) Parameters m Matrix33A Returns Matrix33A Invert(in Matrix33ST) public static Matrix33ST Invert(in Matrix33ST m) Parameters m Matrix33ST Returns Matrix33ST Invert(in Matrix44) public static Matrix44 Invert(in Matrix44 m) Parameters m Matrix44 Returns Matrix44 Invert(in Matrix44A) public static Matrix44A Invert(in Matrix44A m) Parameters m Matrix44A Returns Matrix44A Lerp(int, int, float) public static int Lerp(int v0, int v1, float f) Parameters v0 int v1 int f float Returns int Lerp(float, float, float) public static float Lerp(float v0, float v1, float f) Parameters v0 float v1 float f float Returns float Lerp(in Vector2, in Vector2, in float) public static Vector2 Lerp(in Vector2 a, in Vector2 b, in float t) Parameters a Vector2 b Vector2 t float Returns Vector2 Lerp(in Vector3, in Vector3, float) public static Vector3 Lerp(in Vector3 a, in Vector3 b, float t) Parameters a Vector3 b Vector3 t float Returns Vector3 Lerp(in Vector40, in Vector40, in float) public static Vector40 Lerp(in Vector40 a, in Vector40 b, in float f) Parameters a Vector40 b Vector40 f float Returns Vector40 Lerp(in Vector41, in Vector41, float) public static Vector41 Lerp(in Vector41 a, in Vector41 b, float t) Parameters a Vector41 b Vector41 t float Returns Vector41 Lerp(in Vector4, in Vector4, float) public static Vector4 Lerp(in Vector4 a, in Vector4 b, float t) Parameters a Vector4 b Vector4 t float Returns Vector4 LinearToSRGB(in Vector3) public static Vector3 LinearToSRGB(in Vector3 v) Parameters v Vector3 Returns Vector3 LinearToSRGB(in Vector4) public static Vector4 LinearToSRGB(in Vector4 v) Parameters v Vector4 Returns Vector4 MakeRGBAColor(uint) public static Vector4 MakeRGBAColor(uint col) Parameters col uint Returns Vector4 MakeRGBColor(uint) public static Vector3 MakeRGBColor(uint col) Parameters col uint Returns Vector3 Max(in Vector2, in Vector2) public static Vector2 Max(in Vector2 a, in Vector2 b) Parameters a Vector2 b Vector2 Returns Vector2 Max(in Vector3, in Vector3) public static Vector3 Max(in Vector3 a, in Vector3 b) Parameters a Vector3 b Vector3 Returns Vector3 Max(in Vector40, in Vector40) public static Vector40 Max(in Vector40 a, in Vector40 b) Parameters a Vector40 b Vector40 Returns Vector40 Max(in Vector41, in Vector41) public static Vector41 Max(in Vector41 a, in Vector41 b) Parameters a Vector41 b Vector41 Returns Vector41 Max(in Vector4, in Vector4) public static Vector4 Max(in Vector4 a, in Vector4 b) Parameters a Vector4 b Vector4 Returns Vector4 Min(in Vector2, in Vector2) public static Vector2 Min(in Vector2 a, in Vector2 b) Parameters a Vector2 b Vector2 Returns Vector2 Min(in Vector3, in Vector3) public static Vector3 Min(in Vector3 a, in Vector3 b) Parameters a Vector3 b Vector3 Returns Vector3 Min(in Vector40, in Vector40) public static Vector40 Min(in Vector40 a, in Vector40 b) Parameters a Vector40 b Vector40 Returns Vector40 Min(in Vector41, in Vector41) public static Vector41 Min(in Vector41 a, in Vector41 b) Parameters a Vector41 b Vector41 Returns Vector41 Min(in Vector4, in Vector4) public static Vector4 Min(in Vector4 a, in Vector4 b) Parameters a Vector4 b Vector4 Returns Vector4 Mul(in Matrix33, in Matrix33) public static Matrix33 Mul(in Matrix33 a, in Matrix33 b) Parameters a Matrix33 b Matrix33 Returns Matrix33 Mul(in Matrix33, in Vector3) public static Vector3 Mul(in Matrix33 m, in Vector3 v) Parameters m Matrix33 v Vector3 Returns Vector3 Mul(in Matrix33A, in Matrix33A) public static Matrix33A Mul(in Matrix33A a, in Matrix33A b) Parameters a Matrix33A b Matrix33A Returns Matrix33A Mul(in Matrix33A, in Vector2) public static Vector2 Mul(in Matrix33A m, in Vector2 v) Parameters m Matrix33A v Vector2 Returns Vector2 Mul(in Matrix33A, in Vector3) public static Vector3 Mul(in Matrix33A m, in Vector3 v) Parameters m Matrix33A v Vector3 Returns Vector3 Mul(in Matrix33ST, in FRect) public static FRect Mul(in Matrix33ST a, in FRect r) Parameters a Matrix33ST r FRect Returns FRect Mul(in Matrix33ST, in Matrix33ST) public static Matrix33ST Mul(in Matrix33ST a, in Matrix33ST b) Parameters a Matrix33ST b Matrix33ST Returns Matrix33ST Mul(in Matrix33ST, in Vector2) public static Vector2 Mul(in Matrix33ST a, in Vector2 v) Parameters a Matrix33ST v Vector2 Returns Vector2 Mul(in Matrix44, in FRect) public static FRect Mul(in Matrix44 m, in FRect r) Parameters m Matrix44 r FRect Returns FRect Mul(in Matrix44, in Matrix44) public static Matrix44 Mul(in Matrix44 a, in Matrix44 b) Parameters a Matrix44 b Matrix44 Returns Matrix44 Mul(in Matrix44, in Matrix44A) public static Matrix44 Mul(in Matrix44 a, in Matrix44A b) Parameters a Matrix44 b Matrix44A Returns Matrix44 Mul(in Matrix44, in Vector40) public static Vector4 Mul(in Matrix44 m, in Vector40 v) Parameters m Matrix44 v Vector40 Returns Vector4 Mul(in Matrix44, in Vector41) public static Vector4 Mul(in Matrix44 m, in Vector41 v) Parameters m Matrix44 v Vector41 Returns Vector4 Mul(in Matrix44, in Vector4) public static Vector4 Mul(in Matrix44 m, in Vector4 v) Parameters m Matrix44 v Vector4 Returns Vector4 Mul(in Matrix44A, in Matrix44) public static Matrix44 Mul(in Matrix44A a, in Matrix44 b) Parameters a Matrix44A b Matrix44 Returns Matrix44 Mul(in Matrix44A, in Matrix44A) public static Matrix44A Mul(in Matrix44A a, in Matrix44A b) Parameters a Matrix44A b Matrix44A Returns Matrix44A Mul(in Matrix44A, in Vector40) public static Vector40 Mul(in Matrix44A m, in Vector40 v) Parameters m Matrix44A v Vector40 Returns Vector40 Mul(in Matrix44A, in Vector41) public static Vector41 Mul(in Matrix44A m, in Vector41 v) Parameters m Matrix44A v Vector41 Returns Vector41 Mul(in Matrix44A, in Vector4) public static Vector4 Mul(in Matrix44A m, in Vector4 v) Parameters m Matrix44A v Vector4 Returns Vector4 MultiHashCode(params object[]) public static int MultiHashCode(params object[] v) Parameters v object[] Returns int Normalize(in Vector2) public static Vector2 Normalize(in Vector2 a) Parameters a Vector2 Returns Vector2 Normalize(in Vector3) public static Vector3 Normalize(in Vector3 a) Parameters a Vector3 Returns Vector3 Normalize(in Vector40) public static Vector40 Normalize(in Vector40 a) Parameters a Vector40 Returns Vector40 Normalize(in Vector4) public static Vector4 Normalize(in Vector4 a) Parameters a Vector4 Returns Vector4 Or(in Rect, in Rect) public static Rect Or(in Rect a, in Rect b) Parameters a Rect b Rect Returns Rect SRGBToLinear(in Vector3) public static Vector3 SRGBToLinear(in Vector3 v) Parameters v Vector3 Returns Vector3 SRGBToLinear(in Vector4) public static Vector4 SRGBToLinear(in Vector4 v) Parameters v Vector4 Returns Vector4 Saturate(float) public static float Saturate(float x) Parameters x float Returns float SinDegrees(float) public static float SinDegrees(float a) Parameters a float Returns float Transpose(in Matrix33) public static Matrix33 Transpose(in Matrix33 m) Parameters m Matrix33 Returns Matrix33 Transpose(in Matrix44) public static Matrix44 Transpose(in Matrix44 m) Parameters m Matrix44 Returns Matrix44 Transpose(in Matrix44A) public static Matrix44 Transpose(in Matrix44A m) Parameters m Matrix44A Returns Matrix44"
  },
  "api/Ventuz.Vx.Matrix33.html": {
    "href": "api/Ventuz.Vx.Matrix33.html",
    "title": "Struct Matrix33",
    "summary": "Struct Matrix33 Namespace Ventuz.Vx Assembly Ventuz.Extension.dll public struct Matrix33 : IEquatable<Matrix33> Implements IEquatable<Matrix33> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Fields Identity public static readonly Matrix33 Identity Field Value Matrix33 Zero public static readonly Matrix33 Zero Field Value Matrix33 i public Vector3 i Field Value Vector3 j public Vector3 j Field Value Vector3 k public Vector3 k Field Value Vector3 Methods Determinant() public float Determinant() Returns float Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool Equals(Matrix33) public bool Equals(Matrix33 a) Parameters a Matrix33 Returns bool FastEquals(in Matrix33) public bool FastEquals(in Matrix33 a) Parameters a Matrix33 Returns bool GetColumn(int) public Vector3 GetColumn(int column) Parameters column int Returns Vector3 GetHashCode() public override int GetHashCode() Returns int Inverse() public Matrix33 Inverse() Returns Matrix33 RotationXYZ(float, float, float) public static Matrix33 RotationXYZ(float ax, float ay, float az) Parameters ax float ay float az float Returns Matrix33 ToString() public override string ToString() Returns string Transposed() public Matrix33 Transposed() Returns Matrix33"
  },
  "api/Ventuz.Vx.Matrix33A.html": {
    "href": "api/Ventuz.Vx.Matrix33A.html",
    "title": "Struct Matrix33A",
    "summary": "Struct Matrix33A Namespace Ventuz.Vx Assembly Ventuz.Extension.dll public struct Matrix33A : IEquatable<Matrix33A> Implements IEquatable<Matrix33A> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors Matrix33A(Matrix33ST) public Matrix33A(Matrix33ST r) Parameters r Matrix33ST Matrix33A(Matrix44) public Matrix33A(Matrix44 r) Parameters r Matrix44 Matrix33A(Matrix44A) public Matrix33A(Matrix44A r) Parameters r Matrix44A Fields i public Vector2 i Field Value Vector2 j public Vector2 j Field Value Vector2 k public Vector2 k Field Value Vector2 Properties Determinant public float Determinant { get; } Property Value float Identity public static Matrix33A Identity { get; } Property Value Matrix33A IsIdentity public bool IsIdentity { get; } Property Value bool Null public static Matrix33A Null { get; } Property Value Matrix33A Methods Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool Equals(Matrix33A) public bool Equals(Matrix33A a) Parameters a Matrix33A Returns bool FastEquals(in Matrix33A) public bool FastEquals(in Matrix33A a) Parameters a Matrix33A Returns bool GetColumn(int) public Vector3 GetColumn(int column) Parameters column int Returns Vector3 GetHashCode() public override int GetHashCode() Returns int Rotation(float) public static Matrix33A Rotation(float angle) Parameters angle float Returns Matrix33A Rotation(float, Vector2) public static Matrix33A Rotation(float angle, Vector2 center) Parameters angle float center Vector2 Returns Matrix33A Scale(float, float) public Matrix33A Scale(float sx, float sy) Parameters sx float sy float Returns Matrix33A Scaling(float, float) public static Matrix33A Scaling(float sx, float sy) Parameters sx float sy float Returns Matrix33A ToString() public override string ToString() Returns string Translate(float, float) public Matrix33A Translate(float tx, float ty) Parameters tx float ty float Returns Matrix33A Translation(in Vector2) public static Matrix33A Translation(in Vector2 t) Parameters t Vector2 Returns Matrix33A"
  },
  "api/Ventuz.Vx.Matrix33ST.html": {
    "href": "api/Ventuz.Vx.Matrix33ST.html",
    "title": "Struct Matrix33ST",
    "summary": "Struct Matrix33ST Namespace Ventuz.Vx Assembly Ventuz.Extension.dll public struct Matrix33ST : IEquatable<Matrix33ST> Implements IEquatable<Matrix33ST> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors Matrix33ST(float, float, float, float) public Matrix33ST(float sx, float sy, float tx, float ty) Parameters sx float sy float tx float ty float Matrix33ST(in FRect) public Matrix33ST(in FRect r) Parameters r FRect Fields Identity public static readonly Matrix33ST Identity Field Value Matrix33ST Zero public static readonly Matrix33ST Zero Field Value Matrix33ST s public Vector2 s Field Value Vector2 t public Vector2 t Field Value Vector2 Properties Determinant public float Determinant { get; } Property Value float IsIdentity public bool IsIdentity { get; } Property Value bool Methods CalcTransform(int, int, in FRect) public static Matrix33ST CalcTransform(int sx, int sy, in FRect d) Parameters sx int sy int d FRect Returns Matrix33ST CalcTransform(in FRect, in FRect) public static Matrix33ST CalcTransform(in FRect s, in FRect d) Parameters s FRect d FRect Returns Matrix33ST CalcTransform(in Rect, in Rect) public static Matrix33ST CalcTransform(in Rect s, in Rect d) Parameters s Rect d Rect Returns Matrix33ST CalcUnitMapping(int, int, in FRect) public static Matrix33ST CalcUnitMapping(int sx, int sy, in FRect d) Parameters sx int sy int d FRect Returns Matrix33ST Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool Equals(Matrix33ST) public bool Equals(Matrix33ST a) Parameters a Matrix33ST Returns bool FastEquals(in Matrix33ST) public bool FastEquals(in Matrix33ST a) Parameters a Matrix33ST Returns bool GetHashCode() public override int GetHashCode() Returns int ToFRect() public FRect ToFRect() Returns FRect ToString() public override string ToString() Returns string"
  },
  "api/Ventuz.Vx.Matrix44.html": {
    "href": "api/Ventuz.Vx.Matrix44.html",
    "title": "Struct Matrix44",
    "summary": "Struct Matrix44 Namespace Ventuz.Vx Assembly Ventuz.Extension.dll public struct Matrix44 : IEquatable<Matrix44> Implements IEquatable<Matrix44> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors Matrix44(in Matrix33) public Matrix44(in Matrix33 s) Parameters s Matrix33 Matrix44(in Matrix33ST) public Matrix44(in Matrix33ST m) Parameters m Matrix33ST Matrix44(in Matrix44A) public Matrix44(in Matrix44A s) Parameters s Matrix44A Matrix44(in Vector4, in Vector4, in Vector4, in Vector4) public Matrix44(in Vector4 _i, in Vector4 _j, in Vector4 _k, in Vector4 _l) Parameters _i Vector4 _j Vector4 _k Vector4 _l Vector4 Fields Identity public static readonly Matrix44 Identity Field Value Matrix44 Zero public static readonly Matrix44 Zero Field Value Matrix44 i public Vector4 i Field Value Vector4 j public Vector4 j Field Value Vector4 k public Vector4 k Field Value Vector4 l public Vector4 l Field Value Vector4 Properties IsRotated public bool IsRotated { get; } Property Value bool Methods Determinant() public float Determinant() Returns float Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool Equals(Matrix44) public bool Equals(Matrix44 a) Parameters a Matrix44 Returns bool Equals(in Matrix44) public bool Equals(in Matrix44 a) Parameters a Matrix44 Returns bool FastEquals(in Matrix44) public bool FastEquals(in Matrix44 a) Parameters a Matrix44 Returns bool GetColumn(int) public Vector4 GetColumn(int column) Parameters column int Returns Vector4 GetHashCode() public override int GetHashCode() Returns int GetRow(int) public Vector4 GetRow(int column) Parameters column int Returns Vector4 Lerp(in Matrix44, in Matrix44, float) public static Matrix44 Lerp(in Matrix44 a, in Matrix44 b, float t) Parameters a Matrix44 b Matrix44 t float Returns Matrix44 OrthoLH(in float, in float, in float, in float) public static Matrix44 OrthoLH(in float w, in float h, in float zn, in float zf) Parameters w float h float zn float zf float Returns Matrix44 OrthoOffCenterLH(in float, in float, in float, in float, in float, in float) public static Matrix44 OrthoOffCenterLH(in float l, in float r, in float b, in float t, in float zn, in float zf) Parameters l float r float b float t float zn float zf float Returns Matrix44 OrthoOffCenterRH(in float, in float, in float, in float, in float, in float) public static Matrix44 OrthoOffCenterRH(in float l, in float r, in float b, in float t, in float zn, in float zf) Parameters l float r float b float t float zn float zf float Returns Matrix44 OrthoRH(in float, in float, in float, in float) public static Matrix44 OrthoRH(in float w, in float h, in float zn, in float zf) Parameters w float h float zn float zf float Returns Matrix44 PerspectiveFovLH(in float, in float, in float, in float) public static Matrix44 PerspectiveFovLH(in float fovy, in float aspect, in float zn, in float zf) Parameters fovy float aspect float zn float zf float Returns Matrix44 PerspectiveFovRH(in float, in float, in float, in float) public static Matrix44 PerspectiveFovRH(in float fovy, in float aspect, in float zn, in float zf) Parameters fovy float aspect float zn float zf float Returns Matrix44 PerspectiveOffCenterLH(in float, in float, in float, in float, in float, in float) public static Matrix44 PerspectiveOffCenterLH(in float l, in float r, in float b, in float t, in float zn, in float zf) Parameters l float r float b float t float zn float zf float Returns Matrix44 PerspectiveOffCenterRH(in float, in float, in float, in float, in float, in float) public static Matrix44 PerspectiveOffCenterRH(in float l, in float r, in float b, in float t, in float zn, in float zf) Parameters l float r float b float t float zn float zf float Returns Matrix44 Projection(float, float, float, float) public static Matrix44 Projection(float zoom, float aspect, float znear, float zfar) Parameters zoom float aspect float znear float zfar float Returns Matrix44 ProjectionFovX(float, float, float, float) public static Matrix44 ProjectionFovX(float zoom, float aspect, float znear, float zfar) Parameters zoom float aspect float znear float zfar float Returns Matrix44 ProjectionFovY(float, float, float, float) public static Matrix44 ProjectionFovY(float zoom, float aspect, float znear, float zfar) Parameters zoom float aspect float znear float zfar float Returns Matrix44 RotationXYZ(float, float, float) public static Matrix44 RotationXYZ(float ax, float ay, float az) Parameters ax float ay float az float Returns Matrix44 Scale(float) public Matrix44 Scale(float s) Parameters s float Returns Matrix44 SetColumn(int, in Vector4) public void SetColumn(int column, in Vector4 v) Parameters column int v Vector4 ToString() public override string ToString() Returns string Translation(float, float, float) public static Matrix44 Translation(float x, float y, float z) Parameters x float y float z float Returns Matrix44 Translation(in Vector3) public static Matrix44 Translation(in Vector3 vec) Parameters vec Vector3 Returns Matrix44 Operators operator +(in Matrix44, in Matrix44) public static Matrix44 operator +(in Matrix44 a, in Matrix44 b) Parameters a Matrix44 b Matrix44 Returns Matrix44 operator ==(in Matrix44, in Matrix44) public static bool operator ==(in Matrix44 a, in Matrix44 b) Parameters a Matrix44 b Matrix44 Returns bool operator !=(in Matrix44, in Matrix44) public static bool operator !=(in Matrix44 a, in Matrix44 b) Parameters a Matrix44 b Matrix44 Returns bool operator -(in Matrix44, in Matrix44) public static Matrix44 operator -(in Matrix44 a, in Matrix44 b) Parameters a Matrix44 b Matrix44 Returns Matrix44"
  },
  "api/Ventuz.Vx.Matrix44A.html": {
    "href": "api/Ventuz.Vx.Matrix44A.html",
    "title": "Struct Matrix44A",
    "summary": "Struct Matrix44A Namespace Ventuz.Vx Assembly Ventuz.Extension.dll public struct Matrix44A : IEquatable<Matrix44A> Implements IEquatable<Matrix44A> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors Matrix44A(in Matrix33, in Vector3) public Matrix44A(in Matrix33 m, in Vector3 t) Parameters m Matrix33 t Vector3 Matrix44A(in Matrix33A) public Matrix44A(in Matrix33A m) Parameters m Matrix33A Matrix44A(in Matrix33ST) public Matrix44A(in Matrix33ST m) Parameters m Matrix33ST Matrix44A(in Matrix44) public Matrix44A(in Matrix44 m) Parameters m Matrix44 Fields Identity public static readonly Matrix44A Identity Field Value Matrix44A Zero public static readonly Matrix44A Zero Field Value Matrix44A i public Vector40 i Field Value Vector40 j public Vector40 j Field Value Vector40 k public Vector40 k Field Value Vector40 l public Vector41 l Field Value Vector41 Properties Determinant public float Determinant { get; } Property Value float IsIdentity public bool IsIdentity { get; } Property Value bool Methods Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool Equals(Matrix44A) public bool Equals(Matrix44A a) Parameters a Matrix44A Returns bool FastEquals(in Matrix44A) public bool FastEquals(in Matrix44A a) Parameters a Matrix44A Returns bool GetColumn(int) public Vector4 GetColumn(int column) Parameters column int Returns Vector4 GetHashCode() public override int GetHashCode() Returns int Lerp(in Matrix44A, in Matrix44A, float) public static Matrix44A Lerp(in Matrix44A a, in Matrix44A b, float t) Parameters a Matrix44A b Matrix44A t float Returns Matrix44A LookAtLH(in Vector3, in Vector3, in Vector3) public static Matrix44A LookAtLH(in Vector3 eye, in Vector3 at, in Vector3 up) Parameters eye Vector3 at Vector3 up Vector3 Returns Matrix44A LookAtRH(in Vector3, in Vector3, in Vector3) public static Matrix44A LookAtRH(in Vector3 eye, in Vector3 at, in Vector3 up) Parameters eye Vector3 at Vector3 up Vector3 Returns Matrix44A OrthoLH(in float, in float, in float, in float) public static Matrix44A OrthoLH(in float w, in float h, in float zn, in float zf) Parameters w float h float zn float zf float Returns Matrix44A OrthoOffCenterLH(in float, in float, in float, in float, in float, in float) public static Matrix44A OrthoOffCenterLH(in float l, in float r, in float b, in float t, in float zn, in float zf) Parameters l float r float b float t float zn float zf float Returns Matrix44A OrthoOffCenterRH(in float, in float, in float, in float, in float, in float) public static Matrix44A OrthoOffCenterRH(in float l, in float r, in float b, in float t, in float zn, in float zf) Parameters l float r float b float t float zn float zf float Returns Matrix44A OrthoRH(in float, in float, in float, in float) public static Matrix44A OrthoRH(in float w, in float h, in float zn, in float zf) Parameters w float h float zn float zf float Returns Matrix44A RotationAxis(in Vector3, in float) public static Matrix44A RotationAxis(in Vector3 axis, in float angle) Parameters axis Vector3 angle float Returns Matrix44A RotationX(in float) public static Matrix44A RotationX(in float angle) Parameters angle float Returns Matrix44A RotationXYZ(float, float, float) public static Matrix44A RotationXYZ(float ax, float ay, float az) Parameters ax float ay float az float Returns Matrix44A RotationXYZDegrees(float, float, float) public static Matrix44A RotationXYZDegrees(float ax, float ay, float az) Parameters ax float ay float az float Returns Matrix44A RotationY(in float) public static Matrix44A RotationY(in float angle) Parameters angle float Returns Matrix44A RotationYXZ(float, float, float) public static Matrix44A RotationYXZ(float ax, float ay, float az) Parameters ax float ay float az float Returns Matrix44A RotationYXZDegrees(float, float, float) public static Matrix44A RotationYXZDegrees(float ax, float ay, float az) Parameters ax float ay float az float Returns Matrix44A RotationZ(in float) public static Matrix44A RotationZ(in float angle) Parameters angle float Returns Matrix44A RstDegrees(Vector40, Vector3, Vector41, Vector41) public static Matrix44A RstDegrees(Vector40 scale, Vector3 rot, Vector41 trans, Vector41 pivot) Parameters scale Vector40 rot Vector3 trans Vector41 pivot Vector41 Returns Matrix44A Scale(float) public Matrix44A Scale(float s) Parameters s float Returns Matrix44A Scale(float, float, float) public Matrix44A Scale(float sx, float sy, float sz) Parameters sx float sy float sz float Returns Matrix44A Scale(in Matrix44A, float, float, float) public static Matrix44A Scale(in Matrix44A m, float sx, float sy, float sz) Parameters m Matrix44A sx float sy float sz float Returns Matrix44A Scaling(float, float, float) public static Matrix44A Scaling(float sx, float sy, float sz) Parameters sx float sy float sz float Returns Matrix44A Srt(Vector40, Vector3, Vector41) public static Matrix44A Srt(Vector40 scale, Vector3 rot, Vector41 trans) Parameters scale Vector40 rot Vector3 trans Vector41 Returns Matrix44A Srt(in Vector40, in Vector3, in Vector41, in Vector41) public static Matrix44A Srt(in Vector40 scale, in Vector3 rot, in Vector41 trans, in Vector41 pivot) Parameters scale Vector40 rot Vector3 trans Vector41 pivot Vector41 Returns Matrix44A SrtDegrees(Vector40, Vector3, Vector41, Vector41) public static Matrix44A SrtDegrees(Vector40 scale, Vector3 rot, Vector41 trans, Vector41 pivot) Parameters scale Vector40 rot Vector3 trans Vector41 pivot Vector41 Returns Matrix44A SwapXY(in Matrix44A) public static Matrix44A SwapXY(in Matrix44A m) Parameters m Matrix44A Returns Matrix44A ToArray() public float[] ToArray() Returns float[] ToRotationYXZ() public Vector3 ToRotationYXZ() Returns Vector3 ToString() public override string ToString() Returns string Translate(float, float, float) public Matrix44A Translate(float tx, float ty, float tz) Parameters tx float ty float tz float Returns Matrix44A Translation(float, float, float) public static Matrix44A Translation(float sx, float sy, float sz) Parameters sx float sy float sz float Returns Matrix44A Translation(Vector3) public static Matrix44A Translation(Vector3 v) Parameters v Vector3 Returns Matrix44A Operators operator ==(in Matrix44A, in Matrix44A) public static bool operator ==(in Matrix44A a, in Matrix44A b) Parameters a Matrix44A b Matrix44A Returns bool operator !=(in Matrix44A, in Matrix44A) public static bool operator !=(in Matrix44A a, in Matrix44A b) Parameters a Matrix44A b Matrix44A Returns bool"
  },
  "api/Ventuz.Vx.Rect.html": {
    "href": "api/Ventuz.Vx.Rect.html",
    "title": "Struct Rect",
    "summary": "Struct Rect Namespace Ventuz.Vx Assembly Ventuz.Extension.dll Integer rectangle public struct Rect Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors Rect(Rectangle) public Rect(Rectangle r) Parameters r Rectangle Rect(int, int, int, int) public Rect(int X0, int Y0, int X1, int Y1) Parameters X0 int Y0 int X1 int Y1 int Fields x0 Left edge public int x0 Field Value int x1 Right edge public int x1 Field Value int y0 Top edge public int y0 Field Value int y1 Bottom edge public int y1 Field Value int Properties CenterX public int CenterX { get; } Property Value int CenterY public int CenterY { get; } Property Value int InvertEmpty Create rectangle with x0,y0 set to max and x1,y1 set to min. This is useful when trying to find bounding boxes. public static Rect InvertEmpty { get; } Property Value Rect IsEmpty both corners of the rectangle are exactly the same public bool IsEmpty { get; } Property Value bool IsPositive the area of the rectangle is not empty and the x1/y1 corner has larger values than the x0/y0 corner. public bool IsPositive { get; } Property Value bool SizeX public int SizeX { get; } Property Value int SizeY public int SizeY { get; } Property Value int Methods Coverage(in FRect) Find smallest integer rect that covers/encloses floating point rect completely public static Rect Coverage(in FRect r) Parameters r FRect floating point rect Returns Rect integer rect that closely encloses floating point rect, rounding towards outside. Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool Equals(in Rect) public bool Equals(in Rect a) Parameters a Rect Returns bool Extend(int) public Rect Extend(int z) Parameters z int Returns Rect Extend(int, int) public Rect Extend(int x, int y) Parameters x int y int Returns Rect FitAspect(int, int, int, int) create destination rectangle for blitting image into frame. if the image is smaller than the frame, it will be centered public static Rect FitAspect(int imagex, int imagey, int framex, int framey) Parameters imagex int imagey int framex int framey int Returns Rect position of image in frame FitAspectMaxSize(int, int, int, int) create destination rectangle for blitting image into frame. if the image is smaller than the frame, it will be enlarger public static Rect FitAspectMaxSize(int imagex, int imagey, int framex, int framey) Parameters imagex int imagey int framex int framey int Returns Rect position of image in frame FromFRect(in FRect) public static Rect FromFRect(in FRect r) Parameters r FRect Returns Rect FromSize(int, int) public static Rect FromSize(int XS, int YS) Parameters XS int YS int Returns Rect FromSize(int, int, int, int) public static Rect FromSize(int X0, int Y0, int XS, int YS) Parameters X0 int Y0 int XS int YS int Returns Rect GetHashCode() public override int GetHashCode() Returns int Hit(int, int) public bool Hit(int x, int y) Parameters x int y int Returns bool IsCompletelyInside(in Rect) public bool IsCompletelyInside(in Rect r) Parameters r Rect Returns bool IsPartiallyInside(in Rect) public bool IsPartiallyInside(in Rect r) Parameters r Rect Returns bool Map(int, int) Map pixels from rectangle coordinates to 0..1 range. public Vector2 Map(int x, int y) Parameters x int y int Returns Vector2 point in 0..1 range, with (x0,y0) mapped to (0,0) and (x1,y1) to (1,1) Map(float, float) Map pixels from rectangle coordinates to 0..1 range. public Vector2 Map(float x, float y) Parameters x float y float Returns Vector2 point in 0..1 range, with (x0,y0) mapped to (0,0) and (x1,y1) to (1,1) Map(Vector2) Map pixels from rectangle coordinates to 0..1 range. public Vector2 Map(Vector2 a) Parameters a Vector2 point in rectangle coordinate system Returns Vector2 point in 0..1 range, with (x0,y0) mapped to (0,0) and (x1,y1) to (1,1) Move(int, int) public Rect Move(int mx, int my) Parameters mx int my int Returns Rect Scale(float, float) public Rect Scale(float sx, float sy) Parameters sx float sy float Returns Rect Set(int, int, int, int) public void Set(int X0, int Y0, int X1, int Y1) Parameters X0 int Y0 int X1 int Y1 int Sorted() public Rect Sorted() Returns Rect SwapXY() public Rect SwapXY() Returns Rect ToString() public override string ToString() Returns string Unmap(Vector2) Map position in the 0..1 range to rectangle coordinate system public Vector2 Unmap(Vector2 a) Parameters a Vector2 point in 0..1 range Returns Vector2 point in rectangle coordinates, with (0,0) mapped to (x0,y0) and (1,1) mapped to (x1,y1) Operators operator ==(in Rect, in Rect) public static bool operator ==(in Rect a, in Rect b) Parameters a Rect b Rect Returns bool operator !=(in Rect, in Rect) public static bool operator !=(in Rect a, in Rect b) Parameters a Rect b Rect Returns bool"
  },
  "api/Ventuz.Vx.Vector2.html": {
    "href": "api/Ventuz.Vx.Vector2.html",
    "title": "Struct Vector2",
    "summary": "Struct Vector2 Namespace Ventuz.Vx Assembly Ventuz.Extension.dll public struct Vector2 : IEquatable<Vector2> Implements IEquatable<Vector2> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors Vector2(float, float) public Vector2(float X, float Y) Parameters X float Y float Vector2(float[]) public Vector2(float[] arr) Parameters arr float[] Fields MaxValue public static readonly Vector2 MaxValue Field Value Vector2 MinValue public static readonly Vector2 MinValue Field Value Vector2 One2 public static readonly Vector2 One2 Field Value Vector2 Zero public static readonly Vector2 Zero Field Value Vector2 x public float x Field Value float y public float y Field Value float Methods Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool Equals(Vector2) public bool Equals(Vector2 a) Parameters a Vector2 Returns bool FastEquals(in Vector2) public bool FastEquals(in Vector2 a) Parameters a Vector2 Returns bool GetHashCode() public override int GetHashCode() Returns int Length() public float Length() Returns float LengthSquared() public float LengthSquared() Returns float Set(float, float) public void Set(float X, float Y) Parameters X float Y float ToString() public override string ToString() Returns string Operators operator +(in Vector2, in Vector2) public static Vector2 operator +(in Vector2 a, in Vector2 b) Parameters a Vector2 b Vector2 Returns Vector2 operator /(in Vector2, float) public static Vector2 operator /(in Vector2 a, float b) Parameters a Vector2 b float Returns Vector2 operator ==(in Vector2, in Vector2) public static bool operator ==(in Vector2 a, in Vector2 b) Parameters a Vector2 b Vector2 Returns bool operator !=(in Vector2, in Vector2) public static bool operator !=(in Vector2 a, in Vector2 b) Parameters a Vector2 b Vector2 Returns bool operator *(in Vector2, float) public static Vector2 operator *(in Vector2 a, float b) Parameters a Vector2 b float Returns Vector2 operator *(in Vector2, in Vector2) public static Vector2 operator *(in Vector2 a, in Vector2 b) Parameters a Vector2 b Vector2 Returns Vector2 operator -(in Vector2, in Vector2) public static Vector2 operator -(in Vector2 a, in Vector2 b) Parameters a Vector2 b Vector2 Returns Vector2 operator -(in Vector2) public static Vector2 operator -(in Vector2 a) Parameters a Vector2 Returns Vector2"
  },
  "api/Ventuz.Vx.Vector3.html": {
    "href": "api/Ventuz.Vx.Vector3.html",
    "title": "Struct Vector3",
    "summary": "Struct Vector3 Namespace Ventuz.Vx Assembly Ventuz.Extension.dll public struct Vector3 : IEquatable<Vector3> Implements IEquatable<Vector3> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors Vector3(Color) public Vector3(Color c) Parameters c Color Vector3(float, float, float) public Vector3(float X, float Y, float Z) Parameters X float Y float Z float Vector3(float[]) public Vector3(float[] arr) Parameters arr float[] Vector3(in Vector40) public Vector3(in Vector40 a) Parameters a Vector40 Vector3(in Vector41) public Vector3(in Vector41 a) Parameters a Vector41 Fields AxisX public static readonly Vector3 AxisX Field Value Vector3 AxisY public static readonly Vector3 AxisY Field Value Vector3 AxisZ public static readonly Vector3 AxisZ Field Value Vector3 Empty public static readonly Vector3 Empty Field Value Vector3 MaxValue public static readonly Vector3 MaxValue Field Value Vector3 MinValue public static readonly Vector3 MinValue Field Value Vector3 One3 public static readonly Vector3 One3 Field Value Vector3 Zero public static readonly Vector3 Zero Field Value Vector3 x public float x Field Value float y public float y Field Value float z public float z Field Value float Methods Equals(object) public override bool Equals(object a) Parameters a object Returns bool Equals(Vector3) public bool Equals(Vector3 a) Parameters a Vector3 Returns bool FastEquals(in Vector3) public bool FastEquals(in Vector3 a) Parameters a Vector3 Returns bool GetHashCode() public override int GetHashCode() Returns int Length() public float Length() Returns float LengthSquared() public float LengthSquared() Returns float Set(float, float, float) public void Set(float X, float Y, float Z) Parameters X float Y float Z float ToString() public override string ToString() Returns string Operators operator +(in Vector3, in Vector3) public static Vector3 operator +(in Vector3 a, in Vector3 b) Parameters a Vector3 b Vector3 Returns Vector3 operator /(in Vector3, float) public static Vector3 operator /(in Vector3 a, float b) Parameters a Vector3 b float Returns Vector3 operator ==(in Vector3, in Vector3) public static bool operator ==(in Vector3 a, in Vector3 b) Parameters a Vector3 b Vector3 Returns bool operator !=(in Vector3, in Vector3) public static bool operator !=(in Vector3 a, in Vector3 b) Parameters a Vector3 b Vector3 Returns bool operator %(in Vector3, in Vector3) public static Vector3 operator %(in Vector3 a, in Vector3 b) Parameters a Vector3 b Vector3 Returns Vector3 operator *(in Vector3, float) public static Vector3 operator *(in Vector3 a, float b) Parameters a Vector3 b float Returns Vector3 operator *(in Vector3, in Matrix33) public static Vector3 operator *(in Vector3 a, in Matrix33 b) Parameters a Vector3 b Matrix33 Returns Vector3 operator *(in Vector3, in Vector3) public static Vector3 operator *(in Vector3 a, in Vector3 b) Parameters a Vector3 b Vector3 Returns Vector3 operator -(in Vector3, in Vector3) public static Vector3 operator -(in Vector3 a, in Vector3 b) Parameters a Vector3 b Vector3 Returns Vector3 operator -(in Vector3) public static Vector3 operator -(in Vector3 a) Parameters a Vector3 Returns Vector3"
  },
  "api/Ventuz.Vx.Vector4.html": {
    "href": "api/Ventuz.Vx.Vector4.html",
    "title": "Struct Vector4",
    "summary": "Struct Vector4 Namespace Ventuz.Vx Assembly Ventuz.Extension.dll public struct Vector4 : IEquatable<Vector4> Implements IEquatable<Vector4> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors Vector4(Color) public Vector4(Color c) Parameters c Color Vector4(Color, float) public Vector4(Color c, float alpha) Parameters c Color alpha float Vector4(float, float, float, float) public Vector4(float X, float Y, float Z, float W) Parameters X float Y float Z float W float Vector4(float[]) public Vector4(float[] arr) Parameters arr float[] Vector4(in Vector3, float) public Vector4(in Vector3 a, float W) Parameters a Vector3 W float Vector4(in Vector40) public Vector4(in Vector40 a) Parameters a Vector40 Vector4(in Vector41) public Vector4(in Vector41 a) Parameters a Vector41 Fields MaxValue public static readonly Vector4 MaxValue Field Value Vector4 MinValue public static readonly Vector4 MinValue Field Value Vector4 One4 public static readonly Vector4 One4 Field Value Vector4 Zero public static readonly Vector4 Zero Field Value Vector4 w public float w Field Value float x public float x Field Value float y public float y Field Value float z public float z Field Value float Methods Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool Equals(Vector4) public bool Equals(Vector4 a) Parameters a Vector4 Returns bool FastEquals(in Vector4) public bool FastEquals(in Vector4 a) Parameters a Vector4 Returns bool GetHashCode() public override int GetHashCode() Returns int Length() public float Length() Returns float LengthSquared() public float LengthSquared() Returns float Set(float, float, float, float) public void Set(float X, float Y, float Z, float W) Parameters X float Y float Z float W float Set(float, float, in Vector2) public void Set(float a, float b, in Vector2 c) Parameters a float b float c Vector2 Set(in Vector2, float, float) public void Set(in Vector2 a, float b, float c) Parameters a Vector2 b float c float Set(in Vector2, in Vector2) public void Set(in Vector2 a, in Vector2 b) Parameters a Vector2 b Vector2 Set(in Vector3, float) public void Set(in Vector3 c, float W) Parameters c Vector3 W float Set(in Vector40) public void Set(in Vector40 c) Parameters c Vector40 Set(in Vector41) public void Set(in Vector41 c) Parameters c Vector41 Set(in Vector4) public void Set(in Vector4 c) Parameters c Vector4 ToArray() public float[] ToArray() Returns float[] ToColor32() public uint ToColor32() Returns uint ToString() public override string ToString() Returns string Operators operator +(in Vector40, in Vector4) public static Vector4 operator +(in Vector40 a, in Vector4 b) Parameters a Vector40 b Vector4 Returns Vector4 operator +(in Vector41, in Vector4) public static Vector4 operator +(in Vector41 a, in Vector4 b) Parameters a Vector41 b Vector4 Returns Vector4 operator +(in Vector4, in Vector40) public static Vector4 operator +(in Vector4 a, in Vector40 b) Parameters a Vector4 b Vector40 Returns Vector4 operator +(in Vector4, in Vector41) public static Vector4 operator +(in Vector4 a, in Vector41 b) Parameters a Vector4 b Vector41 Returns Vector4 operator +(in Vector4, in Vector4) public static Vector4 operator +(in Vector4 a, in Vector4 b) Parameters a Vector4 b Vector4 Returns Vector4 operator /(in Vector4, float) public static Vector4 operator /(in Vector4 a, float b) Parameters a Vector4 b float Returns Vector4 operator ==(in Vector4, in Vector4) public static bool operator ==(in Vector4 a, in Vector4 b) Parameters a Vector4 b Vector4 Returns bool operator !=(in Vector4, in Vector4) public static bool operator !=(in Vector4 a, in Vector4 b) Parameters a Vector4 b Vector4 Returns bool operator *(in Vector40, in Vector4) public static Vector4 operator *(in Vector40 a, in Vector4 b) Parameters a Vector40 b Vector4 Returns Vector4 operator *(in Vector41, in Vector4) public static Vector4 operator *(in Vector41 a, in Vector4 b) Parameters a Vector41 b Vector4 Returns Vector4 operator *(in Vector4, float) public static Vector4 operator *(in Vector4 a, float b) Parameters a Vector4 b float Returns Vector4 operator *(in Vector4, in Vector40) public static Vector4 operator *(in Vector4 a, in Vector40 b) Parameters a Vector4 b Vector40 Returns Vector4 operator *(in Vector4, in Vector41) public static Vector4 operator *(in Vector4 a, in Vector41 b) Parameters a Vector4 b Vector41 Returns Vector4 operator *(in Vector4, in Vector4) public static Vector4 operator *(in Vector4 a, in Vector4 b) Parameters a Vector4 b Vector4 Returns Vector4 operator -(in Vector40, in Vector4) public static Vector4 operator -(in Vector40 a, in Vector4 b) Parameters a Vector40 b Vector4 Returns Vector4 operator -(in Vector41, in Vector4) public static Vector4 operator -(in Vector41 a, in Vector4 b) Parameters a Vector41 b Vector4 Returns Vector4 operator -(in Vector4, in Vector40) public static Vector4 operator -(in Vector4 a, in Vector40 b) Parameters a Vector4 b Vector40 Returns Vector4 operator -(in Vector4, in Vector41) public static Vector4 operator -(in Vector4 a, in Vector41 b) Parameters a Vector4 b Vector41 Returns Vector4 operator -(in Vector4, in Vector4) public static Vector4 operator -(in Vector4 a, in Vector4 b) Parameters a Vector4 b Vector4 Returns Vector4 operator -(in Vector4) public static Vector4 operator -(in Vector4 a) Parameters a Vector4 Returns Vector4"
  },
  "api/Ventuz.Vx.Vector40.html": {
    "href": "api/Ventuz.Vx.Vector40.html",
    "title": "Struct Vector40",
    "summary": "Struct Vector40 Namespace Ventuz.Vx Assembly Ventuz.Extension.dll public struct Vector40 : IEquatable<Vector40> Implements IEquatable<Vector40> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors Vector40(float, float, float) public Vector40(float X, float Y, float Z) Parameters X float Y float Z float Vector40(float[]) public Vector40(float[] arr) Parameters arr float[] Vector40(in Vector3) public Vector40(in Vector3 a) Parameters a Vector3 Vector40(in Vector41) public Vector40(in Vector41 a) Parameters a Vector41 Fields Zero public static readonly Vector40 Zero Field Value Vector40 x public float x Field Value float y public float y Field Value float z public float z Field Value float Methods Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool Equals(Vector40) public bool Equals(Vector40 a) Parameters a Vector40 Returns bool FastEquals(in Vector40) public bool FastEquals(in Vector40 a) Parameters a Vector40 Returns bool GetHashCode() public override int GetHashCode() Returns int Length() public float Length() Returns float LengthSquared() public float LengthSquared() Returns float Null() public static Vector40 Null() Returns Vector40 Set(float, float, float) public void Set(float X, float Y, float Z) Parameters X float Y float Z float ToString() public override string ToString() Returns string Operators operator +(in Vector40, in Vector40) public static Vector40 operator +(in Vector40 a, in Vector40 b) Parameters a Vector40 b Vector40 Returns Vector40 operator /(in Vector40, float) public static Vector40 operator /(in Vector40 a, float b) Parameters a Vector40 b float Returns Vector40 operator *(in Vector40, float) public static Vector40 operator *(in Vector40 a, float b) Parameters a Vector40 b float Returns Vector40 operator *(in Vector40, in Vector40) public static Vector40 operator *(in Vector40 a, in Vector40 b) Parameters a Vector40 b Vector40 Returns Vector40 operator *(in Vector40, in Vector41) public static Vector40 operator *(in Vector40 a, in Vector41 b) Parameters a Vector40 b Vector41 Returns Vector40 operator *(in Vector41, in Vector40) public static Vector40 operator *(in Vector41 a, in Vector40 b) Parameters a Vector41 b Vector40 Returns Vector40 operator -(in Vector40, in Vector40) public static Vector40 operator -(in Vector40 a, in Vector40 b) Parameters a Vector40 b Vector40 Returns Vector40 operator -(in Vector40) public static Vector40 operator -(in Vector40 a) Parameters a Vector40 Returns Vector40"
  },
  "api/Ventuz.Vx.Vector41.html": {
    "href": "api/Ventuz.Vx.Vector41.html",
    "title": "Struct Vector41",
    "summary": "Struct Vector41 Namespace Ventuz.Vx Assembly Ventuz.Extension.dll public struct Vector41 : IEquatable<Vector41> Implements IEquatable<Vector41> Inherited Members object.Equals(object, object) object.ReferenceEquals(object, object) object.GetType() Constructors Vector41(float, float, float) public Vector41(float X, float Y, float Z) Parameters X float Y float Z float Vector41(float[]) public Vector41(float[] arr) Parameters arr float[] Vector41(in Vector3) public Vector41(in Vector3 a) Parameters a Vector3 Vector41(in Vector40) public Vector41(in Vector40 a) Parameters a Vector40 Fields Zero public static readonly Vector41 Zero Field Value Vector41 x public float x Field Value float y public float y Field Value float z public float z Field Value float Methods Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool Equals(Vector41) public bool Equals(Vector41 a) Parameters a Vector41 Returns bool FastEquals(in Vector41) public bool FastEquals(in Vector41 a) Parameters a Vector41 Returns bool GetHashCode() public override int GetHashCode() Returns int Length() public float Length() Returns float LengthSquared() public float LengthSquared() Returns float Set(float, float, float) public void Set(float X, float Y, float Z) Parameters X float Y float Z float ToString() public override string ToString() Returns string Transform(in Matrix44A) public Vector41 Transform(in Matrix44A mtx) Parameters mtx Matrix44A Returns Vector41 Operators operator +(in Vector40, in Vector41) public static Vector41 operator +(in Vector40 a, in Vector41 b) Parameters a Vector40 b Vector41 Returns Vector41 operator +(in Vector41, in Vector40) public static Vector41 operator +(in Vector41 a, in Vector40 b) Parameters a Vector41 b Vector40 Returns Vector41 operator -(in Vector41, in Vector40) public static Vector41 operator -(in Vector41 a, in Vector40 b) Parameters a Vector41 b Vector40 Returns Vector41 operator -(in Vector41, in Vector41) public static Vector40 operator -(in Vector41 a, in Vector41 b) Parameters a Vector41 b Vector41 Returns Vector40"
  },
  "api/Ventuz.Vx.html": {
    "href": "api/Ventuz.Vx.html",
    "title": "Namespace Ventuz.Vx",
    "summary": "Namespace Ventuz.Vx Classes ColorConverter MathStatic Structs Color4b ColorPrimaries Defines color primaries (red, green blue, white point) in CIE 1931 xy space FRect Floating point rectangle Matrix33 Matrix33A Matrix33ST Matrix44 Matrix44A Rect Integer rectangle Vector2 Vector3 Vector4 Vector40 Vector41"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Ventuz Extension API Reference",
    "summary": "Ventuz Extension API Reference This is the Ventuz Extension API references. All types of the Ventuz Extension API are documented here."
  },
  "guide/index.html": {
    "href": "guide/index.html",
    "title": "Ventuz Extension API Guide",
    "summary": "Ventuz Extension API Guide This is the Ventuz Extension API guide. This collection of documents explain how the Ventuz Extension API works and how it should be used."
  },
  "guide/vx_api_create_and_modifiy_scenes.html": {
    "href": "guide/vx_api_create_and_modifiy_scenes.html",
    "title": "",
    "summary": "Introduction (was, warum, wieso) Abstract Was kann VX – welche APIs gibt es"
  },
  "guide/vx_api_custom_forms.html": {
    "href": "guide/vx_api_custom_forms.html",
    "title": "API: Window Control",
    "summary": "API: Window Control TODO Ralf API: Custom Forms Vx provides the ability to create your own form for Ventuz Designer. Custom forms are managed by the window layout system, means dockable and floating windows store and restore their visibility with the window layout within the designer user interface. For this reason a vx custom form class must provide the VxWindowAttribute to assign a Guid for global identification! [VxWindow(\"B5009177-636C-4698-A803-66A63444E830\", \"My Form\", Description = \"This is a custom form\")] public class MyCustomForm1 : ... All custom form have VxWindowBase has base class. If provides a protected methos OnControlCreated which can be overwritten to get a notification about the control (form). protected override void OnControlCreated(System.Windows.Forms.Control control) { // do something with control } Since VxWindowBase derives from VxUiExtension you are also able to override the style and scene event callback to handle such events public virtual void OnSceneEvent(VxScene scene, VxSceneEvent e) public virtual void OnUIStyleChanged() Floating Window A floating window is a child window of Ventuz Designer. It hosts a given type that derives from System.Windows.Forms.Control. Usually you use a control of type System.Windows.Forms.Form here. Ventuz take care about creating and destroying the form. Your code gets callbacks as usual for ui extensions. Example: [VxWindow(\"F470E9A6-3880-43CD-9E9E-C2E6131936CD\", \"My Floating Window\")] // mandatory [VxIcon(\"VxDocu.myicon.svg\")] // optional public class MyCustomForm1 : VxFloatingWindow<Form1> { // called as soon Form1 is created. this.Control is of type Form1 protected override void OnControlCreated(System.Windows.Forms.Control control) { this.Control.MyCustomInitialize() } // scene event occurred public override void OnSceneEvent(VxScene scene, VxSceneEvent e) { if( e == ActivateSceneInDesigner) this.Control.SceneActivated(scene); } // UI color scheme changed public override void OnUIStyleChanged() { this.Control.RefreshStyle(); } } VxFloatingWindow provides a property Control giving access to the instance of the control it hosts. In the example above it is of type Form1. Dockable Window A dockable window is a child window of Ventuz Designer which is part of the docking system. It hosts a given type that derives from System.Windows.Forms.Control. Usually you use a control of type System.Windows.Forms.Form here. Ventuz take care about creating and destroying the form. Your code gets callbacks as usual for ui extensions as well a callback if the dock situation is changed. Example: [VxWindow(\"F470E9A6-3880-43CD-9E9E-C2E6131936CD\", \"My Floating Window\")] // mandatory [VxIcon(\"VxDocu.myicon.svg\")] // optional public class MyCustomForm1 : VxDockableWindow<Form1> { // called as soon Form1 is created. this.Control is of type Form1 protected override void OnControlCreated(System.Windows.Forms.Control control) { this.Control.MyCustomInitialize() } // scene event occurred public override void OnSceneEvent(VxScene scene, VxSceneEvent e) { if( e == ActivateSceneInDesigner) this.Control.SceneActivated(scene); } // UI color scheme changed public override void OnUIStyleChanged() { this.Control.RefreshStyle(); } // dock situation of Form1 has changed (visibility, docked, document, floating) public override void OnDockSituationChanged(VxDockSituation dockSituation, bool isOpen) { this.Control.NofityDockSituationChanged(dockSituation, isOpen); } } VxDockableWindow provides a property Control giving access to the instance of the control it hosts. In the example above it is of type Form1. Dockable WebView A dockable window is a child window of Ventuz Designer which is part of the docking system which hosts a simple web browser. Ventuz take care about creating and destroying the web browser control. Your code gets callbacks as usual for ui extensions as well a callback if the dock situation is changed. A special callback CoreWebView2InitializationCompleted Caution TODO: be aware of different versions of WebView2. The one you have linked in you Vx project and the one you will receive from Ventuz Example: [VxWindow(\"F470E9A6-3880-43CD-9E9E-C2E6131936CD\", \"My Floating Window\")] // mandatory [VxWebView(home: \"http://www.ventuz.com\", DevTools = true, AcceleratorKeys = true)] // mandatory [VxIcon(\"VxDocu.myicon.svg\")] // optional public class MyCustomForm1 : VxDockableWebView { // called as soon Form1 is created. this.Control is of type Form1 protected override void OnControlCreated(System.Windows.Forms.Control control) { this.Control.MyCustomInitialize() } // scene event occurred public override void OnSceneEvent(VxScene scene, VxSceneEvent e) { if( e == ActivateSceneInDesigner) this.Control.SceneActivated(scene); } // UI color scheme changed public override void OnUIStyleChanged() { this.Control.RefreshStyle(); } // dock situation of Form1 has changed (visibility, docked, document, floating) public override void OnDockSituationChanged(VxDockSituation dockSituation, bool isOpen) { this.Control.NofityDockSituationChanged(dockSituation, isOpen); } // as soon the WebView core component is created this method is called // use this callback to configure the WebView2 and register callbacks. public override void CoreWebView2InitializationCompleted(object CoreWebView2) { } } Note Information the user should notice even if skimming. Tip Optional information to help a user be more successful. Important Essential information required for user success. Caution Negative potential consequences of an action. Warning Dangerous certain consequences of an action."
  },
  "guide/vx_api_custom_nodes.html": {
    "href": "guide/vx_api_custom_nodes.html",
    "title": "API: Custom Nodes",
    "summary": "API: Custom Nodes TODO Node Types and base classes Content Nodes VxContentNode VxContentContainer Hierarchy Nodes VxHierarchyNode, VxHierarchyContainer Layer Nodes VxLayerNode VxLayerContainer Validation (was ist das, Abhängigkeiten der properties, BGroups) Methods and Events TODO: change type Event to VxEvent or so.. Custom Property Groups and Presets Generate Resources Custom Resources Rendering UI Verbs Supported property types Intermediate types (_XYZ) Int, float, …. Arrays Enums Resources, custom resources Materials"
  },
  "guide/vx_api_data_object_handler.html": {
    "href": "guide/vx_api_data_object_handler.html",
    "title": "API: Data Object Handler",
    "summary": "API: Data Object Handler TODO"
  },
  "guide/vx_api_main_menu.html": {
    "href": "guide/vx_api_main_menu.html",
    "title": "API: Main Menu",
    "summary": "API: Main Menu TODO"
  },
  "guide/vx_api_services.html": {
    "href": "guide/vx_api_services.html",
    "title": "API: Services",
    "summary": "API: Services Ventuz.Extension.VxSimpleService TODO"
  },
  "guide/vx_attributes.html": {
    "href": "guide/vx_attributes.html",
    "title": "Attributes",
    "summary": "Attributes TODO"
  },
  "guide/vx_how_does_ventuz_work.html": {
    "href": "guide/vx_how_does_ventuz_work.html",
    "title": "How does Ventuz work?",
    "summary": "How does Ventuz work? TODO Projects and scenes validation, rendering phases main thread and UI, background validation, properties, property groups, presets, methods, events, b-groups layer, hierarchy, links, he-outputs resources"
  },
  "guide/vx_how_to_develop.html": {
    "href": "guide/vx_how_to_develop.html",
    "title": "How to develop",
    "summary": "How to develop TODO Björn Requirements (VS, Project Typ, Build Type, Dependencies) TODO Björn Visual Studio / NET Project TODO Björn Develop / Debug TODO Björn Deployment and Versioning TODO Björn Code API Design Concept Conventions Vx is based on reflection, which means that the Vx Engine examines the declarations and types found in a Vx package. Implementors must derive from a Vx base class, implement a Vx interface or attach a Vx attribute. Required metadata such as display names, icons, descriptions, or user help references is not mandatory, so implementations will work even if such metadata is not provided. This drastically improves turnaround times and prototyping speed. Normally, user code never manually creates vx instances. The instance handling (creating/deleting) is done by the Vx engine in Ventuz. Only custom objects required for business logic of the implementor are completely under user control. The implementor is then also responsible to clean-up memory for custom instances while Vx takes care about the Vx objects. Vx is a proxy-based API, which means that the Vx classes and their derivatives and implementations (mostly) only represent a proxy to the real object behind. This proxy class are of type VxBase. For example, a class of type VxNode doesn't represent the real node in Ventuz, but acts as a proxy pointing to the real internal object. This abstraction helps to keep the Vx APIs simple. Also the vx code (the actual extension) derives from such proxies. Type references and aliases Types on Vx and Ventuz side can be handled as a strong type reference (e.g. typeof(Ventuz.Intrinsic.World.Axis)). every type in the Vx world as a type alias of type string. The axis for example could also be addressed by its alias \"IntrComp.World.Axis\". A custom Vx type can provide the VxTypeAliasAttribute to specify the alias name. Using aliases help to maintain compatibility and versioning without strong but symbolic references. Ventuz is using this technique to write scene to disk on make sure that such scenes can be loaded even if the Vx code is not existent. API interfaces Whenever a Vx code needs to call the API an interface method is provided in the static class Ventuz.Extension.VX. The VX class has several property getters to get the implementaion object of the API which provides methods to get or set values or to call a function. Some examples of such APIs are IO, Project, Engine, Log, Renderer, Resources, UI, Designer or SceneBuilder. Please note that not all APIs are available in all threads, contexts or phases (see also Threading and Scene Phases). Also, certain interfaces are not available in Ventuz Runtime because they represent APIs to Ventuz Designer. Therefore, certain implementations of Vx classes are not used or created in Ventuz Runtime because they represent an extension without any effect in Ventuz Runtime, only in Ventuz Designer. Many Vx base classes (of type VxBase) provide local properties or methods. This are implementations for convenience since they only use the API calls provided in the VX interface. Almost all VX interface calls have the actual object as its first parameter (like a this pointer). The convenience accessors simply insert this when calling the API. Threading Ventuz is a real-time rendering engine that is based and databindings and fast evaluation of expressions and dependencies. Parallelization and multi-threading is very important to provide speed and liability. Whenever code from custom implementors is called you have to be aware in which thread you are and which APIs and functions are available and valid to be called. As long the implemented code is called synchroneously Ventuz takes care about the correct thread and object locking. But if you implement your own threads or if you use async tasks, you have to make sure that certain API calls are dispatched to the right thread. Otherwise you will faces dead-lock, exceptions or worst cases crashes. As an example, if any API to the Ventuz Designer is called it must be sure that this is execute on the main thread. The Vx framework provides multiple functions to synchronize such calls to the correct thread. Custom thread must be started and even more imported shutdown correctly because Ventuz has no control about them. Thus, implementing Vx code utilizing threads, tasks or async coding requires good experience and proper testing. Scene Phases A scene lives in multiple phases during its life-cycle and rendering. It is important to understant this different phases and being aware of when certain API calls are possible. Initializing Whenever Ventuz loads a scene into memory the handle to that scene is already available, but you can't access it in any ways until it was fully loaded. Disposed You may still hold a reference to a scene which was unloaded from memory. In this case this scene is in its Disposed Phase. Any call to its API will run into an ObjectDisposedException Idle If a scene is in Idle Phase you are able to access or modify its structure. You can find/create nodes, create bindings, read/write property values. Please note that modifications on the structure of a scene (nodes, links, bindings) will cause a re-calculation of certain optimizations in the background. Whenever Ventuz Designer modifies the scene (e.g. inserting a node) this calculation takes place. This calucation takes time and is usually not real-time capable. If Vx code want to modify the structure it should be either done in Ventuz Designer (building scenes) or if the scene is currently not renderered. Otherwise the renderer will stall and frames will be dropped. Reading the structure is ok and won't stall the renderer. Property values in Ventuz are store at the nodes, but the actual dependency between nodes are handled via bindings. So simply setting a value during the Validation Phase is not the right way of doing it. Transferring data from one node to another must be handled in the Validation Phase by properly implementing custom nodes. Setting property values is a modification of the scene and must therefore be done in the Idle Phase. Most the modification mathod in Ventuz.Extension.VX.SceneBuilder require the scene in Idle Phase. Custom Verbs of nodes are always executed in the Idle Phase because they are initiated from the user interface (GUI). Validation The Validation Phase it the time when the Ventuz Engine processes all data withing a scene. First, values are generated, loaded or processed (e.g. Mover nodes, remoting commands, etc), then secondly all other nodes are processed by their dependencies to each other. In the Validation Phase only nodes are processed whose are marked as Invalid. Nodes turn into this state any bound property was marked as Invalid by its sending node. A Mover for example invalidates every frame and all connected noted will be invalid every frame too. The invalidation of a value is not only if a value of a property has changes. The inavlid state can also be given if a node says so. For custom nodes Vx provides an API call to invalidate nodes. In the Validation Phase you should not read or write any properties from any nodes (SceneBuilder API), because this would break the dependency system and cause to weirs behavior of the scene in rendering and latencies. Managing data between nodes must be implemented in the validation methods of custom nodes. During this phase, some API calls are available for creating resources (Texture, Geometries, ...), invalidate other nodes and more. Rendering After the Validation Phase the Rendering Phase follows as long the scene is part of the active scene tree in the rendering. Thus, a scene can be validated without rendering it. Within the rendering Phase a custom node can issue API calls that affects the rendering only, like RenderText() or RenderMesh(). In this phase you should not access the scene and/or call any validation APIs anymore."
  },
  "guide/vx_introduction.html": {
    "href": "guide/vx_introduction.html",
    "title": "Introduction",
    "summary": "Introduction Ventuz Extension, or Vx for short, is an SDK/API that extends the functionality of Ventuz in several areas. A user of this API is able to extend the user experience, functionality, visual appearance or integration capabilities with other systems and infrastructures as well as 3rd party software. Available APIs Vx provides various APIs or interfaces to gain control over certain things in Ventuz. Some of them only affect Ventuz Designer, while others control the behavior of rendering. General Logging File IO Custom Nodes Texture Provider Geometry/Mesh Provider Custom Resources Text Rendering Mesh Rendering Scene Builder Custom Services Extensions for Ventuz Designer Project io/import/exports Data Handlers (for copy/paste & drag/drop) Custom Forms and Windows Custom Menus General control and callbacks"
  },
  "guide/vx_known_issues.html": {
    "href": "guide/vx_known_issues.html",
    "title": "Known Issues",
    "summary": "Known Issues TODO Dependencies libraries (die, die auch von Ventuz verwendet werden) Delete nodes?"
  },
  "guide/vx_roadmap.html": {
    "href": "guide/vx_roadmap.html",
    "title": "Roadmap",
    "summary": "Roadmap TODO Nuget MemoryMap / Span / Resources / native memory"
  },
  "index.html": {
    "href": "index.html",
    "title": "Ventuz Extension API",
    "summary": "Ventuz Extension API This documentation contains the Ventuz Extension API reference and a step by step guide on how to create your own Ventuz extension using the Ventuz Extension API. Important This documentation is work in progress as the Ventuz Extension API is. The documentation is still work in progress and will be periodically updated. For questions, requests and other communication, feel free to open an issue in the VentuzExtensions repository. Version Current version: 48421. History 2025-03-12 Update (48421). 2025-03-11 Initial version (48409)."
  }
}